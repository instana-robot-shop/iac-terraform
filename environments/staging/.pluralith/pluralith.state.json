[{
 "configuration": {
  "provider_config": {
   "aws": {
    "expressions": {
     "access_key": {
      "references": [
       "var.credentials[\"access_key\"]",
       "var.credentials"
      ]
     },
     "region": {
      "references": [
       "var.region[0]",
       "var.region"
      ]
     },
     "secret_key": {
      "references": [
       "var.credentials[\"secret_key\"]",
       "var.credentials"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/aws",
    "name": "aws"
   },
   "helm": {
    "full_name": "registry.terraform.io/hashicorp/helm",
    "name": "helm",
    "version_constraint": "\u003e= 2.6.0"
   },
   "kubectl": {
    "full_name": "registry.terraform.io/gavinbunney/kubectl",
    "name": "kubectl",
    "version_constraint": "\u003e= 1.14.0"
   },
   "module.eks.module.eks_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.eks_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks.module.self_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.self_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks:kubernetes": {
    "full_name": "registry.terraform.io/hashicorp/kubernetes",
    "module_address": "module.eks",
    "name": "kubernetes",
    "version_constraint": "\u003e= 2.10.0"
   },
   "module.eks:tls": {
    "full_name": "registry.terraform.io/hashicorp/tls",
    "module_address": "module.eks",
    "name": "tls",
    "version_constraint": "\u003e= 3.0.0"
   }
  },
  "root_module": {
   "module_calls": {
    "allow_assume_eks_admins_iam_policy": {
     "expressions": {
      "create_policy": {
       "constant_value": true
      },
      "name": {
       "constant_value": "allow-assume-eks-admin-iam-role"
      },
      "policy": {
       "references": [
        "module.eks_admins_iam_role.iam_role_arn",
        "module.eks_admins_iam_role"
       ]
      }
     },
     "module": {
      "outputs": {
       "arn": {
        "description": "The ARN assigned by AWS to this policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].arn",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "description": {
        "description": "The description of the policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].description",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "id": {
        "description": "The policy's ID",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].id",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "name": {
        "description": "The name of the policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].name",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "path": {
        "description": "The path of the policy in IAM",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].path",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "policy": {
        "description": "The policy document",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].policy",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_iam_policy.policy",
        "count_expression": {
         "references": [
          "var.create_policy"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.description"
          ]
         },
         "name": {
          "references": [
           "var.name"
          ]
         },
         "path": {
          "references": [
           "var.path"
          ]
         },
         "policy": {
          "references": [
           "var.policy"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       }
      ],
      "variables": {
       "create_policy": {
        "default": true,
        "description": "Whether to create the IAM policy"
       },
       "description": {
        "default": "IAM Policy",
        "description": "The description of the policy"
       },
       "name": {
        "default": "",
        "description": "The name of the policy"
       },
       "path": {
        "default": "/",
        "description": "The path of the policy in IAM"
       },
       "policy": {
        "default": "",
        "description": "The path of the policy in IAM (tpl file)"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources."
       }
      }
     },
     "source": "terraform-aws-modules/iam/aws//modules/iam-policy",
     "version_constraint": "5.3.1"
    },
    "allow_eks_access_iam_policy": {
     "expressions": {
      "create_policy": {
       "constant_value": true
      },
      "name": {
       "constant_value": "allow-eks-access"
      },
      "policy": {}
     },
     "module": {
      "outputs": {
       "arn": {
        "description": "The ARN assigned by AWS to this policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].arn",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "description": {
        "description": "The description of the policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].description",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "id": {
        "description": "The policy's ID",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].id",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "name": {
        "description": "The name of the policy",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].name",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "path": {
        "description": "The path of the policy in IAM",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].path",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       },
       "policy": {
        "description": "The policy document",
        "expression": {
         "references": [
          "aws_iam_policy.policy[0].policy",
          "aws_iam_policy.policy[0]",
          "aws_iam_policy.policy"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_iam_policy.policy",
        "count_expression": {
         "references": [
          "var.create_policy"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.description"
          ]
         },
         "name": {
          "references": [
           "var.name"
          ]
         },
         "path": {
          "references": [
           "var.path"
          ]
         },
         "policy": {
          "references": [
           "var.policy"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       }
      ],
      "variables": {
       "create_policy": {
        "default": true,
        "description": "Whether to create the IAM policy"
       },
       "description": {
        "default": "IAM Policy",
        "description": "The description of the policy"
       },
       "name": {
        "default": "",
        "description": "The name of the policy"
       },
       "path": {
        "default": "/",
        "description": "The path of the policy in IAM"
       },
       "policy": {
        "default": "",
        "description": "The path of the policy in IAM (tpl file)"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources."
       }
      }
     },
     "source": "terraform-aws-modules/iam/aws//modules/iam-policy",
     "version_constraint": "5.3.1"
    },
    "ecr": {
     "expressions": {
      "repository_image_scan_on_push": {
       "constant_value": true
      },
      "repository_lifecycle_policy": {},
      "repository_name": {
       "constant_value": "snapshot"
      },
      "repository_read_write_access_arns": {
       "constant_value": [
        "arn:aws:iam::012345678901:role/terraform"
       ]
      },
      "repository_type": {
       "constant_value": "private"
      },
      "tags": {
       "references": [
        "var.environment"
       ]
      }
     },
     "module": {
      "outputs": {
       "repository_arn": {
        "description": "Full ARN of the repository",
        "expression": {
         "references": [
          "aws_ecr_repository.this[0].arn",
          "aws_ecr_repository.this[0]",
          "aws_ecr_repository.this",
          "aws_ecrpublic_repository.this[0].arn",
          "aws_ecrpublic_repository.this[0]",
          "aws_ecrpublic_repository.this"
         ]
        }
       },
       "repository_registry_id": {
        "description": "The registry ID where the repository was created",
        "expression": {
         "references": [
          "aws_ecr_repository.this[0].registry_id",
          "aws_ecr_repository.this[0]",
          "aws_ecr_repository.this",
          "aws_ecrpublic_repository.this[0].registry_id",
          "aws_ecrpublic_repository.this[0]",
          "aws_ecrpublic_repository.this"
         ]
        }
       },
       "repository_url": {
        "description": "The URL of the repository",
        "expression": {
         "references": [
          "aws_ecr_repository.this[0].repository_url",
          "aws_ecr_repository.this[0]",
          "aws_ecr_repository.this",
          "aws_ecrpublic_repository.this[0].repository_uri",
          "aws_ecrpublic_repository.this[0]",
          "aws_ecrpublic_repository.this"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_ecr_lifecycle_policy.this",
        "count_expression": {
         "references": [
          "local.create_private_repository",
          "var.create_lifecycle_policy"
         ]
        },
        "expressions": {
         "policy": {
          "references": [
           "var.repository_lifecycle_policy"
          ]
         },
         "repository": {
          "references": [
           "aws_ecr_repository.this[0].name",
           "aws_ecr_repository.this[0]",
           "aws_ecr_repository.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_lifecycle_policy"
       },
       {
        "address": "aws_ecr_pull_through_cache_rule.this",
        "expressions": {
         "ecr_repository_prefix": {
          "references": [
           "each.value.ecr_repository_prefix",
           "each.value"
          ]
         },
         "upstream_registry_url": {
          "references": [
           "each.value.upstream_registry_url",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.registry_pull_through_cache_rules",
          "var.create"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_pull_through_cache_rule"
       },
       {
        "address": "aws_ecr_registry_policy.this",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_registry_policy"
         ]
        },
        "expressions": {
         "policy": {
          "references": [
           "var.registry_policy"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_registry_policy"
       },
       {
        "address": "aws_ecr_registry_scanning_configuration.this",
        "count_expression": {
         "references": [
          "var.create",
          "var.manage_registry_scanning_configuration"
         ]
        },
        "expressions": {
         "scan_type": {
          "references": [
           "var.registry_scan_type"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_registry_scanning_configuration"
       },
       {
        "address": "aws_ecr_replication_configuration.this",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_registry_replication_configuration"
         ]
        },
        "expressions": {
         "replication_configuration": [
          {}
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_replication_configuration"
       },
       {
        "address": "aws_ecr_repository.this",
        "count_expression": {
         "references": [
          "local.create_private_repository"
         ]
        },
        "expressions": {
         "encryption_configuration": [
          {
           "encryption_type": {
            "references": [
             "var.repository_encryption_type"
            ]
           },
           "kms_key": {
            "references": [
             "var.repository_kms_key"
            ]
           }
          }
         ],
         "force_delete": {
          "references": [
           "var.repository_force_delete"
          ]
         },
         "image_scanning_configuration": [
          {
           "scan_on_push": {
            "references": [
             "var.repository_image_scan_on_push"
            ]
           }
          }
         ],
         "image_tag_mutability": {
          "references": [
           "var.repository_image_tag_mutability"
          ]
         },
         "name": {
          "references": [
           "var.repository_name"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_repository"
       },
       {
        "address": "aws_ecr_repository_policy.this",
        "count_expression": {
         "references": [
          "local.create_private_repository",
          "var.attach_repository_policy"
         ]
        },
        "expressions": {
         "policy": {
          "references": [
           "var.create_repository_policy",
           "data.aws_iam_policy_document.repository[0].json",
           "data.aws_iam_policy_document.repository[0]",
           "data.aws_iam_policy_document.repository",
           "var.repository_policy"
          ]
         },
         "repository": {
          "references": [
           "aws_ecr_repository.this[0].name",
           "aws_ecr_repository.this[0]",
           "aws_ecr_repository.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecr_repository_policy"
       },
       {
        "address": "aws_ecrpublic_repository.this",
        "count_expression": {
         "references": [
          "local.create_public_repository"
         ]
        },
        "expressions": {
         "repository_name": {
          "references": [
           "var.repository_name"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecrpublic_repository"
       },
       {
        "address": "aws_ecrpublic_repository_policy.example",
        "count_expression": {
         "references": [
          "local.create_public_repository"
         ]
        },
        "expressions": {
         "policy": {
          "references": [
           "var.create_repository_policy",
           "data.aws_iam_policy_document.repository[0].json",
           "data.aws_iam_policy_document.repository[0]",
           "data.aws_iam_policy_document.repository",
           "var.repository_policy"
          ]
         },
         "repository_name": {
          "references": [
           "aws_ecrpublic_repository.this[0].repository_name",
           "aws_ecrpublic_repository.this[0]",
           "aws_ecrpublic_repository.this"
          ]
         }
        },
        "mode": "managed",
        "name": "example",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ecrpublic_repository_policy"
       },
       {
        "address": "data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_iam_policy_document.repository",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_repository",
          "var.create_repository_policy"
         ]
        },
        "mode": "data",
        "name": "repository",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_partition"
       }
      ],
      "variables": {
       "attach_repository_policy": {
        "default": true,
        "description": "Determines whether a repository policy will be attached to the repository"
       },
       "create": {
        "default": true,
        "description": "Determines whether resources will be created (affects all resources)"
       },
       "create_lifecycle_policy": {
        "default": true,
        "description": "Determines whether a lifecycle policy will be created"
       },
       "create_registry_policy": {
        "default": false,
        "description": "Determines whether a registry policy will be created"
       },
       "create_registry_replication_configuration": {
        "default": false,
        "description": "Determines whether a registry replication configuration will be created"
       },
       "create_repository": {
        "default": true,
        "description": "Determines whether a repository will be created"
       },
       "create_repository_policy": {
        "default": true,
        "description": "Determines whether a repository policy will be created"
       },
       "manage_registry_scanning_configuration": {
        "default": false,
        "description": "Determines whether the registry scanning configuration will be managed"
       },
       "public_repository_catalog_data": {
        "default": {},
        "description": "Catalog data configuration for the repository"
       },
       "registry_policy": {
        "default": null,
        "description": "The policy document. This is a JSON formatted string"
       },
       "registry_pull_through_cache_rules": {
        "default": {},
        "description": "List of pull through cache rules to create"
       },
       "registry_replication_rules": {
        "default": [],
        "description": "The replication rules for a replication configuration. A maximum of 10 are allowed"
       },
       "registry_scan_rules": {
        "default": [],
        "description": "One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur"
       },
       "registry_scan_type": {
        "default": "ENHANCED",
        "description": "the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`"
       },
       "repository_encryption_type": {
        "default": null,
        "description": "The encryption type for the repository. Must be one of: `KMS` or `AES256`. Defaults to `AES256`"
       },
       "repository_force_delete": {
        "default": null,
        "description": "If `true`, will delete the repository even if it contains images. Defaults to `false`"
       },
       "repository_image_scan_on_push": {
        "default": true,
        "description": "Indicates whether images are scanned after being pushed to the repository (`true`) or not scanned (`false`)"
       },
       "repository_image_tag_mutability": {
        "default": "IMMUTABLE",
        "description": "The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `IMMUTABLE`"
       },
       "repository_kms_key": {
        "default": null,
        "description": "The ARN of the KMS key to use when encryption_type is `KMS`. If not specified, uses the default AWS managed key for ECR"
       },
       "repository_lambda_read_access_arns": {
        "default": [],
        "description": "The ARNs of the Lambda service roles that have read access to the repository"
       },
       "repository_lifecycle_policy": {
        "default": "",
        "description": "The policy document. This is a JSON formatted string. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs"
       },
       "repository_name": {
        "default": "",
        "description": "The name of the repository"
       },
       "repository_policy": {
        "default": null,
        "description": "The JSON policy to apply to the repository. If not specified, uses the default policy"
       },
       "repository_read_access_arns": {
        "default": [],
        "description": "The ARNs of the IAM users/roles that have read access to the repository"
       },
       "repository_read_write_access_arns": {
        "default": [],
        "description": "The ARNs of the IAM users/roles that have read/write access to the repository"
       },
       "repository_type": {
        "default": "private",
        "description": "The type of repository to create. Either `public` or `private`"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       }
      }
     },
     "source": "terraform-aws-modules/ecr/aws"
    },
    "eks": {
     "expressions": {
      "cluster_endpoint_private_access": {
       "constant_value": true
      },
      "cluster_endpoint_public_access": {
       "constant_value": true
      },
      "cluster_name": {
       "constant_value": "my-eks"
      },
      "cluster_version": {
       "constant_value": "1.23"
      },
      "eks_managed_node_group_defaults": {
       "constant_value": {
        "disk_size": 50
       }
      },
      "eks_managed_node_groups": {
       "constant_value": {
        "general": {
         "capacity_type": "ON_DEMAND",
         "desired_size": 1,
         "instance_types": [
          "t3.small"
         ],
         "labels": {
          "role": "general"
         },
         "max_size": 10,
         "min_size": 1
        },
        "spot": {
         "capacity_type": "SPOT",
         "desired_size": 1,
         "instance_types": [
          "t3.micro"
         ],
         "labels": {
          "role": "spot"
         },
         "max_size": 10,
         "min_size": 1,
         "taints": [
          {
           "effect": "NO_SCHEDULE",
           "key": "market",
           "value": "spot"
          }
         ]
        }
       }
      },
      "enable_irsa": {
       "constant_value": true
      },
      "subnet_ids": {
       "references": [
        "module.vpc.private_subnets",
        "module.vpc"
       ]
      },
      "tags": {
       "references": [
        "var.environment"
       ]
      },
      "vpc_id": {
       "references": [
        "module.vpc.vpc_id",
        "module.vpc"
       ]
      }
     },
     "module": {
      "module_calls": {
       "eks_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_release_version": {
          "references": [
           "each.value.ami_release_version",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_release_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_type": {
          "references": [
           "each.value.ami_type",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.eks_managed_node_group_defaults.block_device_mappings",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.eks_managed_node_group_defaults.bootstrap_extra_args",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_reservation_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_type": {
          "references": [
           "each.value.capacity_type",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "aws_eks_cluster.this[0].certificate_authority[0].data",
           "aws_eks_cluster.this[0].certificate_authority[0]",
           "aws_eks_cluster.this[0].certificate_authority",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "aws_eks_cluster.this[0].endpoint",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.eks_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.eks_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_security_group_id": {
          "references": [
           "local.cluster_security_group_id"
          ]
         },
         "cluster_service_ipv4_cidr": {
          "references": [
           "var.cluster_service_ipv4_cidr"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.eks_managed_node_group_defaults.cluster_version",
           "var.eks_managed_node_group_defaults",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.eks_managed_node_group_defaults.cpu_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.eks_managed_node_group_defaults.create_iam_role",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.eks_managed_node_group_defaults.create_launch_template",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_security_group": {
          "references": [
           "each.value.create_security_group",
           "each.value",
           "var.eks_managed_node_group_defaults.create_security_group",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.credit_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.eks_managed_node_group_defaults.desired_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.eks_managed_node_group_defaults.disable_api_termination",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disk_size": {
          "references": [
           "each.value.disk_size",
           "each.value",
           "var.eks_managed_node_group_defaults.disk_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.eks_managed_node_group_defaults.ebs_optimized",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_gpu_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_inference_accelerator",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_bootstrap_user_data": {
          "references": [
           "each.value.enable_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_monitoring",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.eks_managed_node_group_defaults.enclave_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "force_update_version": {
          "references": [
           "each.value.force_update_version",
           "each.value",
           "var.eks_managed_node_group_defaults.force_update_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_additional_policies",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_arn",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_description",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_market_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_types": {
          "references": [
           "each.value.instance_types",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_types",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.eks_managed_node_group_defaults.kernel_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.eks_managed_node_group_defaults.key_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "labels": {
          "references": [
           "each.value.labels",
           "each.value",
           "var.eks_managed_node_group_defaults.labels",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_description",
           "var.eks_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_name",
           "var.eks_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.license_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.eks_managed_node_group_defaults.max_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.eks_managed_node_group_defaults.metadata_options",
           "var.eks_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.eks_managed_node_group_defaults.min_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.eks_managed_node_group_defaults.network_interfaces",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.eks_managed_node_group_defaults.placement",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.eks_managed_node_group_defaults.platform",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.post_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ram_disk_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "remote_access": {
          "references": [
           "each.value.remote_access",
           "each.value",
           "var.eks_managed_node_group_defaults.remote_access",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_description": {
          "references": [
           "each.value.security_group_description",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_description",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_name": {
          "references": [
           "each.value.security_group_name",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_rules": {
          "references": [
           "each.value.security_group_rules",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_rules",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_tags": {
          "references": [
           "each.value.security_group_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_use_name_prefix": {
          "references": [
           "each.value.security_group_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.subnet_ids",
           "var.eks_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.eks_managed_node_group_defaults.tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "taints": {
          "references": [
           "each.value.taints",
           "each.value",
           "var.eks_managed_node_group_defaults.taints",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.eks_managed_node_group_defaults.timeouts",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "update_config": {
          "references": [
           "each.value.update_config",
           "each.value",
           "var.eks_managed_node_group_defaults.update_config",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.update_launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.eks_managed_node_group_defaults.user_data_template_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "vpc_id": {
          "references": [
           "each.value.vpc_id",
           "each.value",
           "var.eks_managed_node_group_defaults.vpc_id",
           "var.eks_managed_node_group_defaults",
           "var.vpc_id"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.vpc_security_group_ids",
           "var.eks_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.eks_managed_node_groups",
          "var.create"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "cluster_service_ipv4_cidr": {
             "references": [
              "var.cluster_service_ipv4_cidr"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "references": [
              "var.enable_bootstrap_user_data"
             ]
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.eks_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "node_group_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].arn",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_autoscaling_group_names": {
           "description": "List of the autoscaling group names",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_id": {
           "description": "EKS Cluster name and EKS Node Group name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].id",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_labels": {
           "description": "Map of labels applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].labels",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_resources": {
           "description": "List of objects containing information about underlying resources",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_status": {
           "description": "Status of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].arn",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_taints": {
           "description": "List of objects containing information about taints applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].taint",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "security_group_arn": {
           "description": "Amazon Resource Name (ARN) of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].arn",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "security_group_id": {
           "description": "ID of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].id",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_eks_node_group.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "ami_type": {
             "references": [
              "var.ami_id",
              "var.ami_type"
             ]
            },
            "capacity_type": {
             "references": [
              "var.capacity_type"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "disk_size": {
             "references": [
              "local.use_custom_launch_template",
              "var.disk_size"
             ]
            },
            "force_update_version": {
             "references": [
              "var.force_update_version"
             ]
            },
            "instance_types": {
             "references": [
              "var.instance_types"
             ]
            },
            "labels": {
             "references": [
              "var.labels"
             ]
            },
            "node_group_name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_group_name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "release_version": {
             "references": [
              "var.ami_id",
              "var.ami_release_version"
             ]
            },
            "scaling_config": [
             {
              "desired_size": {
               "references": [
                "var.desired_size"
               ]
              },
              "max_size": {
               "references": [
                "var.max_size"
               ]
              },
              "min_size": {
               "references": [
                "var.min_size"
               ]
              }
             }
            ],
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.name"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.timeouts"
              ]
             },
             "delete": {
              "references": [
               "var.timeouts"
              ]
             },
             "update": {
              "references": [
               "var.timeouts"
              ]
             }
            },
            "version": {
             "references": [
              "var.ami_id",
              "var.cluster_version"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_node_group"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_role",
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "depends_on": [
            "aws_security_group_rule.this",
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "image_id": {
             "references": [
              "var.ami_id"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "aws_security_group.this",
           "count_expression": {
            "references": [
             "local.create_security_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.security_group_description"
             ]
            },
            "name": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "local.security_group_name",
              "var.security_group_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group_rule.this",
           "expressions": {
            "cidr_blocks": {
             "references": [
              "each.value.cidr_blocks",
              "each.value"
             ]
            },
            "description": {
             "references": [
              "each.value.description",
              "each.value"
             ]
            },
            "from_port": {
             "references": [
              "each.value.from_port",
              "each.value"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "each.value.ipv6_cidr_blocks",
              "each.value"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "each.value.prefix_list_ids",
              "each.value"
             ]
            },
            "protocol": {
             "references": [
              "each.value.protocol",
              "each.value"
             ]
            },
            "security_group_id": {
             "references": [
              "aws_security_group.this[0].id",
              "aws_security_group.this[0]",
              "aws_security_group.this"
             ]
            },
            "self": {
             "references": [
              "each.value.self",
              "each.value"
             ]
            },
            "source_security_group_id": {
             "references": [
              "each.value.source_security_group_id",
              "each.value",
              "each.value.source_cluster_security_group",
              "each.value",
              "var.cluster_security_group_id"
             ]
            },
            "to_port": {
             "references": [
              "each.value.to_port",
              "each.value"
             ]
            },
            "type": {
             "references": [
              "each.value.type",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.security_group_rules",
             "local.create_security_group"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance. If not supplied, EKS will use its own default image"
          },
          "ami_release_version": {
           "default": null,
           "description": "AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version"
          },
          "ami_type": {
           "default": null,
           "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. Valid values are `AL2_x86_64`, `AL2_x86_64_GPU`, `AL2_ARM_64`, `CUSTOM`, `BOTTLEROCKET_ARM_64`, `BOTTLEROCKET_x86_64`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "capacity_type": {
           "default": "ON_DEMAND",
           "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_security_group_id": {
           "default": null,
           "description": "Cluster control plane security group ID"
          },
          "cluster_service_ipv4_cidr": {
           "default": null,
           "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes version. Defaults to EKS Cluster Kubernetes version"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create EKS managed node group or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create a launch template or not. If set to `false`, EKS will use its own default launch template"
          },
          "create_security_group": {
           "default": true,
           "description": "Determines whether to create a security group"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "desired_size": {
           "default": 1,
           "description": "Desired number of instances/nodes"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "disk_size": {
           "default": null,
           "description": "Disk size in GiB for nodes. Defaults to `20`"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance(s) will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_bootstrap_user_data": {
           "default": false,
           "description": "Determines whether the bootstrap configurations are populated within the user data template"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_update_version": {
           "default": null,
           "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the node group. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_types": {
           "default": null,
           "description": "Set of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance(s)"
          },
          "labels": {
           "default": null,
           "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_name": {
           "default": "",
           "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version number. The default is `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A list of license specifications to associate with"
          },
          "max_size": {
           "default": 3,
           "description": "Maximum number of instances/nodes"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "min_size": {
           "default": 0,
           "description": "Minimum number of instances/nodes"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS managed node group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket` or `linux` based; `windows` is not supported"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "remote_access": {
           "default": {},
           "description": "Configuration block with remote access settings"
          },
          "security_group_description": {
           "default": "EKS managed node group security group",
           "description": "Description for the security group created"
          },
          "security_group_name": {
           "default": null,
           "description": "Name to use on security group created"
          },
          "security_group_rules": {
           "default": {},
           "description": "List of security group rules to add to the security group created"
          },
          "security_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the security group created"
          },
          "security_group_use_name_prefix": {
           "default": true,
           "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
          },
          "subnet_ids": {
           "default": null,
           "description": "Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME`"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "taints": {
           "default": {},
           "description": "The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group"
          },
          "timeouts": {
           "default": {},
           "description": "Create, update, and delete timeout configurations for the node group"
          },
          "update_config": {
           "default": {},
           "description": "Configuration block of settings for max unavailable resources during node group updates"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update the launch templates default version on each update. Conflicts with `launch_template_default_version`"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_id": {
           "default": null,
           "description": "ID of the VPC where the security group/nodes will be provisioned"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          }
         }
        },
        "source": "./modules/eks-managed-node-group"
       },
       "fargate_profile": {
        "expressions": {
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.fargate_profile_defaults.create_iam_role",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.fargate_profile_defaults.iam_role_additional_policies",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.fargate_profile_defaults.iam_role_arn",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.fargate_profile_defaults.iam_role_attach_cni_policy",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.fargate_profile_defaults.iam_role_description",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.fargate_profile_defaults.iam_role_name",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.fargate_profile_defaults.iam_role_path",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.fargate_profile_defaults.iam_role_permissions_boundary",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.fargate_profile_defaults.iam_role_tags",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.fargate_profile_defaults.iam_role_use_name_prefix",
           "var.fargate_profile_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "selectors": {
          "references": [
           "each.value.selectors",
           "each.value",
           "var.fargate_profile_defaults.selectors",
           "var.fargate_profile_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.fargate_profile_defaults.subnet_ids",
           "var.fargate_profile_defaults",
           "var.subnet_ids"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.fargate_profile_defaults.tags",
           "var.fargate_profile_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.fargate_profile_defaults.timeouts",
           "var.fargate_profile_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.fargate_profiles",
          "var.create"
         ]
        },
        "module": {
         "outputs": {
          "fargate_profile_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_id": {
           "description": "EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].id",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_pod_execution_role_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile Pod execution role ARN",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].pod_execution_role_arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_status": {
           "description": "Status of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].status",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_eks_fargate_profile.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "fargate_profile_name": {
             "references": [
              "var.name"
             ]
            },
            "pod_execution_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_fargate_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_role",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "effect": {
               "constant_value": "Allow"
              },
              "principals": [
               {
                "identifiers": {
                 "constant_value": [
                  "eks-fargate-pods.amazonaws.com"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ]
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of the EKS cluster"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create Fargate profile or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the Fargate profile. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": "",
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS Fargate Profile"
          },
          "selectors": {
           "default": [],
           "description": "Configuration block(s) for selecting Kubernetes Pods to execute with this Fargate Profile"
          },
          "subnet_ids": {
           "default": [],
           "description": "A list of subnet IDs for the EKS Fargate Profile"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "timeouts": {
           "default": {},
           "description": "Create and delete timeout configurations for the Fargate Profile"
          }
         }
        },
        "source": "./modules/fargate-profile"
       },
       "kms": {
        "expressions": {
         "aliases": {
          "references": [
           "var.cluster_name",
           "var.kms_key_aliases"
          ]
         },
         "create": {
          "references": [
           "local.create",
           "var.create_kms_key"
          ]
         },
         "deletion_window_in_days": {
          "references": [
           "var.kms_key_deletion_window_in_days"
          ]
         },
         "description": {
          "references": [
           "var.kms_key_description",
           "var.cluster_name"
          ]
         },
         "enable_default_policy": {
          "references": [
           "var.kms_key_enable_default_policy"
          ]
         },
         "enable_key_rotation": {
          "references": [
           "var.enable_kms_key_rotation"
          ]
         },
         "key_administrators": {
          "references": [
           "var.kms_key_administrators",
           "data.aws_caller_identity.current.arn",
           "data.aws_caller_identity.current"
          ]
         },
         "key_owners": {
          "references": [
           "var.kms_key_owners"
          ]
         },
         "key_service_users": {
          "references": [
           "var.kms_key_service_users"
          ]
         },
         "key_usage": {
          "constant_value": "ENCRYPT_DECRYPT"
         },
         "key_users": {
          "references": [
           "local.cluster_role",
           "var.kms_key_users"
          ]
         },
         "override_policy_documents": {
          "references": [
           "var.kms_key_override_policy_documents"
          ]
         },
         "source_policy_documents": {
          "references": [
           "var.kms_key_source_policy_documents"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "module": {
         "outputs": {
          "aliases": {
           "description": "A map of aliases created and their attributes",
           "expression": {
            "references": [
             "aws_kms_alias.this"
            ]
           }
          },
          "external_key_expiration_model": {
           "description": "Whether the key material expires. Empty when pending key material import, otherwise `KEY_MATERIAL_EXPIRES` or `KEY_MATERIAL_DOES_NOT_EXPIRE`",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].expiration_model",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_state": {
           "description": "The state of the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_state",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_usage": {
           "description": "The cryptographic operations for which you can use the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_usage",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "grants": {
           "description": "A map of grants created and their attributes",
           "expression": {
            "references": [
             "aws_kms_grant.this"
            ]
           }
          },
          "key_arn": {
           "description": "The Amazon Resource Name (ARN) of the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].arn",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].arn",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_id": {
           "description": "The globally unique identifier for the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].key_id",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].id",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_policy": {
           "description": "The IAM resource policy set on the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].policy",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].policy",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_kms_alias.this",
           "expressions": {
            "name": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value"
             ]
            },
            "name_prefix": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value"
             ]
            },
            "target_key_id": {
             "references": [
              "aws_kms_key.this[0].id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.aliases",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_alias"
          },
          {
           "address": "aws_kms_external_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_material_base64": {
             "references": [
              "var.key_material_base64"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "valid_to": {
             "references": [
              "var.valid_to"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_external_key"
          },
          {
           "address": "aws_kms_grant.this",
           "expressions": {
            "grant_creation_tokens": {
             "references": [
              "each.value.grant_creation_tokens",
              "each.value"
             ]
            },
            "grantee_principal": {
             "references": [
              "each.value.grantee_principal",
              "each.value"
             ]
            },
            "key_id": {
             "references": [
              "aws_kms_key.this[0].key_id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            },
            "name": {
             "references": [
              "each.value.name",
              "each.value",
              "each.key"
             ]
            },
            "operations": {
             "references": [
              "each.value.operations",
              "each.value"
             ]
            },
            "retire_on_delete": {
             "references": [
              "each.value.retire_on_delete",
              "each.value"
             ]
            },
            "retiring_principal": {
             "references": [
              "each.value.retiring_principal",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.grants",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_grant"
          },
          {
           "address": "aws_kms_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "customer_master_key_spec": {
             "references": [
              "var.customer_master_key_spec"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enable_key_rotation": {
             "references": [
              "var.enable_key_rotation"
             ]
            },
            "is_enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_usage": {
             "references": [
              "var.key_usage"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_key"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "override_policy_documents": {
             "references": [
              "var.override_policy_documents"
             ]
            },
            "source_policy_documents": {
             "references": [
              "var.source_policy_documents"
             ]
            }
           },
           "mode": "data",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "aliases": {
           "default": [],
           "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
          },
          "aliases_use_name_prefix": {
           "default": false,
           "description": "Determines whether the alias name is used as a prefix"
          },
          "bypass_policy_lockout_safety_check": {
           "default": null,
           "description": "A flag to indicate whether to bypass the key policy lockout safety check. Setting this value to true increases the risk that the KMS key becomes unmanageable"
          },
          "create": {
           "default": true,
           "description": "Determines whether resources will be created (affects all resources)"
          },
          "create_external": {
           "default": false,
           "description": "Determines whether an external CMK (externally provided material) will be created or a standard CMK (AWS provided material)"
          },
          "customer_master_key_spec": {
           "default": null,
           "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports. Valid values: `SYMMETRIC_DEFAULT`, `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`"
          },
          "deletion_window_in_days": {
           "default": null,
           "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
          },
          "description": {
           "default": null,
           "description": "The description of the key as viewed in AWS console"
          },
          "enable_default_policy": {
           "default": true,
           "description": "Specifies whether to enable the default key policy. Defaults to `true`"
          },
          "enable_key_rotation": {
           "default": true,
           "description": "Specifies whether key rotation is enabled. Defaults to `true`"
          },
          "grants": {
           "default": {},
           "description": "A map of grant definitions to create"
          },
          "is_enabled": {
           "default": null,
           "description": "Specifies whether the key is enabled. Defaults to `true`"
          },
          "key_administrators": {
           "default": [],
           "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators)"
          },
          "key_asymmetric_public_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric public encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_asymmetric_sign_verify_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric sign and verify users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_hmac_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key HMAC users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_material_base64": {
           "default": null,
           "description": "Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. External key only"
          },
          "key_owners": {
           "default": [],
           "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
          },
          "key_service_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
          },
          "key_symmetric_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key symmetric encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_usage": {
           "default": null,
           "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT` or `SIGN_VERIFY`. Defaults to `ENCRYPT_DECRYPT`"
          },
          "key_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
          },
          "multi_region": {
           "default": false,
           "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`"
          },
          "override_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
          },
          "policy": {
           "default": null,
           "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws_iam_policy_document`, in the form that designates a principal, can be used"
          },
          "source_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "valid_to": {
           "default": null,
           "description": "Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire"
          }
         }
        },
        "source": "terraform-aws-modules/kms/aws",
        "version_constraint": "1.0.2"
       },
       "self_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.self_managed_node_group_defaults.ami_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "autoscaling_group_tags": {
          "references": [
           "each.value.autoscaling_group_tags",
           "each.value",
           "var.self_managed_node_group_defaults.autoscaling_group_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "availability_zones": {
          "references": [
           "each.value.availability_zones",
           "each.value",
           "var.self_managed_node_group_defaults.availability_zones",
           "var.self_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.self_managed_node_group_defaults.block_device_mappings",
           "var.self_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.self_managed_node_group_defaults.bootstrap_extra_args",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_rebalance": {
          "references": [
           "each.value.capacity_rebalance",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_rebalance",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_reservation_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "aws_eks_cluster.this[0].certificate_authority[0].data",
           "aws_eks_cluster.this[0].certificate_authority[0]",
           "aws_eks_cluster.this[0].certificate_authority",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "aws_eks_cluster.this[0].endpoint",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.self_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.self_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_security_group_id": {
          "references": [
           "local.cluster_security_group_id"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.self_managed_node_group_defaults.cluster_version",
           "var.self_managed_node_group_defaults",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.self_managed_node_group_defaults.cpu_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_autoscaling_group": {
          "references": [
           "each.value.create_autoscaling_group",
           "each.value",
           "var.self_managed_node_group_defaults.create_autoscaling_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_iam_instance_profile": {
          "references": [
           "each.value.create_iam_instance_profile",
           "each.value",
           "var.self_managed_node_group_defaults.create_iam_instance_profile",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.self_managed_node_group_defaults.create_launch_template",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_schedule": {
          "references": [
           "each.value.create_schedule",
           "each.value",
           "var.self_managed_node_group_defaults.create_schedule",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_security_group": {
          "references": [
           "each.value.create_security_group",
           "each.value",
           "var.self_managed_node_group_defaults.create_security_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.self_managed_node_group_defaults.credit_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "default_cooldown": {
          "references": [
           "each.value.default_cooldown",
           "each.value",
           "var.self_managed_node_group_defaults.default_cooldown",
           "var.self_managed_node_group_defaults"
          ]
         },
         "delete_timeout": {
          "references": [
           "each.value.delete_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.delete_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.self_managed_node_group_defaults.desired_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.self_managed_node_group_defaults.disable_api_termination",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.self_managed_node_group_defaults.ebs_optimized",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_gpu_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_inference_accelerator",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.self_managed_node_group_defaults.enable_monitoring",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enabled_metrics": {
          "references": [
           "each.value.enabled_metrics",
           "each.value",
           "var.self_managed_node_group_defaults.enabled_metrics",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.self_managed_node_group_defaults.enclave_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "force_delete": {
          "references": [
           "each.value.force_delete",
           "each.value",
           "var.self_managed_node_group_defaults.force_delete",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_grace_period": {
          "references": [
           "each.value.health_check_grace_period",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_grace_period",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_type": {
          "references": [
           "each.value.health_check_type",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "hibernation_options": {
          "references": [
           "each.value.hibernation_options",
           "each.value",
           "var.self_managed_node_group_defaults.hibernation_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_instance_profile_arn": {
          "references": [
           "each.value.iam_instance_profile_arn",
           "each.value",
           "var.self_managed_node_group_defaults.iam_instance_profile_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_additional_policies",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_description",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "initial_lifecycle_hooks": {
          "references": [
           "each.value.initial_lifecycle_hooks",
           "each.value",
           "var.self_managed_node_group_defaults.initial_lifecycle_hooks",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_initiated_shutdown_behavior": {
          "references": [
           "each.value.instance_initiated_shutdown_behavior",
           "each.value",
           "var.self_managed_node_group_defaults.instance_initiated_shutdown_behavior",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.self_managed_node_group_defaults.instance_market_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_refresh": {
          "references": [
           "each.value.instance_refresh",
           "each.value",
           "var.self_managed_node_group_defaults.instance_refresh",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_type": {
          "references": [
           "each.value.instance_type",
           "each.value",
           "var.self_managed_node_group_defaults.instance_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.self_managed_node_group_defaults.kernel_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.self_managed_node_group_defaults.key_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_description",
           "var.self_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_name",
           "var.self_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.license_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_instance_lifetime": {
          "references": [
           "each.value.max_instance_lifetime",
           "each.value",
           "var.self_managed_node_group_defaults.max_instance_lifetime",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.self_managed_node_group_defaults.max_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.self_managed_node_group_defaults.metadata_options",
           "var.self_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "metrics_granularity": {
          "references": [
           "each.value.metrics_granularity",
           "each.value",
           "var.self_managed_node_group_defaults.metrics_granularity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_elb_capacity": {
          "references": [
           "each.value.min_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.min_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.self_managed_node_group_defaults.min_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "mixed_instances_policy": {
          "references": [
           "each.value.mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.self_managed_node_group_defaults.network_interfaces",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.self_managed_node_group_defaults.placement",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement_group": {
          "references": [
           "each.value.placement_group",
           "each.value",
           "var.self_managed_node_group_defaults.placement_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.self_managed_node_group_defaults.platform",
           "var.self_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.post_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "protect_from_scale_in": {
          "references": [
           "each.value.protect_from_scale_in",
           "each.value",
           "var.self_managed_node_group_defaults.protect_from_scale_in",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.self_managed_node_group_defaults.ram_disk_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "schedules": {
          "references": [
           "each.value.schedules",
           "each.value",
           "var.self_managed_node_group_defaults.schedules",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_description": {
          "references": [
           "each.value.security_group_description",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_description",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_name": {
          "references": [
           "each.value.security_group_name",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_rules": {
          "references": [
           "each.value.security_group_rules",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_rules",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_tags": {
          "references": [
           "each.value.security_group_tags",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_use_name_prefix": {
          "references": [
           "each.value.security_group_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "service_linked_role_arn": {
          "references": [
           "each.value.service_linked_role_arn",
           "each.value",
           "var.self_managed_node_group_defaults.service_linked_role_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.self_managed_node_group_defaults.subnet_ids",
           "var.self_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "suspended_processes": {
          "references": [
           "each.value.suspended_processes",
           "each.value",
           "var.self_managed_node_group_defaults.suspended_processes",
           "var.self_managed_node_group_defaults"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.self_managed_node_group_defaults.tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "target_group_arns": {
          "references": [
           "each.value.target_group_arns",
           "each.value",
           "var.self_managed_node_group_defaults.target_group_arns",
           "var.self_managed_node_group_defaults"
          ]
         },
         "termination_policies": {
          "references": [
           "each.value.termination_policies",
           "each.value",
           "var.self_managed_node_group_defaults.termination_policies",
           "var.self_managed_node_group_defaults"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.update_launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_default_tags": {
          "references": [
           "each.value.use_default_tags",
           "each.value",
           "var.self_managed_node_group_defaults.use_default_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_mixed_instances_policy": {
          "references": [
           "each.value.use_mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.use_mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.self_managed_node_group_defaults.user_data_template_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "vpc_id": {
          "references": [
           "each.value.vpc_id",
           "each.value",
           "var.self_managed_node_group_defaults.vpc_id",
           "var.self_managed_node_group_defaults",
           "var.vpc_id"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.self_managed_node_group_defaults.vpc_security_group_ids",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_capacity_timeout": {
          "references": [
           "each.value.wait_for_capacity_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_capacity_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_elb_capacity": {
          "references": [
           "each.value.wait_for_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "warm_pool": {
          "references": [
           "each.value.warm_pool",
           "each.value",
           "var.self_managed_node_group_defaults.warm_pool",
           "var.self_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.self_managed_node_groups",
          "var.create"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "constant_value": true
            },
            "is_eks_managed_node_group": {
             "constant_value": false
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.self_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "autoscaling_group_arn": {
           "description": "The ARN for this autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].arn",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_availability_zones": {
           "description": "The availability zones of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].availability_zones",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_default_cooldown": {
           "description": "Time between a scaling activity and the succeeding scaling activity",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].default_cooldown",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_desired_capacity": {
           "description": "The number of Amazon EC2 instances that should be running in the group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].desired_capacity",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_grace_period": {
           "description": "Time after instance comes into service before checking health",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_grace_period",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_type": {
           "description": "EC2 or ELB. Controls how health checking is done",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_type",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_id": {
           "description": "The autoscaling group id",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].id",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_max_size": {
           "description": "The maximum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].max_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_min_size": {
           "description": "The minimum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].min_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_name": {
           "description": "The autoscaling group name",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].name",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_schedule_arns": {
           "description": "ARNs of autoscaling group schedules",
           "expression": {
            "references": [
             "aws_autoscaling_schedule.this"
            ]
           }
          },
          "autoscaling_group_vpc_zone_identifier": {
           "description": "The VPC zone identifier",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].vpc_zone_identifier",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "iam_instance_profile_arn": {
           "description": "ARN assigned by AWS to the instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].arn",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this",
             "var.iam_instance_profile_arn"
            ]
           }
          },
          "iam_instance_profile_id": {
           "description": "Instance profile's ID",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_instance_profile_unique": {
           "description": "Stable and unique string identifying the IAM instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].unique_id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "image_id": {
           "description": "ID of the image",
           "expression": {
            "references": [
             "data.aws_ami.eks_default[0].image_id",
             "data.aws_ami.eks_default[0]",
             "data.aws_ami.eks_default"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "platform": {
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based",
           "expression": {
            "references": [
             "var.platform"
            ]
           }
          },
          "security_group_arn": {
           "description": "Amazon Resource Name (ARN) of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].arn",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "security_group_id": {
           "description": "ID of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].id",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "user_data": {
           "description": "Base64 encoded user data",
           "expression": {
            "references": [
             "module.user_data.user_data",
             "module.user_data"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_autoscaling_group.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_autoscaling_group"
            ]
           },
           "expressions": {
            "availability_zones": {
             "references": [
              "var.availability_zones"
             ]
            },
            "capacity_rebalance": {
             "references": [
              "var.capacity_rebalance"
             ]
            },
            "default_cooldown": {
             "references": [
              "var.default_cooldown"
             ]
            },
            "desired_capacity": {
             "references": [
              "var.desired_size"
             ]
            },
            "enabled_metrics": {
             "references": [
              "var.enabled_metrics"
             ]
            },
            "force_delete": {
             "references": [
              "var.force_delete"
             ]
            },
            "health_check_grace_period": {
             "references": [
              "var.health_check_grace_period"
             ]
            },
            "health_check_type": {
             "references": [
              "var.health_check_type"
             ]
            },
            "max_instance_lifetime": {
             "references": [
              "var.max_instance_lifetime"
             ]
            },
            "max_size": {
             "references": [
              "var.max_size"
             ]
            },
            "metrics_granularity": {
             "references": [
              "var.metrics_granularity"
             ]
            },
            "min_elb_capacity": {
             "references": [
              "var.min_elb_capacity"
             ]
            },
            "min_size": {
             "references": [
              "var.min_size"
             ]
            },
            "name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "placement_group": {
             "references": [
              "var.placement_group"
             ]
            },
            "protect_from_scale_in": {
             "references": [
              "var.protect_from_scale_in"
             ]
            },
            "service_linked_role_arn": {
             "references": [
              "var.service_linked_role_arn"
             ]
            },
            "suspended_processes": {
             "references": [
              "var.suspended_processes"
             ]
            },
            "target_group_arns": {
             "references": [
              "var.target_group_arns"
             ]
            },
            "termination_policies": {
             "references": [
              "var.termination_policies"
             ]
            },
            "timeouts": {
             "delete": {
              "references": [
               "var.delete_timeout"
              ]
             }
            },
            "vpc_zone_identifier": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "wait_for_capacity_timeout": {
             "references": [
              "var.wait_for_capacity_timeout"
             ]
            },
            "wait_for_elb_capacity": {
             "references": [
              "var.wait_for_elb_capacity"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_group"
          },
          {
           "address": "aws_autoscaling_schedule.this",
           "expressions": {
            "autoscaling_group_name": {
             "references": [
              "aws_autoscaling_group.this[0].name",
              "aws_autoscaling_group.this[0]",
              "aws_autoscaling_group.this"
             ]
            },
            "desired_capacity": {
             "references": [
              "each.value"
             ]
            },
            "end_time": {
             "references": [
              "each.value"
             ]
            },
            "max_size": {
             "references": [
              "each.value"
             ]
            },
            "min_size": {
             "references": [
              "each.value"
             ]
            },
            "recurrence": {
             "references": [
              "each.value"
             ]
            },
            "scheduled_action_name": {
             "references": [
              "each.key"
             ]
            },
            "start_time": {
             "references": [
              "each.value"
             ]
            },
            "time_zone": {
             "references": [
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_schedule",
             "var.schedules"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_schedule"
          },
          {
           "address": "aws_iam_instance_profile.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_instance_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile",
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "depends_on": [
            "aws_security_group_rule.this",
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "iam_instance_profile": [
             {
              "arn": {
               "references": [
                "var.create_iam_instance_profile",
                "aws_iam_instance_profile.this[0].arn",
                "aws_iam_instance_profile.this[0]",
                "aws_iam_instance_profile.this",
                "var.iam_instance_profile_arn"
               ]
              }
             }
            ],
            "image_id": {
             "references": [
              "var.ami_id",
              "data.aws_ami.eks_default[0].image_id",
              "data.aws_ami.eks_default[0]",
              "data.aws_ami.eks_default"
             ]
            },
            "instance_initiated_shutdown_behavior": {
             "references": [
              "var.instance_initiated_shutdown_behavior"
             ]
            },
            "instance_type": {
             "references": [
              "var.instance_type"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "aws_security_group.this",
           "count_expression": {
            "references": [
             "local.create_security_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.security_group_description"
             ]
            },
            "name": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "local.security_group_name",
              "var.security_group_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group_rule.this",
           "expressions": {
            "cidr_blocks": {
             "references": [
              "each.value.cidr_blocks",
              "each.value"
             ]
            },
            "description": {
             "references": [
              "each.value.description",
              "each.value"
             ]
            },
            "from_port": {
             "references": [
              "each.value.from_port",
              "each.value"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "each.value.ipv6_cidr_blocks",
              "each.value"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "each.value.prefix_list_ids",
              "each.value"
             ]
            },
            "protocol": {
             "references": [
              "each.value.protocol",
              "each.value"
             ]
            },
            "security_group_id": {
             "references": [
              "aws_security_group.this[0].id",
              "aws_security_group.this[0]",
              "aws_security_group.this"
             ]
            },
            "self": {
             "references": [
              "each.value.self",
              "each.value"
             ]
            },
            "source_security_group_id": {
             "references": [
              "each.value.source_security_group_id",
              "each.value",
              "each.value.source_cluster_security_group",
              "each.value",
              "var.cluster_security_group_id"
             ]
            },
            "to_port": {
             "references": [
              "each.value.to_port",
              "each.value"
             ]
            },
            "type": {
             "references": [
              "each.value.type",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.security_group_rules",
             "local.create_security_group"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "data.aws_ami.eks_default",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "filter": [
             {
              "name": {
               "constant_value": "name"
              },
              "values": {
               "references": [
                "var.cluster_version"
               ]
              }
             }
            ],
            "most_recent": {
             "constant_value": true
            },
            "owners": {
             "constant_value": [
              "amazon"
             ]
            }
           },
           "mode": "data",
           "name": "eks_default",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ami"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_default_tags.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_default_tags"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance"
          },
          "autoscaling_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the autoscaling group created. Tags are applied to the autoscaling group only and are NOT propagated to instances"
          },
          "availability_zones": {
           "default": null,
           "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `subnet_ids` argument. Conflicts with `subnet_ids`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_rebalance": {
           "default": null,
           "description": "Indicates whether capacity rebalance is enabled"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": "",
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_security_group_id": {
           "default": null,
           "description": "Cluster control plane security group ID"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes cluster version - used to lookup default AMI ID if one is not provided"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create self managed node group or not"
          },
          "create_autoscaling_group": {
           "default": true,
           "description": "Determines whether to create autoscaling group or not"
          },
          "create_iam_instance_profile": {
           "default": true,
           "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create launch template or not"
          },
          "create_schedule": {
           "default": true,
           "description": "Determines whether to create autoscaling group schedule or not"
          },
          "create_security_group": {
           "default": true,
           "description": "Determines whether to create a security group"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "default_cooldown": {
           "default": null,
           "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
          },
          "delete_timeout": {
           "default": null,
           "description": "Delete timeout to wait for destroying autoscaling group"
          },
          "desired_size": {
           "default": 1,
           "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enabled_metrics": {
           "default": [],
           "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_delete": {
           "default": null,
           "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
          },
          "health_check_grace_period": {
           "default": null,
           "description": "Time (in seconds) after instance comes into service before checking health"
          },
          "health_check_type": {
           "default": null,
           "description": "`EC2` or `ELB`. Controls how health checking is done"
          },
          "hibernation_options": {
           "default": {},
           "description": "The hibernation options for the instance"
          },
          "iam_instance_profile_arn": {
           "default": null,
           "description": "Amazon Resource Name (ARN) of an existing IAM instance profile that provides permissions for the node group. Required if `create_iam_instance_profile` = `false`"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether cluster IAM role name (`iam_role_name`) is used as a prefix"
          },
          "initial_lifecycle_hooks": {
           "default": [],
           "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
          },
          "instance_initiated_shutdown_behavior": {
           "default": null,
           "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_refresh": {
           "default": {},
           "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
          },
          "instance_type": {
           "default": "",
           "description": "The type of the instance to launch"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default Version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_name": {
           "default": null,
           "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A list of license specifications to associate with"
          },
          "max_instance_lifetime": {
           "default": null,
           "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 604800 and 31536000 seconds"
          },
          "max_size": {
           "default": 3,
           "description": "The maximum size of the autoscaling group"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "metrics_granularity": {
           "default": null,
           "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
          },
          "min_elb_capacity": {
           "default": null,
           "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
          },
          "min_size": {
           "default": 0,
           "description": "The minimum size of the autoscaling group"
          },
          "mixed_instances_policy": {
           "default": null,
           "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
          },
          "name": {
           "default": "",
           "description": "Name of the Self managed Node Group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "placement_group": {
           "default": null,
           "description": "The name of the placement group into which you'll launch your instances, if any"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "protect_from_scale_in": {
           "default": false,
           "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "schedules": {
           "default": {},
           "description": "Map of autoscaling group schedule to create"
          },
          "security_group_description": {
           "default": "EKS self-managed node group security group",
           "description": "Description for the security group created"
          },
          "security_group_name": {
           "default": null,
           "description": "Name to use on security group created"
          },
          "security_group_rules": {
           "default": {},
           "description": "List of security group rules to add to the security group created"
          },
          "security_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the security group created"
          },
          "security_group_use_name_prefix": {
           "default": true,
           "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
          },
          "service_linked_role_arn": {
           "default": null,
           "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
          },
          "subnet_ids": {
           "default": null,
           "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
          },
          "suspended_processes": {
           "default": [],
           "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "target_group_arns": {
           "default": [],
           "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
          },
          "termination_policies": {
           "default": [],
           "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update Default Version each update. Conflicts with `launch_template_default_version`"
          },
          "use_default_tags": {
           "default": false,
           "description": "Enables/disables the use of provider default tags in the tag_specifications of the Auto Scaling group"
          },
          "use_mixed_instances_policy": {
           "default": false,
           "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_id": {
           "default": null,
           "description": "ID of the VPC where the security group/nodes will be provisioned"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          },
          "wait_for_capacity_timeout": {
           "default": null,
           "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
          },
          "wait_for_elb_capacity": {
           "default": null,
           "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
          },
          "warm_pool": {
           "default": {},
           "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
          }
         }
        },
        "source": "./modules/self-managed-node-group"
       }
      },
      "outputs": {
       "aws_auth_configmap_yaml": {
        "description": "[DEPRECATED - use `var.manage_aws_auth_configmap`] Formatted yaml output for base aws-auth configmap containing roles used in cluster node groups/fargate profiles",
        "expression": {
         "references": [
          "path.module",
          "module.eks_managed_node_group",
          "module.self_managed_node_group",
          "module.self_managed_node_group",
          "module.fargate_profile"
         ]
        }
       },
       "cloudwatch_log_group_arn": {
        "description": "Arn of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].arn",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cloudwatch_log_group_name": {
        "description": "Name of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].name",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cluster_addons": {
        "description": "Map of attribute maps for all EKS cluster addons enabled",
        "expression": {
         "references": [
          "aws_eks_addon.this"
         ]
        }
       },
       "cluster_arn": {
        "description": "The Amazon Resource Name (ARN) of the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].arn",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_certificate_authority_data": {
        "description": "Base64 encoded certificate data required to communicate with the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].certificate_authority[0].data",
          "aws_eks_cluster.this[0].certificate_authority[0]",
          "aws_eks_cluster.this[0].certificate_authority",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_endpoint": {
        "description": "Endpoint for your Kubernetes API server",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].endpoint",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_iam_role_arn": {
        "description": "IAM role ARN of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].arn",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_name": {
        "description": "IAM role name of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].name",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_unique_id": {
        "description": "Stable and unique string identifying the IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].unique_id",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_id": {
        "description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].id",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_identity_providers": {
        "description": "Map of attribute maps for all EKS identity providers enabled",
        "expression": {
         "references": [
          "aws_eks_identity_provider_config.this"
         ]
        }
       },
       "cluster_oidc_issuer_url": {
        "description": "The URL on the EKS cluster for the OpenID Connect identity provider",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_platform_version": {
        "description": "Platform version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].platform_version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_primary_security_group_id": {
        "description": "Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication. Referred to as 'Cluster security group' in the EKS console",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
          "aws_eks_cluster.this[0].vpc_config[0]",
          "aws_eks_cluster.this[0].vpc_config",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].arn",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_security_group_id": {
        "description": "ID of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].id",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_status": {
        "description": "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].status",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_version": {
        "description": "The Kubernetes version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "eks_managed_node_groups": {
        "description": "Map of attribute maps for all EKS managed node groups created",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "eks_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by EKS managed node groups",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "fargate_profiles": {
        "description": "Map of attribute maps for all EKS Fargate Profiles created",
        "expression": {
         "references": [
          "module.fargate_profile"
         ]
        }
       },
       "kms_key_arn": {
        "description": "The Amazon Resource Name (ARN) of the key",
        "expression": {
         "references": [
          "module.kms.key_arn",
          "module.kms"
         ]
        }
       },
       "kms_key_id": {
        "description": "The globally unique identifier for the key",
        "expression": {
         "references": [
          "module.kms.key_id",
          "module.kms"
         ]
        }
       },
       "kms_key_policy": {
        "description": "The IAM resource policy set on the key",
        "expression": {
         "references": [
          "module.kms.key_policy",
          "module.kms"
         ]
        }
       },
       "node_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].arn",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "node_security_group_id": {
        "description": "ID of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].id",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "oidc_provider": {
        "description": "The OpenID Connect identity provider (issuer URL without leading `https://`)",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "oidc_provider_arn": {
        "description": "The ARN of the OIDC Provider if `enable_irsa = true`",
        "expression": {
         "references": [
          "aws_iam_openid_connect_provider.oidc_provider[0].arn",
          "aws_iam_openid_connect_provider.oidc_provider[0]",
          "aws_iam_openid_connect_provider.oidc_provider"
         ]
        }
       },
       "self_managed_node_groups": {
        "description": "Map of attribute maps for all self managed node groups created",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       },
       "self_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by self-managed node groups",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_cloudwatch_log_group"
         ]
        },
        "expressions": {
         "kms_key_id": {
          "references": [
           "var.cloudwatch_log_group_kms_key_id"
          ]
         },
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "retention_in_days": {
          "references": [
           "var.cloudwatch_log_group_retention_in_days"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_ec2_tag.cluster_primary_security_group",
        "expressions": {
         "key": {
          "references": [
           "each.key"
          ]
         },
         "resource_id": {
          "references": [
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "value": {
          "references": [
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.tags",
          "var.cluster_tags",
          "local.create",
          "var.create_cluster_primary_security_group_tags"
         ]
        },
        "mode": "managed",
        "name": "cluster_primary_security_group",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ec2_tag"
       },
       {
        "address": "aws_eks_addon.this",
        "depends_on": [
         "module.fargate_profile",
         "module.eks_managed_node_group",
         "module.self_managed_node_group"
        ],
        "expressions": {
         "addon_name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "addon_version": {
          "references": [
           "each.value"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "resolve_conflicts": {
          "references": [
           "each.value"
          ]
         },
         "service_account_role_arn": {
          "references": [
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_addons",
          "local.create"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_addon"
       },
       {
        "address": "aws_eks_cluster.this",
        "count_expression": {
         "references": [
          "local.create"
         ]
        },
        "depends_on": [
         "aws_iam_role_policy_attachment.this",
         "aws_security_group_rule.cluster",
         "aws_security_group_rule.node",
         "aws_cloudwatch_log_group.this"
        ],
        "expressions": {
         "enabled_cluster_log_types": {
          "references": [
           "var.cluster_enabled_log_types"
          ]
         },
         "kubernetes_network_config": [
          {
           "ip_family": {
            "references": [
             "var.cluster_ip_family"
            ]
           },
           "service_ipv4_cidr": {
            "references": [
             "var.cluster_service_ipv4_cidr"
            ]
           }
          }
         ],
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "role_arn": {
          "references": [
           "local.cluster_role"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_tags"
          ]
         },
         "timeouts": {
          "create": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "delete": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "update": {
           "references": [
            "var.cluster_timeouts"
           ]
          }
         },
         "version": {
          "references": [
           "var.cluster_version"
          ]
         },
         "vpc_config": [
          {
           "endpoint_private_access": {
            "references": [
             "var.cluster_endpoint_private_access"
            ]
           },
           "endpoint_public_access": {
            "references": [
             "var.cluster_endpoint_public_access"
            ]
           },
           "public_access_cidrs": {
            "references": [
             "var.cluster_endpoint_public_access_cidrs"
            ]
           },
           "security_group_ids": {
            "references": [
             "var.cluster_additional_security_group_ids",
             "local.cluster_security_group_id"
            ]
           },
           "subnet_ids": {
            "references": [
             "var.control_plane_subnet_ids",
             "var.subnet_ids"
            ]
           }
          }
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_cluster"
       },
       {
        "address": "aws_eks_identity_provider_config.this",
        "expressions": {
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "oidc": [
          {
           "client_id": {
            "references": [
             "each.value.client_id",
             "each.value"
            ]
           },
           "groups_claim": {
            "references": [
             "each.value"
            ]
           },
           "groups_prefix": {
            "references": [
             "each.value"
            ]
           },
           "identity_provider_config_name": {
            "references": [
             "each.value.identity_provider_config_name",
             "each.value",
             "each.key"
            ]
           },
           "issuer_url": {
            "references": [
             "each.value.issuer_url",
             "each.value",
             "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
             "aws_eks_cluster.this[0].identity[0].oidc[0]",
             "aws_eks_cluster.this[0].identity[0].oidc",
             "aws_eks_cluster.this[0].identity[0]",
             "aws_eks_cluster.this[0].identity",
             "aws_eks_cluster.this[0]",
             "aws_eks_cluster.this"
            ]
           },
           "required_claims": {
            "references": [
             "each.value"
            ]
           },
           "username_claim": {
            "references": [
             "each.value"
            ]
           },
           "username_prefix": {
            "references": [
             "each.value"
            ]
           }
          }
         ],
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_identity_providers",
          "local.create"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_identity_provider_config"
       },
       {
        "address": "aws_iam_openid_connect_provider.oidc_provider",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa"
         ]
        },
        "expressions": {
         "client_id_list": {
          "references": [
           "local.dns_suffix",
           "var.openid_connect_audiences"
          ]
         },
         "tags": {
          "references": [
           "var.cluster_name",
           "var.tags"
          ]
         },
         "thumbprint_list": {
          "references": [
           "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
           "data.tls_certificate.this[0].certificates[0]",
           "data.tls_certificate.this[0].certificates",
           "data.tls_certificate.this[0]",
           "data.tls_certificate.this",
           "var.custom_oidc_thumbprints"
          ]
         },
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "managed",
        "name": "oidc_provider",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_openid_connect_provider"
       },
       {
        "address": "aws_iam_policy.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "var.cluster_encryption_config"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_encryption_policy_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "path": {
          "references": [
           "var.cluster_encryption_policy_path"
          ]
         },
         "policy": {
          "references": [
           "var.create_kms_key",
           "module.kms.key_arn",
           "module.kms",
           "var.cluster_encryption_config"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_encryption_policy_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_policy.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "description": {
          "constant_value": "IAM policy for EKS CNI to assign IPV6 addresses"
         },
         "name": {
          "constant_value": "AmazonEKS_CNI_IPv6_Policy"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.cni_ipv6_policy[0].json",
           "data.aws_iam_policy_document.cni_ipv6_policy[0]",
           "data.aws_iam_policy_document.cni_ipv6_policy"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_role.this",
        "count_expression": {
         "references": [
          "local.create_iam_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "data.aws_iam_policy_document.assume_role_policy[0].json",
           "data.aws_iam_policy_document.assume_role_policy[0]",
           "data.aws_iam_policy_document.assume_role_policy"
          ]
         },
         "description": {
          "references": [
           "var.iam_role_description"
          ]
         },
         "force_detach_policies": {
          "constant_value": true
         },
         "name": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name",
           "var.prefix_separator"
          ]
         },
         "path": {
          "references": [
           "var.iam_role_path"
          ]
         },
         "permissions_boundary": {
          "references": [
           "var.iam_role_permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.iam_role_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "var.cluster_encryption_config"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "aws_iam_policy.cluster_encryption[0].arn",
           "aws_iam_policy.cluster_encryption[0]",
           "aws_iam_policy.cluster_encryption"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.this",
        "expressions": {
         "policy_arn": {
          "references": [
           "each.value"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.create_iam_role",
          "local.policy_arn_prefix",
          "local.policy_arn_prefix",
          "var.iam_role_additional_policies"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_security_group.cluster",
        "count_expression": {
         "references": [
          "local.create_cluster_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.cluster_sg_name",
           "var.cluster_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group.node",
        "count_expression": {
         "references": [
          "local.create_node_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.node_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.node_sg_name",
           "var.cluster_name",
           "var.node_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group_rule.cluster",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value.cidr_blocks",
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value.description",
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value.ipv6_cidr_blocks",
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value.prefix_list_ids",
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.cluster[0].id",
           "aws_security_group.cluster[0]",
           "aws_security_group.cluster"
          ]
         },
         "self": {
          "references": [
           "each.value.self",
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_security_group_id",
           "each.value",
           "each.value.source_node_security_group",
           "each.value",
           "local.node_security_group_id"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.cluster_security_group_rules",
          "var.cluster_security_group_additional_rules",
          "local.create_cluster_sg"
         ]
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "aws_security_group_rule.node",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value.cidr_blocks",
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value.description",
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value.ipv6_cidr_blocks",
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value.prefix_list_ids",
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.node[0].id",
           "aws_security_group.node[0]",
           "aws_security_group.node"
          ]
         },
         "self": {
          "references": [
           "each.value.self",
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_security_group_id",
           "each.value",
           "each.value.source_cluster_security_group",
           "each.value",
           "local.cluster_security_group_id"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.node_security_group_rules",
          "var.node_security_group_additional_rules",
          "local.create_node_sg"
         ]
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "kubernetes_config_map.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_aws_auth_configmap"
         ]
        },
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "module.eks:kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map"
       },
       {
        "address": "kubernetes_config_map_v1_data.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.manage_aws_auth_configmap"
         ]
        },
        "depends_on": [
         "kubernetes_config_map.aws_auth"
        ],
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "force": {
          "constant_value": true
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "module.eks:kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map_v1_data"
       },
       {
        "address": "data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_iam_policy_document.assume_role_policy",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "sts:AssumeRole"
            ]
           },
           "principals": [
            {
             "identifiers": {
              "references": [
               "local.dns_suffix"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ],
           "sid": {
            "constant_value": "EKSClusterAssumeRole"
           }
          }
         ]
        },
        "mode": "data",
        "name": "assume_role_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "ec2:AssignIpv6Addresses",
             "ec2:DescribeInstances",
             "ec2:DescribeTags",
             "ec2:DescribeNetworkInterfaces",
             "ec2:DescribeInstanceTypes"
            ]
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AssignDescribe"
           }
          },
          {
           "actions": {
            "constant_value": [
             "ec2:CreateTags"
            ]
           },
           "resources": {
            "references": [
             "data.aws_partition.current.partition",
             "data.aws_partition.current"
            ]
           },
           "sid": {
            "constant_value": "CreateTags"
           }
          }
         ]
        },
        "mode": "data",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_partition"
       },
       {
        "address": "data.tls_certificate.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa"
         ]
        },
        "expressions": {
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "data",
        "name": "this",
        "provider_config_key": "module.eks:tls",
        "schema_version": 0,
        "type": "tls_certificate"
       }
      ],
      "variables": {
       "attach_cluster_encryption_policy": {
        "default": true,
        "description": "Indicates whether or not to attach an additional policy for the cluster IAM role to utilize the encryption key provided"
       },
       "aws_auth_accounts": {
        "default": [],
        "description": "List of account maps to add to the aws-auth configmap"
       },
       "aws_auth_fargate_profile_pod_execution_role_arns": {
        "default": [],
        "description": "List of Fargate profile pod execution role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_non_windows": {
        "default": [],
        "description": "List of non-Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_windows": {
        "default": [],
        "description": "List of Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_roles": {
        "default": [],
        "description": "List of role maps to add to the aws-auth configmap"
       },
       "aws_auth_users": {
        "default": [],
        "description": "List of user maps to add to the aws-auth configmap"
       },
       "cloudwatch_log_group_kms_key_id": {
        "default": null,
        "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
       },
       "cloudwatch_log_group_retention_in_days": {
        "default": 90,
        "description": "Number of days to retain log events. Default retention - 90 days"
       },
       "cluster_additional_security_group_ids": {
        "default": [],
        "description": "List of additional, externally created security group IDs to attach to the cluster control plane"
       },
       "cluster_addons": {
        "default": {},
        "description": "Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`"
       },
       "cluster_enabled_log_types": {
        "default": [
         "audit",
         "api",
         "authenticator"
        ],
        "description": "A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
       },
       "cluster_encryption_config": {
        "default": [],
        "description": "Configuration block with encryption configuration for the cluster"
       },
       "cluster_encryption_policy_description": {
        "default": "Cluster encryption policy to allow cluster role to utilize CMK provided",
        "description": "Description of the cluster encryption policy created"
       },
       "cluster_encryption_policy_name": {
        "default": null,
        "description": "Name to use on cluster encryption policy created"
       },
       "cluster_encryption_policy_path": {
        "default": null,
        "description": "Cluster encryption policy path"
       },
       "cluster_encryption_policy_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster encryption policy created"
       },
       "cluster_encryption_policy_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster encryption policy name (`cluster_encryption_policy_name`) is used as a prefix"
       },
       "cluster_endpoint_private_access": {
        "default": false,
        "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
       },
       "cluster_endpoint_public_access": {
        "default": true,
        "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
       },
       "cluster_endpoint_public_access_cidrs": {
        "default": [
         "0.0.0.0/0"
        ],
        "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint"
       },
       "cluster_iam_role_dns_suffix": {
        "default": null,
        "description": "Base DNS domain name for the current partition (e.g., amazonaws.com in AWS Commercial, amazonaws.com.cn in AWS China)"
       },
       "cluster_identity_providers": {
        "default": {},
        "description": "Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA"
       },
       "cluster_ip_family": {
        "default": null,
        "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created"
       },
       "cluster_name": {
        "default": "",
        "description": "Name of the EKS cluster"
       },
       "cluster_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the cluster security group created. Set `source_node_security_group = true` inside rules to set the `node_security_group` as source"
       },
       "cluster_security_group_description": {
        "default": "EKS cluster security group",
        "description": "Description of the cluster security group created"
       },
       "cluster_security_group_id": {
        "default": "",
        "description": "Existing security group ID to be attached to the cluster. Required if `create_cluster_security_group` = `false`"
       },
       "cluster_security_group_name": {
        "default": null,
        "description": "Name to use on cluster security group created"
       },
       "cluster_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster security group created"
       },
       "cluster_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix"
       },
       "cluster_service_ipv4_cidr": {
        "default": null,
        "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
       },
       "cluster_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster"
       },
       "cluster_timeouts": {
        "default": {},
        "description": "Create, update, and delete timeout configurations for the cluster"
       },
       "cluster_version": {
        "default": null,
        "description": "Kubernetes `\u003cmajor\u003e.\u003cminor\u003e` version to use for the EKS cluster (i.e.: `1.22`)"
       },
       "control_plane_subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the EKS cluster control plane (ENIs) will be provisioned. Used for expanding the pool of subnets used by nodes/node groups without replacing the EKS control plane"
       },
       "create": {
        "default": true,
        "description": "Controls if EKS resources should be created (affects nearly all resources)"
       },
       "create_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to create the aws-auth configmap. NOTE - this is only intended for scenarios where the configmap does not exist (i.e. - when using only self-managed node groups). Most users should use `manage_aws_auth_configmap`"
       },
       "create_cloudwatch_log_group": {
        "default": true,
        "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
       },
       "create_cluster_primary_security_group_tags": {
        "default": true,
        "description": "Indicates whether or not to tag the cluster's primary security group. This security group is created by the EKS service, not the module, and therefore tagging is handled after cluster creation"
       },
       "create_cluster_security_group": {
        "default": true,
        "description": "Determines if a security group is created for the cluster or use the existing `cluster_security_group_id`"
       },
       "create_cni_ipv6_iam_policy": {
        "default": false,
        "description": "Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)"
       },
       "create_iam_role": {
        "default": true,
        "description": "Determines whether a an IAM role is created or to use an existing IAM role"
       },
       "create_kms_key": {
        "default": false,
        "description": "Controls if a KMS key for cluster encryption should be created"
       },
       "create_node_security_group": {
        "default": true,
        "description": "Determines whether to create a security group for the node groups or use the existing `node_security_group_id`"
       },
       "custom_oidc_thumbprints": {
        "default": [],
        "description": "Additional list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)"
       },
       "eks_managed_node_group_defaults": {
        "default": {},
        "description": "Map of EKS managed node group default configurations"
       },
       "eks_managed_node_groups": {
        "default": {},
        "description": "Map of EKS managed node group definitions to create"
       },
       "enable_irsa": {
        "default": true,
        "description": "Determines whether to create an OpenID Connect Provider for EKS to enable IRSA"
       },
       "enable_kms_key_rotation": {
        "default": true,
        "description": "Specifies whether key rotation is enabled. Defaults to `true`"
       },
       "fargate_profile_defaults": {
        "default": {},
        "description": "Map of Fargate Profile default configurations"
       },
       "fargate_profiles": {
        "default": {},
        "description": "Map of Fargate Profile definitions to create"
       },
       "iam_role_additional_policies": {
        "default": [],
        "description": "Additional policies to be added to the IAM role"
       },
       "iam_role_arn": {
        "default": null,
        "description": "Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`"
       },
       "iam_role_description": {
        "default": null,
        "description": "Description of the role"
       },
       "iam_role_name": {
        "default": null,
        "description": "Name to use on IAM role created"
       },
       "iam_role_path": {
        "default": null,
        "description": "Cluster IAM role path"
       },
       "iam_role_permissions_boundary": {
        "default": null,
        "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
       },
       "iam_role_tags": {
        "default": {},
        "description": "A map of additional tags to add to the IAM role created"
       },
       "iam_role_use_name_prefix": {
        "default": true,
        "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
       },
       "kms_key_administrators": {
        "default": [],
        "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators). If no value is provided, the current caller identity is used to ensure at least one key admin is available"
       },
       "kms_key_aliases": {
        "default": [],
        "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
       },
       "kms_key_deletion_window_in_days": {
        "default": null,
        "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
       },
       "kms_key_description": {
        "default": null,
        "description": "The description of the key as viewed in AWS console"
       },
       "kms_key_enable_default_policy": {
        "default": false,
        "description": "Specifies whether to enable the default key policy. Defaults to `false`"
       },
       "kms_key_override_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
       },
       "kms_key_owners": {
        "default": [],
        "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
       },
       "kms_key_service_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
       },
       "kms_key_source_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
       },
       "kms_key_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
       },
       "manage_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to manage the aws-auth configmap"
       },
       "node_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the node security group created. Set `source_cluster_security_group = true` inside rules to set the `cluster_security_group` as source"
       },
       "node_security_group_description": {
        "default": "EKS node shared security group",
        "description": "Description of the node security group created"
       },
       "node_security_group_id": {
        "default": "",
        "description": "ID of an existing security group to attach to the node groups created"
       },
       "node_security_group_name": {
        "default": null,
        "description": "Name to use on node security group created"
       },
       "node_security_group_ntp_ipv4_cidr_block": {
        "default": [
         "0.0.0.0/0"
        ],
        "description": "IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `[\"169.254.169.123/32\"]`"
       },
       "node_security_group_ntp_ipv6_cidr_block": {
        "default": [
         "::/0"
        ],
        "description": "IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `[\"fd00:ec2::123/128\"]`"
       },
       "node_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the node security group created"
       },
       "node_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether node security group name (`node_security_group_name`) is used as a prefix"
       },
       "openid_connect_audiences": {
        "default": [],
        "description": "List of OpenID Connect audience client IDs to add to the IRSA provider"
       },
       "prefix_separator": {
        "default": "-",
        "description": "The separator to use between the prefix and the generated timestamp for resource names"
       },
       "putin_khuylo": {
        "default": true,
        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
       },
       "self_managed_node_group_defaults": {
        "default": {},
        "description": "Map of self-managed node group default configurations"
       },
       "self_managed_node_groups": {
        "default": {},
        "description": "Map of self-managed node group definitions to create"
       },
       "subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the nodes/node groups will be provisioned. If `control_plane_subnet_ids` is not provided, the EKS cluster control plane (ENIs) will be provisioned in these subnets"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       },
       "vpc_id": {
        "default": null,
        "description": "ID of the VPC where the cluster and its nodes will be provisioned"
       }
      }
     },
     "source": "terraform-aws-modules/eks/aws",
     "version_constraint": "18.29.0"
    },
    "eks_admins_iam_group": {
     "expressions": {
      "attach_iam_self_management_policy": {
       "constant_value": false
      },
      "create_group": {
       "constant_value": true
      },
      "custom_group_policy_arns": {
       "references": [
        "module.allow_assume_eks_admins_iam_policy.arn",
        "module.allow_assume_eks_admins_iam_policy"
       ]
      },
      "group_users": {
       "references": [
        "module.user1_iam_user.iam_user_name",
        "module.user1_iam_user"
       ]
      },
      "name": {
       "constant_value": "eks-admin"
      }
     },
     "module": {
      "outputs": {
       "aws_account_id": {
        "description": "IAM AWS account id",
        "expression": {
         "references": [
          "local.aws_account_id"
         ]
        }
       },
       "group_arn": {
        "description": "IAM group arn",
        "expression": {
         "references": [
          "aws_iam_group.this[0].arn",
          "aws_iam_group.this[0]",
          "aws_iam_group.this"
         ]
        }
       },
       "group_name": {
        "description": "IAM group name",
        "expression": {
         "references": [
          "aws_iam_group.this[0].name",
          "aws_iam_group.this[0]",
          "aws_iam_group.this",
          "var.name"
         ]
        }
       },
       "group_users": {
        "description": "List of IAM users in IAM group",
        "expression": {
         "references": [
          "aws_iam_group_membership.this"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_iam_group.this",
        "count_expression": {
         "references": [
          "var.create_group"
         ]
        },
        "expressions": {
         "name": {
          "references": [
           "var.name"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_group"
       },
       {
        "address": "aws_iam_group_membership.this",
        "count_expression": {
         "references": [
          "var.group_users"
         ]
        },
        "expressions": {
         "group": {
          "references": [
           "local.group_name"
          ]
         },
         "name": {
          "references": [
           "var.name"
          ]
         },
         "users": {
          "references": [
           "var.group_users"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_group_membership"
       },
       {
        "address": "aws_iam_group_policy_attachment.custom",
        "count_expression": {
         "references": [
          "var.custom_group_policies"
         ]
        },
        "expressions": {
         "group": {
          "references": [
           "local.group_name"
          ]
         },
         "policy_arn": {
          "references": [
           "aws_iam_policy.custom",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "custom",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_group_policy_attachment"
       },
       {
        "address": "aws_iam_group_policy_attachment.custom_arns",
        "count_expression": {
         "references": [
          "var.custom_group_policy_arns"
         ]
        },
        "expressions": {
         "group": {
          "references": [
           "local.group_name"
          ]
         },
         "policy_arn": {
          "references": [
           "var.custom_group_policy_arns",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "custom_arns",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_group_policy_attachment"
       },
       {
        "address": "aws_iam_group_policy_attachment.iam_self_management",
        "count_expression": {
         "references": [
          "var.attach_iam_self_management_policy"
         ]
        },
        "expressions": {
         "group": {
          "references": [
           "local.group_name"
          ]
         },
         "policy_arn": {
          "references": [
           "aws_iam_policy.iam_self_management[0].arn",
           "aws_iam_policy.iam_self_management[0]",
           "aws_iam_policy.iam_self_management"
          ]
         }
        },
        "mode": "managed",
        "name": "iam_self_management",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_group_policy_attachment"
       },
       {
        "address": "aws_iam_policy.custom",
        "count_expression": {
         "references": [
          "var.custom_group_policies"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.custom_group_policies",
           "count.index"
          ]
         },
         "name": {
          "references": [
           "var.custom_group_policies",
           "count.index"
          ]
         },
         "policy": {
          "references": [
           "var.custom_group_policies",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "custom",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_policy.iam_self_management",
        "count_expression": {
         "references": [
          "var.attach_iam_self_management_policy"
         ]
        },
        "expressions": {
         "name_prefix": {
          "references": [
           "var.iam_self_management_policy_name_prefix"
          ]
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.iam_self_management.json",
           "data.aws_iam_policy_document.iam_self_management"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "iam_self_management",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "data.aws_caller_identity.current",
        "count_expression": {
         "references": [
          "var.aws_account_id"
         ]
        },
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_iam_policy_document.iam_self_management",
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "iam:ChangePassword",
             "iam:CreateAccessKey",
             "iam:CreateLoginProfile",
             "iam:CreateVirtualMFADevice",
             "iam:DeleteAccessKey",
             "iam:DeleteLoginProfile",
             "iam:DeleteVirtualMFADevice",
             "iam:EnableMFADevice",
             "iam:GenerateCredentialReport",
             "iam:GenerateServiceLastAccessedDetails",
             "iam:Get*",
             "iam:List*",
             "iam:ResyncMFADevice",
             "iam:UpdateAccessKey",
             "iam:UpdateLoginProfile",
             "iam:UpdateUser",
             "iam:UploadSigningCertificate",
             "iam:UploadSSHPublicKey"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "resources": {
            "references": [
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id",
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id",
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id"
            ]
           },
           "sid": {
            "constant_value": "AllowSelfManagement"
           }
          },
          {
           "actions": {
            "constant_value": [
             "iam:Get*",
             "iam:List*"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AllowIAMReadOnly"
           }
          },
          {
           "actions": {
            "constant_value": [
             "iam:DeactivateMFADevice"
            ]
           },
           "condition": [
            {
             "test": {
              "constant_value": "Bool"
             },
             "values": {
              "constant_value": [
               "true"
              ]
             },
             "variable": {
              "constant_value": "aws:MultiFactorAuthPresent"
             }
            },
            {
             "test": {
              "constant_value": "NumericLessThan"
             },
             "values": {
              "constant_value": [
               "3600"
              ]
             },
             "variable": {
              "constant_value": "aws:MultiFactorAuthAge"
             }
            }
           ],
           "effect": {
            "constant_value": "Allow"
           },
           "resources": {
            "references": [
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id",
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id",
             "data.aws_partition.current.partition",
             "data.aws_partition.current",
             "local.aws_account_id"
            ]
           },
           "sid": {
            "constant_value": "AllowDeactivateMFADevice"
           }
          }
         ]
        },
        "mode": "data",
        "name": "iam_self_management",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_partition"
       }
      ],
      "variables": {
       "attach_iam_self_management_policy": {
        "default": true,
        "description": "Whether to attach IAM policy which allows IAM users to manage their credentials and MFA"
       },
       "aws_account_id": {
        "default": "",
        "description": "AWS account id to use inside IAM policies. If empty, current AWS account ID will be used."
       },
       "create_group": {
        "default": true,
        "description": "Whether to create IAM group"
       },
       "custom_group_policies": {
        "default": [],
        "description": "List of maps of inline IAM policies to attach to IAM group. Should have `name` and `policy` keys in each element."
       },
       "custom_group_policy_arns": {
        "default": [],
        "description": "List of IAM policies ARNs to attach to IAM group"
       },
       "group_users": {
        "default": [],
        "description": "List of IAM users to have in an IAM group which can assume the role"
       },
       "iam_self_management_policy_name_prefix": {
        "default": "IAMSelfManagement-",
        "description": "Name prefix for IAM policy to create with IAM self-management permissions"
       },
       "name": {
        "default": "",
        "description": "Name of IAM group"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources."
       }
      }
     },
     "source": "terraform-aws-modules/iam/aws//modules/iam-group-with-policies",
     "version_constraint": "5.3.1"
    },
    "eks_admins_iam_role": {
     "expressions": {
      "create_role": {
       "constant_value": true
      },
      "custom_role_policy_arns": {
       "references": [
        "module.allow_eks_access_iam_policy.arn",
        "module.allow_eks_access_iam_policy"
       ]
      },
      "role_name": {
       "constant_value": "eks-admin"
      },
      "role_requires_mfa": {
       "constant_value": false
      },
      "trusted_role_arns": {
       "references": [
        "module.vpc.vpc_owner_id",
        "module.vpc"
       ]
      }
     },
     "module": {
      "outputs": {
       "iam_instance_profile_arn": {
        "description": "ARN of IAM instance profile",
        "expression": {
         "references": [
          "aws_iam_instance_profile.this[0].arn",
          "aws_iam_instance_profile.this[0]",
          "aws_iam_instance_profile.this"
         ]
        }
       },
       "iam_instance_profile_id": {
        "description": "IAM Instance profile's ID.",
        "expression": {
         "references": [
          "aws_iam_instance_profile.this[0].id",
          "aws_iam_instance_profile.this[0]",
          "aws_iam_instance_profile.this"
         ]
        }
       },
       "iam_instance_profile_name": {
        "description": "Name of IAM instance profile",
        "expression": {
         "references": [
          "aws_iam_instance_profile.this[0].name",
          "aws_iam_instance_profile.this[0]",
          "aws_iam_instance_profile.this"
         ]
        }
       },
       "iam_instance_profile_path": {
        "description": "Path of IAM instance profile",
        "expression": {
         "references": [
          "aws_iam_instance_profile.this[0].path",
          "aws_iam_instance_profile.this[0]",
          "aws_iam_instance_profile.this"
         ]
        }
       },
       "iam_role_arn": {
        "description": "ARN of IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].arn",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "iam_role_name": {
        "description": "Name of IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].name",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "iam_role_path": {
        "description": "Path of IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].path",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "iam_role_unique_id": {
        "description": "Unique ID of IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].unique_id",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "role_requires_mfa": {
        "description": "Whether IAM role requires MFA",
        "expression": {
         "references": [
          "var.role_requires_mfa"
         ]
        }
       },
       "role_sts_externalid": {
        "description": "STS ExternalId condition value to use with a role",
        "expression": {
         "references": [
          "var.role_sts_externalid"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_iam_instance_profile.this",
        "count_expression": {
         "references": [
          "var.create_role",
          "var.create_instance_profile"
         ]
        },
        "expressions": {
         "name": {
          "references": [
           "var.role_name"
          ]
         },
         "path": {
          "references": [
           "var.role_path"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_instance_profile"
       },
       {
        "address": "aws_iam_role.this",
        "count_expression": {
         "references": [
          "var.create_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "var.custom_role_trust_policy",
           "data.aws_iam_policy_document.assume_role_with_mfa[0].json",
           "data.aws_iam_policy_document.assume_role_with_mfa[0]",
           "data.aws_iam_policy_document.assume_role_with_mfa",
           "data.aws_iam_policy_document.assume_role[0].json",
           "data.aws_iam_policy_document.assume_role[0]",
           "data.aws_iam_policy_document.assume_role"
          ]
         },
         "description": {
          "references": [
           "var.role_description"
          ]
         },
         "force_detach_policies": {
          "references": [
           "var.force_detach_policies"
          ]
         },
         "max_session_duration": {
          "references": [
           "var.max_session_duration"
          ]
         },
         "name": {
          "references": [
           "var.role_name"
          ]
         },
         "path": {
          "references": [
           "var.role_path"
          ]
         },
         "permissions_boundary": {
          "references": [
           "var.role_permissions_boundary_arn"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.admin",
        "count_expression": {
         "references": [
          "var.create_role",
          "var.attach_admin_policy"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "var.admin_role_policy_arn"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "admin",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.custom",
        "count_expression": {
         "references": [
          "var.create_role",
          "var.number_of_custom_role_policy_arns",
          "var.custom_role_policy_arns"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "var.custom_role_policy_arns",
           "count.index"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "custom",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.poweruser",
        "count_expression": {
         "references": [
          "var.create_role",
          "var.attach_poweruser_policy"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "var.poweruser_role_policy_arn"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "poweruser",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.readonly",
        "count_expression": {
         "references": [
          "var.create_role",
          "var.attach_readonly_policy"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "var.readonly_role_policy_arn"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "readonly",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "data.aws_iam_policy_document.assume_role",
        "count_expression": {
         "references": [
          "var.custom_role_trust_policy",
          "var.role_requires_mfa"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "references": [
             "var.trusted_role_actions"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "principals": [
            {
             "identifiers": {
              "references": [
               "var.trusted_role_arns"
              ]
             },
             "type": {
              "constant_value": "AWS"
             }
            },
            {
             "identifiers": {
              "references": [
               "var.trusted_role_services"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ]
          }
         ]
        },
        "mode": "data",
        "name": "assume_role",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.assume_role_with_mfa",
        "count_expression": {
         "references": [
          "var.custom_role_trust_policy",
          "var.role_requires_mfa"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "references": [
             "var.trusted_role_actions"
            ]
           },
           "condition": [
            {
             "test": {
              "constant_value": "Bool"
             },
             "values": {
              "constant_value": [
               "true"
              ]
             },
             "variable": {
              "constant_value": "aws:MultiFactorAuthPresent"
             }
            },
            {
             "test": {
              "constant_value": "NumericLessThan"
             },
             "values": {
              "references": [
               "var.mfa_age"
              ]
             },
             "variable": {
              "constant_value": "aws:MultiFactorAuthAge"
             }
            }
           ],
           "effect": {
            "constant_value": "Allow"
           },
           "principals": [
            {
             "identifiers": {
              "references": [
               "var.trusted_role_arns"
              ]
             },
             "type": {
              "constant_value": "AWS"
             }
            },
            {
             "identifiers": {
              "references": [
               "var.trusted_role_services"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ]
          }
         ]
        },
        "mode": "data",
        "name": "assume_role_with_mfa",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       }
      ],
      "variables": {
       "admin_role_policy_arn": {
        "default": "arn:aws:iam::aws:policy/AdministratorAccess",
        "description": "Policy ARN to use for admin role"
       },
       "attach_admin_policy": {
        "default": false,
        "description": "Whether to attach an admin policy to a role"
       },
       "attach_poweruser_policy": {
        "default": false,
        "description": "Whether to attach a poweruser policy to a role"
       },
       "attach_readonly_policy": {
        "default": false,
        "description": "Whether to attach a readonly policy to a role"
       },
       "create_instance_profile": {
        "default": false,
        "description": "Whether to create an instance profile"
       },
       "create_role": {
        "default": false,
        "description": "Whether to create a role"
       },
       "custom_role_policy_arns": {
        "default": [],
        "description": "List of ARNs of IAM policies to attach to IAM role"
       },
       "custom_role_trust_policy": {
        "default": "",
        "description": "A custom role trust policy"
       },
       "force_detach_policies": {
        "default": false,
        "description": "Whether policies should be detached from this role when destroying"
       },
       "max_session_duration": {
        "default": 3600,
        "description": "Maximum CLI/API session duration in seconds between 3600 and 43200"
       },
       "mfa_age": {
        "default": 86400,
        "description": "Max age of valid MFA (in seconds) for roles which require MFA"
       },
       "number_of_custom_role_policy_arns": {
        "default": null,
        "description": "Number of IAM policies to attach to IAM role"
       },
       "poweruser_role_policy_arn": {
        "default": "arn:aws:iam::aws:policy/PowerUserAccess",
        "description": "Policy ARN to use for poweruser role"
       },
       "readonly_role_policy_arn": {
        "default": "arn:aws:iam::aws:policy/ReadOnlyAccess",
        "description": "Policy ARN to use for readonly role"
       },
       "role_description": {
        "default": "",
        "description": "IAM Role description"
       },
       "role_name": {
        "default": "",
        "description": "IAM role name"
       },
       "role_path": {
        "default": "/",
        "description": "Path of IAM role"
       },
       "role_permissions_boundary_arn": {
        "default": "",
        "description": "Permissions boundary ARN to use for IAM role"
       },
       "role_requires_mfa": {
        "default": true,
        "description": "Whether role requires MFA"
       },
       "role_sts_externalid": {
        "default": [],
        "description": "STS ExternalId condition values to use with a role (when MFA is not required)"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to IAM role resources"
       },
       "trusted_role_actions": {
        "default": [
         "sts:AssumeRole"
        ],
        "description": "Actions of STS"
       },
       "trusted_role_arns": {
        "default": [],
        "description": "ARNs of AWS entities who can assume these roles"
       },
       "trusted_role_services": {
        "default": [],
        "description": "AWS Services that can assume these roles"
       }
      }
     },
     "source": "terraform-aws-modules/iam/aws//modules/iam-assumable-role",
     "version_constraint": "5.3.1"
    },
    "user1_iam_user": {
     "expressions": {
      "create_iam_access_key": {
       "constant_value": false
      },
      "create_iam_user_login_profile": {
       "constant_value": false
      },
      "force_destroy": {
       "constant_value": true
      },
      "name": {
       "constant_value": "user1"
      }
     },
     "module": {
      "outputs": {
       "iam_access_key_encrypted_secret": {
        "description": "The encrypted secret, base64 encoded",
        "expression": {
         "references": [
          "aws_iam_access_key.this[0].encrypted_secret",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this"
         ]
        }
       },
       "iam_access_key_id": {
        "description": "The access key ID",
        "expression": {
         "references": [
          "aws_iam_access_key.this[0].id",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this",
          "aws_iam_access_key.this_no_pgp[0].id",
          "aws_iam_access_key.this_no_pgp[0]",
          "aws_iam_access_key.this_no_pgp"
         ]
        }
       },
       "iam_access_key_key_fingerprint": {
        "description": "The fingerprint of the PGP key used to encrypt the secret",
        "expression": {
         "references": [
          "aws_iam_access_key.this[0].key_fingerprint",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this"
         ]
        }
       },
       "iam_access_key_secret": {
        "description": "The access key secret",
        "expression": {
         "references": [
          "aws_iam_access_key.this_no_pgp[0].secret",
          "aws_iam_access_key.this_no_pgp[0]",
          "aws_iam_access_key.this_no_pgp"
         ]
        },
        "sensitive": true
       },
       "iam_access_key_ses_smtp_password_v4": {
        "description": "The secret access key converted into an SES SMTP password by applying AWS's Sigv4 conversion algorithm",
        "expression": {
         "references": [
          "aws_iam_access_key.this[0].ses_smtp_password_v4",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this",
          "aws_iam_access_key.this_no_pgp[0].ses_smtp_password_v4",
          "aws_iam_access_key.this_no_pgp[0]",
          "aws_iam_access_key.this_no_pgp"
         ]
        },
        "sensitive": true
       },
       "iam_access_key_status": {
        "description": "Active or Inactive. Keys are initially active, but can be made inactive by other means.",
        "expression": {
         "references": [
          "aws_iam_access_key.this[0].status",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this",
          "aws_iam_access_key.this_no_pgp[0].status",
          "aws_iam_access_key.this_no_pgp[0]",
          "aws_iam_access_key.this_no_pgp"
         ]
        }
       },
       "iam_user_arn": {
        "description": "The ARN assigned by AWS for this user",
        "expression": {
         "references": [
          "aws_iam_user.this[0].arn",
          "aws_iam_user.this[0]",
          "aws_iam_user.this"
         ]
        }
       },
       "iam_user_login_profile_encrypted_password": {
        "description": "The encrypted password, base64 encoded",
        "expression": {
         "references": [
          "aws_iam_user_login_profile.this[0].encrypted_password",
          "aws_iam_user_login_profile.this[0]",
          "aws_iam_user_login_profile.this"
         ]
        }
       },
       "iam_user_login_profile_key_fingerprint": {
        "description": "The fingerprint of the PGP key used to encrypt the password",
        "expression": {
         "references": [
          "aws_iam_user_login_profile.this[0].key_fingerprint",
          "aws_iam_user_login_profile.this[0]",
          "aws_iam_user_login_profile.this"
         ]
        }
       },
       "iam_user_login_profile_password": {
        "description": "The user password",
        "expression": {
         "references": [
          "aws_iam_user_login_profile.this[0]",
          "aws_iam_user_login_profile.this"
         ]
        },
        "sensitive": true
       },
       "iam_user_name": {
        "description": "The user's name",
        "expression": {
         "references": [
          "aws_iam_user.this[0].name",
          "aws_iam_user.this[0]",
          "aws_iam_user.this"
         ]
        }
       },
       "iam_user_ssh_key_fingerprint": {
        "description": "The MD5 message digest of the SSH public key",
        "expression": {
         "references": [
          "aws_iam_user_ssh_key.this[0].fingerprint",
          "aws_iam_user_ssh_key.this[0]",
          "aws_iam_user_ssh_key.this"
         ]
        }
       },
       "iam_user_ssh_key_ssh_public_key_id": {
        "description": "The unique identifier for the SSH public key",
        "expression": {
         "references": [
          "aws_iam_user_ssh_key.this[0].ssh_public_key_id",
          "aws_iam_user_ssh_key.this[0]",
          "aws_iam_user_ssh_key.this"
         ]
        }
       },
       "iam_user_unique_id": {
        "description": "The unique ID assigned by AWS",
        "expression": {
         "references": [
          "aws_iam_user.this[0].unique_id",
          "aws_iam_user.this[0]",
          "aws_iam_user.this"
         ]
        }
       },
       "keybase_password_decrypt_command": {
        "description": "Decrypt user password command",
        "expression": {
         "references": [
          "local.has_encrypted_password",
          "aws_iam_user_login_profile.this[0].encrypted_password",
          "aws_iam_user_login_profile.this[0]",
          "aws_iam_user_login_profile.this"
         ]
        }
       },
       "keybase_password_pgp_message": {
        "description": "Encrypted password",
        "expression": {
         "references": [
          "local.has_encrypted_password",
          "aws_iam_user_login_profile.this[0].encrypted_password",
          "aws_iam_user_login_profile.this[0]",
          "aws_iam_user_login_profile.this"
         ]
        }
       },
       "keybase_secret_key_decrypt_command": {
        "description": "Decrypt access secret key command",
        "expression": {
         "references": [
          "local.has_encrypted_secret",
          "aws_iam_access_key.this[0].encrypted_secret",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this"
         ]
        }
       },
       "keybase_secret_key_pgp_message": {
        "description": "Encrypted access secret key",
        "expression": {
         "references": [
          "local.has_encrypted_secret",
          "aws_iam_access_key.this[0].encrypted_secret",
          "aws_iam_access_key.this[0]",
          "aws_iam_access_key.this"
         ]
        }
       },
       "pgp_key": {
        "description": "PGP key used to encrypt sensitive data for this user (if empty - secrets are not encrypted)",
        "expression": {
         "references": [
          "var.pgp_key"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_iam_access_key.this",
        "count_expression": {
         "references": [
          "var.create_user",
          "var.create_iam_access_key",
          "var.pgp_key"
         ]
        },
        "expressions": {
         "pgp_key": {
          "references": [
           "var.pgp_key"
          ]
         },
         "user": {
          "references": [
           "aws_iam_user.this[0].name",
           "aws_iam_user.this[0]",
           "aws_iam_user.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_access_key"
       },
       {
        "address": "aws_iam_access_key.this_no_pgp",
        "count_expression": {
         "references": [
          "var.create_user",
          "var.create_iam_access_key",
          "var.pgp_key"
         ]
        },
        "expressions": {
         "user": {
          "references": [
           "aws_iam_user.this[0].name",
           "aws_iam_user.this[0]",
           "aws_iam_user.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this_no_pgp",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_access_key"
       },
       {
        "address": "aws_iam_user.this",
        "count_expression": {
         "references": [
          "var.create_user"
         ]
        },
        "expressions": {
         "force_destroy": {
          "references": [
           "var.force_destroy"
          ]
         },
         "name": {
          "references": [
           "var.name"
          ]
         },
         "path": {
          "references": [
           "var.path"
          ]
         },
         "permissions_boundary": {
          "references": [
           "var.permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_user"
       },
       {
        "address": "aws_iam_user_login_profile.this",
        "count_expression": {
         "references": [
          "var.create_user",
          "var.create_iam_user_login_profile"
         ]
        },
        "expressions": {
         "password_length": {
          "references": [
           "var.password_length"
          ]
         },
         "password_reset_required": {
          "references": [
           "var.password_reset_required"
          ]
         },
         "pgp_key": {
          "references": [
           "var.pgp_key"
          ]
         },
         "user": {
          "references": [
           "aws_iam_user.this[0].name",
           "aws_iam_user.this[0]",
           "aws_iam_user.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_user_login_profile"
       },
       {
        "address": "aws_iam_user_ssh_key.this",
        "count_expression": {
         "references": [
          "var.create_user",
          "var.upload_iam_user_ssh_key"
         ]
        },
        "expressions": {
         "encoding": {
          "references": [
           "var.ssh_key_encoding"
          ]
         },
         "public_key": {
          "references": [
           "var.ssh_public_key"
          ]
         },
         "username": {
          "references": [
           "aws_iam_user.this[0].name",
           "aws_iam_user.this[0]",
           "aws_iam_user.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_user_ssh_key"
       }
      ],
      "variables": {
       "create_iam_access_key": {
        "default": true,
        "description": "Whether to create IAM access key"
       },
       "create_iam_user_login_profile": {
        "default": true,
        "description": "Whether to create IAM user login profile"
       },
       "create_user": {
        "default": true,
        "description": "Whether to create the IAM user"
       },
       "force_destroy": {
        "default": false,
        "description": "When destroying this user, destroy even if it has non-Terraform-managed IAM access keys, login profile or MFA devices. Without force_destroy a user with non-Terraform-managed access keys and login profile will fail to be destroyed."
       },
       "name": {
        "description": "Desired name for the IAM user"
       },
       "password_length": {
        "default": 20,
        "description": "The length of the generated password"
       },
       "password_reset_required": {
        "default": true,
        "description": "Whether the user should be forced to reset the generated password on first login."
       },
       "path": {
        "default": "/",
        "description": "Desired path for the IAM user"
       },
       "permissions_boundary": {
        "default": "",
        "description": "The ARN of the policy that is used to set the permissions boundary for the user."
       },
       "pgp_key": {
        "default": "",
        "description": "Either a base-64 encoded PGP public key, or a keybase username in the form `keybase:username`. Used to encrypt password and access key."
       },
       "ssh_key_encoding": {
        "default": "SSH",
        "description": "Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use SSH. To retrieve the public key in PEM format, use PEM"
       },
       "ssh_public_key": {
        "default": "",
        "description": "The SSH public key. The public key must be encoded in ssh-rsa format or PEM format"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources."
       },
       "upload_iam_user_ssh_key": {
        "default": false,
        "description": "Whether to upload a public ssh key to the IAM user"
       }
      }
     },
     "source": "terraform-aws-modules/iam/aws//modules/iam-user",
     "version_constraint": "5.3.1"
    },
    "vpc": {
     "expressions": {
      "azs": {
       "constant_value": [
        "us-east-1a",
        "us-east-1b"
       ]
      },
      "cidr": {
       "constant_value": "10.0.0.0/16"
      },
      "create_igw": {
       "constant_value": true
      },
      "enable_dns_hostnames": {
       "constant_value": true
      },
      "enable_dns_support": {
       "constant_value": true
      },
      "enable_nat_gateway": {
       "constant_value": true
      },
      "name": {
       "constant_value": "other-tools-vpc"
      },
      "one_nat_gateway_per_az": {
       "constant_value": false
      },
      "private_subnet_tags": {
       "constant_value": {
        "kubernetes.io/role/internal-elb": "1"
       }
      },
      "private_subnets": {
       "constant_value": [
        "10.0.1.0/24",
        "10.0.2.0/24"
       ]
      },
      "public_subnet_tags": {
       "constant_value": {
        "kubernetes.io/role/elb": "1"
       }
      },
      "public_subnets": {
       "constant_value": [
        "10.0.101.0/24",
        "10.0.102.0/24"
       ]
      },
      "single_nat_gateway": {
       "constant_value": false
      },
      "tags": {
       "references": [
        "var.environment"
       ]
      }
     },
     "module": {
      "outputs": {
       "azs": {
        "description": "A list of availability zones specified as argument to this module",
        "expression": {
         "references": [
          "var.azs"
         ]
        }
       },
       "cgw_arns": {
        "description": "List of ARNs of Customer Gateway",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "cgw_ids": {
        "description": "List of IDs of Customer Gateway",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "database_internet_gateway_route_id": {
        "description": "ID of the database internet gateway route",
        "expression": {
         "references": [
          "aws_route.database_internet_gateway[0].id",
          "aws_route.database_internet_gateway[0]",
          "aws_route.database_internet_gateway"
         ]
        }
       },
       "database_ipv6_egress_route_id": {
        "description": "ID of the database IPv6 egress route",
        "expression": {
         "references": [
          "aws_route.database_ipv6_egress[0].id",
          "aws_route.database_ipv6_egress[0]",
          "aws_route.database_ipv6_egress"
         ]
        }
       },
       "database_nat_gateway_route_ids": {
        "description": "List of IDs of the database nat gateway route",
        "expression": {
         "references": [
          "aws_route.database_nat_gateway"
         ]
        }
       },
       "database_network_acl_arn": {
        "description": "ARN of the database network ACL",
        "expression": {
         "references": [
          "aws_network_acl.database[0].arn",
          "aws_network_acl.database[0]",
          "aws_network_acl.database"
         ]
        }
       },
       "database_network_acl_id": {
        "description": "ID of the database network ACL",
        "expression": {
         "references": [
          "aws_network_acl.database[0].id",
          "aws_network_acl.database[0]",
          "aws_network_acl.database"
         ]
        }
       },
       "database_route_table_association_ids": {
        "description": "List of IDs of the database route table association",
        "expression": {
         "references": [
          "aws_route_table_association.database"
         ]
        }
       },
       "database_route_table_ids": {
        "description": "List of IDs of database route tables",
        "expression": {
         "references": [
          "aws_route_table.database",
          "aws_route_table.private"
         ]
        }
       },
       "database_subnet_arns": {
        "description": "List of ARNs of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnet_group": {
        "description": "ID of database subnet group",
        "expression": {
         "references": [
          "aws_db_subnet_group.database[0].id",
          "aws_db_subnet_group.database[0]",
          "aws_db_subnet_group.database"
         ]
        }
       },
       "database_subnet_group_name": {
        "description": "Name of database subnet group",
        "expression": {
         "references": [
          "aws_db_subnet_group.database[0].name",
          "aws_db_subnet_group.database[0]",
          "aws_db_subnet_group.database"
         ]
        }
       },
       "database_subnets": {
        "description": "List of IDs of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "default_network_acl_id": {
        "description": "The ID of the default network ACL",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_network_acl_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_route_table_id": {
        "description": "The ID of the default route table",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_route_table_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_security_group_id": {
        "description": "The ID of the security group created by default on VPC creation",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_security_group_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_vpc_arn": {
        "description": "The ARN of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].arn",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_cidr_block": {
        "description": "The CIDR block of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].cidr_block",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_network_acl_id": {
        "description": "The ID of the default network ACL of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_network_acl_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_route_table_id": {
        "description": "The ID of the default route table of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_route_table_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_security_group_id": {
        "description": "The ID of the security group created by default on Default VPC creation",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_security_group_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_enable_dns_hostnames": {
        "description": "Whether or not the Default VPC has DNS hostname support",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].enable_dns_hostnames",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_enable_dns_support": {
        "description": "Whether or not the Default VPC has DNS support",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].enable_dns_support",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_id": {
        "description": "The ID of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_instance_tenancy": {
        "description": "Tenancy of instances spin up within Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].instance_tenancy",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_main_route_table_id": {
        "description": "The ID of the main route table associated with the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].main_route_table_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "dhcp_options_id": {
        "description": "The ID of the DHCP options",
        "expression": {
         "references": [
          "aws_vpc_dhcp_options.this[0].id",
          "aws_vpc_dhcp_options.this[0]",
          "aws_vpc_dhcp_options.this"
         ]
        }
       },
       "egress_only_internet_gateway_id": {
        "description": "The ID of the egress only Internet Gateway",
        "expression": {
         "references": [
          "aws_egress_only_internet_gateway.this[0].id",
          "aws_egress_only_internet_gateway.this[0]",
          "aws_egress_only_internet_gateway.this"
         ]
        }
       },
       "elasticache_network_acl_arn": {
        "description": "ARN of the elasticache network ACL",
        "expression": {
         "references": [
          "aws_network_acl.elasticache[0].arn",
          "aws_network_acl.elasticache[0]",
          "aws_network_acl.elasticache"
         ]
        }
       },
       "elasticache_network_acl_id": {
        "description": "ID of the elasticache network ACL",
        "expression": {
         "references": [
          "aws_network_acl.elasticache[0].id",
          "aws_network_acl.elasticache[0]",
          "aws_network_acl.elasticache"
         ]
        }
       },
       "elasticache_route_table_association_ids": {
        "description": "List of IDs of the elasticache route table association",
        "expression": {
         "references": [
          "aws_route_table_association.elasticache"
         ]
        }
       },
       "elasticache_route_table_ids": {
        "description": "List of IDs of elasticache route tables",
        "expression": {
         "references": [
          "aws_route_table.elasticache",
          "aws_route_table.private"
         ]
        }
       },
       "elasticache_subnet_arns": {
        "description": "List of ARNs of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnet_group": {
        "description": "ID of elasticache subnet group",
        "expression": {
         "references": [
          "aws_elasticache_subnet_group.elasticache[0].id",
          "aws_elasticache_subnet_group.elasticache[0]",
          "aws_elasticache_subnet_group.elasticache"
         ]
        }
       },
       "elasticache_subnet_group_name": {
        "description": "Name of elasticache subnet group",
        "expression": {
         "references": [
          "aws_elasticache_subnet_group.elasticache[0].name",
          "aws_elasticache_subnet_group.elasticache[0]",
          "aws_elasticache_subnet_group.elasticache"
         ]
        }
       },
       "elasticache_subnets": {
        "description": "List of IDs of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "igw_arn": {
        "description": "The ARN of the Internet Gateway",
        "expression": {
         "references": [
          "aws_internet_gateway.this[0].arn",
          "aws_internet_gateway.this[0]",
          "aws_internet_gateway.this"
         ]
        }
       },
       "igw_id": {
        "description": "The ID of the Internet Gateway",
        "expression": {
         "references": [
          "aws_internet_gateway.this[0].id",
          "aws_internet_gateway.this[0]",
          "aws_internet_gateway.this"
         ]
        }
       },
       "intra_network_acl_arn": {
        "description": "ARN of the intra network ACL",
        "expression": {
         "references": [
          "aws_network_acl.intra[0].arn",
          "aws_network_acl.intra[0]",
          "aws_network_acl.intra"
         ]
        }
       },
       "intra_network_acl_id": {
        "description": "ID of the intra network ACL",
        "expression": {
         "references": [
          "aws_network_acl.intra[0].id",
          "aws_network_acl.intra[0]",
          "aws_network_acl.intra"
         ]
        }
       },
       "intra_route_table_association_ids": {
        "description": "List of IDs of the intra route table association",
        "expression": {
         "references": [
          "aws_route_table_association.intra"
         ]
        }
       },
       "intra_route_table_ids": {
        "description": "List of IDs of intra route tables",
        "expression": {
         "references": [
          "aws_route_table.intra"
         ]
        }
       },
       "intra_subnet_arns": {
        "description": "List of ARNs of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets": {
        "description": "List of IDs of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "name": {
        "description": "The name of the VPC specified as argument to this module",
        "expression": {
         "references": [
          "var.name"
         ]
        }
       },
       "nat_ids": {
        "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
        "expression": {
         "references": [
          "aws_eip.nat"
         ]
        }
       },
       "nat_public_ips": {
        "description": "List of public Elastic IPs created for AWS NAT Gateway",
        "expression": {
         "references": [
          "var.reuse_nat_ips",
          "var.external_nat_ips",
          "aws_eip.nat"
         ]
        }
       },
       "natgw_ids": {
        "description": "List of NAT Gateway IDs",
        "expression": {
         "references": [
          "aws_nat_gateway.this"
         ]
        }
       },
       "outpost_network_acl_arn": {
        "description": "ARN of the outpost network ACL",
        "expression": {
         "references": [
          "aws_network_acl.outpost[0].arn",
          "aws_network_acl.outpost[0]",
          "aws_network_acl.outpost"
         ]
        }
       },
       "outpost_network_acl_id": {
        "description": "ID of the outpost network ACL",
        "expression": {
         "references": [
          "aws_network_acl.outpost[0].id",
          "aws_network_acl.outpost[0]",
          "aws_network_acl.outpost"
         ]
        }
       },
       "outpost_subnet_arns": {
        "description": "List of ARNs of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets": {
        "description": "List of IDs of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "private_ipv6_egress_route_ids": {
        "description": "List of IDs of the ipv6 egress route",
        "expression": {
         "references": [
          "aws_route.private_ipv6_egress"
         ]
        }
       },
       "private_nat_gateway_route_ids": {
        "description": "List of IDs of the private nat gateway route",
        "expression": {
         "references": [
          "aws_route.private_nat_gateway"
         ]
        }
       },
       "private_network_acl_arn": {
        "description": "ARN of the private network ACL",
        "expression": {
         "references": [
          "aws_network_acl.private[0].arn",
          "aws_network_acl.private[0]",
          "aws_network_acl.private"
         ]
        }
       },
       "private_network_acl_id": {
        "description": "ID of the private network ACL",
        "expression": {
         "references": [
          "aws_network_acl.private[0].id",
          "aws_network_acl.private[0]",
          "aws_network_acl.private"
         ]
        }
       },
       "private_route_table_association_ids": {
        "description": "List of IDs of the private route table association",
        "expression": {
         "references": [
          "aws_route_table_association.private"
         ]
        }
       },
       "private_route_table_ids": {
        "description": "List of IDs of private route tables",
        "expression": {
         "references": [
          "aws_route_table.private"
         ]
        }
       },
       "private_subnet_arns": {
        "description": "List of ARNs of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets": {
        "description": "List of IDs of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "public_internet_gateway_ipv6_route_id": {
        "description": "ID of the IPv6 internet gateway route",
        "expression": {
         "references": [
          "aws_route.public_internet_gateway_ipv6[0].id",
          "aws_route.public_internet_gateway_ipv6[0]",
          "aws_route.public_internet_gateway_ipv6"
         ]
        }
       },
       "public_internet_gateway_route_id": {
        "description": "ID of the internet gateway route",
        "expression": {
         "references": [
          "aws_route.public_internet_gateway[0].id",
          "aws_route.public_internet_gateway[0]",
          "aws_route.public_internet_gateway"
         ]
        }
       },
       "public_network_acl_arn": {
        "description": "ARN of the public network ACL",
        "expression": {
         "references": [
          "aws_network_acl.public[0].arn",
          "aws_network_acl.public[0]",
          "aws_network_acl.public"
         ]
        }
       },
       "public_network_acl_id": {
        "description": "ID of the public network ACL",
        "expression": {
         "references": [
          "aws_network_acl.public[0].id",
          "aws_network_acl.public[0]",
          "aws_network_acl.public"
         ]
        }
       },
       "public_route_table_association_ids": {
        "description": "List of IDs of the public route table association",
        "expression": {
         "references": [
          "aws_route_table_association.public"
         ]
        }
       },
       "public_route_table_ids": {
        "description": "List of IDs of public route tables",
        "expression": {
         "references": [
          "aws_route_table.public"
         ]
        }
       },
       "public_subnet_arns": {
        "description": "List of ARNs of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets": {
        "description": "List of IDs of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "redshift_network_acl_arn": {
        "description": "ARN of the redshift network ACL",
        "expression": {
         "references": [
          "aws_network_acl.redshift[0].arn",
          "aws_network_acl.redshift[0]",
          "aws_network_acl.redshift"
         ]
        }
       },
       "redshift_network_acl_id": {
        "description": "ID of the redshift network ACL",
        "expression": {
         "references": [
          "aws_network_acl.redshift[0].id",
          "aws_network_acl.redshift[0]",
          "aws_network_acl.redshift"
         ]
        }
       },
       "redshift_public_route_table_association_ids": {
        "description": "List of IDs of the public redshift route table association",
        "expression": {
         "references": [
          "aws_route_table_association.redshift_public"
         ]
        }
       },
       "redshift_route_table_association_ids": {
        "description": "List of IDs of the redshift route table association",
        "expression": {
         "references": [
          "aws_route_table_association.redshift"
         ]
        }
       },
       "redshift_route_table_ids": {
        "description": "List of IDs of redshift route tables",
        "expression": {
         "references": [
          "aws_route_table.redshift",
          "aws_route_table.redshift",
          "var.enable_public_redshift",
          "aws_route_table.public",
          "aws_route_table.private"
         ]
        }
       },
       "redshift_subnet_arns": {
        "description": "List of ARNs of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnet_group": {
        "description": "ID of redshift subnet group",
        "expression": {
         "references": [
          "aws_redshift_subnet_group.redshift[0].id",
          "aws_redshift_subnet_group.redshift[0]",
          "aws_redshift_subnet_group.redshift"
         ]
        }
       },
       "redshift_subnets": {
        "description": "List of IDs of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "this_customer_gateway": {
        "description": "Map of Customer Gateway attributes",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "vgw_arn": {
        "description": "The ARN of the VPN Gateway",
        "expression": {
         "references": [
          "aws_vpn_gateway.this[0].arn",
          "aws_vpn_gateway.this[0]",
          "aws_vpn_gateway.this"
         ]
        }
       },
       "vgw_id": {
        "description": "The ID of the VPN Gateway",
        "expression": {
         "references": [
          "aws_vpn_gateway.this[0].id",
          "aws_vpn_gateway.this[0]",
          "aws_vpn_gateway.this",
          "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
          "aws_vpn_gateway_attachment.this[0]",
          "aws_vpn_gateway_attachment.this"
         ]
        }
       },
       "vpc_arn": {
        "description": "The ARN of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].arn",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_cidr_block": {
        "description": "The CIDR block of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].cidr_block",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_enable_dns_hostnames": {
        "description": "Whether or not the VPC has DNS hostname support",
        "expression": {
         "references": [
          "aws_vpc.this[0].enable_dns_hostnames",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_enable_dns_support": {
        "description": "Whether or not the VPC has DNS support",
        "expression": {
         "references": [
          "aws_vpc.this[0].enable_dns_support",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_flow_log_cloudwatch_iam_role_arn": {
        "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
        "expression": {
         "references": [
          "local.flow_log_iam_role_arn"
         ]
        }
       },
       "vpc_flow_log_destination_arn": {
        "description": "The ARN of the destination for VPC Flow Logs",
        "expression": {
         "references": [
          "local.flow_log_destination_arn"
         ]
        }
       },
       "vpc_flow_log_destination_type": {
        "description": "The type of the destination for VPC Flow Logs",
        "expression": {
         "references": [
          "var.flow_log_destination_type"
         ]
        }
       },
       "vpc_flow_log_id": {
        "description": "The ID of the Flow Log resource",
        "expression": {
         "references": [
          "aws_flow_log.this[0].id",
          "aws_flow_log.this[0]",
          "aws_flow_log.this"
         ]
        }
       },
       "vpc_id": {
        "description": "The ID of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_instance_tenancy": {
        "description": "Tenancy of instances spin up within VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].instance_tenancy",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_ipv6_association_id": {
        "description": "The association ID for the IPv6 CIDR block",
        "expression": {
         "references": [
          "aws_vpc.this[0].ipv6_association_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_ipv6_cidr_block": {
        "description": "The IPv6 CIDR block",
        "expression": {
         "references": [
          "aws_vpc.this[0].ipv6_cidr_block",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_main_route_table_id": {
        "description": "The ID of the main route table associated with this VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].main_route_table_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_owner_id": {
        "description": "The ID of the AWS account that owns the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].owner_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_secondary_cidr_blocks": {
        "description": "List of secondary CIDR blocks of the VPC",
        "expression": {
         "references": [
          "aws_vpc_ipv4_cidr_block_association.this"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.flow_log",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_log_group"
         ]
        },
        "expressions": {
         "kms_key_id": {
          "references": [
           "var.flow_log_cloudwatch_log_group_kms_key_id"
          ]
         },
         "name": {
          "references": [
           "var.flow_log_cloudwatch_log_group_name_prefix",
           "local.flow_log_cloudwatch_log_group_name_suffix"
          ]
         },
         "retention_in_days": {
          "references": [
           "var.flow_log_cloudwatch_log_group_retention_in_days"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "flow_log",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_customer_gateway.this",
        "expressions": {
         "bgp_asn": {
          "references": [
           "each.value[\"bgp_asn\"]",
           "each.value"
          ]
         },
         "device_name": {
          "references": [
           "each.value"
          ]
         },
         "ip_address": {
          "references": [
           "each.value[\"ip_address\"]",
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "each.key",
           "var.tags",
           "var.customer_gateway_tags"
          ]
         },
         "type": {
          "constant_value": "ipsec.1"
         }
        },
        "for_each_expression": {
         "references": [
          "var.customer_gateways"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_customer_gateway"
       },
       {
        "address": "aws_db_subnet_group.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.create_database_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.database_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.database"
          ]
         },
         "tags": {
          "references": [
           "var.database_subnet_group_name",
           "var.name",
           "var.tags",
           "var.database_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_db_subnet_group"
       },
       {
        "address": "aws_default_network_acl.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_network_acl"
         ]
        },
        "expressions": {
         "default_network_acl_id": {
          "references": [
           "aws_vpc.this[0].default_network_acl_id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         },
         "subnet_ids": {
          "constant_value": null
         },
         "tags": {
          "references": [
           "var.default_network_acl_name",
           "var.name",
           "var.tags",
           "var.default_network_acl_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_default_network_acl"
       },
       {
        "address": "aws_default_route_table.default",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_route_table"
         ]
        },
        "expressions": {
         "default_route_table_id": {
          "references": [
           "aws_vpc.this[0].default_route_table_id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         },
         "propagating_vgws": {
          "references": [
           "var.default_route_table_propagating_vgws"
          ]
         },
         "tags": {
          "references": [
           "var.default_route_table_name",
           "var.name",
           "var.tags",
           "var.default_route_table_tags"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          },
          "update": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "default",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_default_route_table"
       },
       {
        "address": "aws_default_security_group.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_security_group"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.default_security_group_name",
           "var.name",
           "var.tags",
           "var.default_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "aws_vpc.this[0].id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_default_security_group"
       },
       {
        "address": "aws_default_vpc.this",
        "count_expression": {
         "references": [
          "var.manage_default_vpc"
         ]
        },
        "expressions": {
         "enable_classiclink": {
          "constant_value": null
         },
         "enable_dns_hostnames": {
          "references": [
           "var.default_vpc_enable_dns_hostnames"
          ]
         },
         "enable_dns_support": {
          "references": [
           "var.default_vpc_enable_dns_support"
          ]
         },
         "tags": {
          "references": [
           "var.default_vpc_name",
           "var.tags",
           "var.default_vpc_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_default_vpc"
       },
       {
        "address": "aws_egress_only_internet_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "local.max_subnet_length"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.igw_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_egress_only_internet_gateway"
       },
       {
        "address": "aws_eip.nat",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "var.reuse_nat_ips",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.azs",
           "var.single_nat_gateway",
           "count.index",
           "var.tags",
           "var.nat_eip_tags"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "nat",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_elasticache_subnet_group.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.create_elasticache_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.elasticache_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.elasticache"
          ]
         },
         "tags": {
          "references": [
           "var.elasticache_subnet_group_name",
           "var.name",
           "var.tags",
           "var.elasticache_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_elasticache_subnet_group"
       },
       {
        "address": "aws_flow_log.this",
        "count_expression": {
         "references": [
          "local.enable_flow_log"
         ]
        },
        "expressions": {
         "iam_role_arn": {
          "references": [
           "local.flow_log_iam_role_arn"
          ]
         },
         "log_destination": {
          "references": [
           "local.flow_log_destination_arn"
          ]
         },
         "log_destination_type": {
          "references": [
           "var.flow_log_destination_type"
          ]
         },
         "log_format": {
          "references": [
           "var.flow_log_log_format"
          ]
         },
         "max_aggregation_interval": {
          "references": [
           "var.flow_log_max_aggregation_interval"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         },
         "traffic_type": {
          "references": [
           "var.flow_log_traffic_type"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_flow_log"
       },
       {
        "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "name_prefix": {
          "constant_value": "vpc-flow-log-to-cloudwatch-"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_role.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
          ]
         },
         "name_prefix": {
          "constant_value": "vpc-flow-log-role-"
         },
         "permissions_boundary": {
          "references": [
           "var.vpc_flow_log_permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
           "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
           "aws_iam_policy.vpc_flow_log_cloudwatch"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
           "aws_iam_role.vpc_flow_log_cloudwatch[0]",
           "aws_iam_role.vpc_flow_log_cloudwatch"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_internet_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.igw_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_internet_gateway"
       },
       {
        "address": "aws_nat_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "local.nat_gateway_count"
         ]
        },
        "depends_on": [
         "aws_internet_gateway.this"
        ],
        "expressions": {
         "allocation_id": {
          "references": [
           "local.nat_gateway_ips",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.public",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.azs",
           "var.single_nat_gateway",
           "count.index",
           "var.tags",
           "var.nat_gateway_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_nat_gateway"
       },
       {
        "address": "aws_network_acl.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.database"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.database_subnet_suffix",
           "var.tags",
           "var.database_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.elasticache"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.tags",
           "var.elasticache_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.intra"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.intra_subnet_suffix",
           "var.tags",
           "var.intra_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.outpost"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.outpost_subnet_suffix",
           "var.tags",
           "var.outpost_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.private"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.private_subnet_suffix",
           "var.tags",
           "var.private_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.public"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.public_subnet_suffix",
           "var.tags",
           "var.public_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.redshift"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.redshift_subnet_suffix",
           "var.tags",
           "var.redshift_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl_rule.database_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets",
          "var.database_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.database[0].id",
           "aws_network_acl.database[0]",
           "aws_network_acl.database"
          ]
         },
         "protocol": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.database_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets",
          "var.database_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.database[0].id",
           "aws_network_acl.database[0]",
           "aws_network_acl.database"
          ]
         },
         "protocol": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.elasticache_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets",
          "var.elasticache_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.elasticache[0].id",
           "aws_network_acl.elasticache[0]",
           "aws_network_acl.elasticache"
          ]
         },
         "protocol": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.elasticache_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets",
          "var.elasticache_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.elasticache[0].id",
           "aws_network_acl.elasticache[0]",
           "aws_network_acl.elasticache"
          ]
         },
         "protocol": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.intra_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets",
          "var.intra_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.intra[0].id",
           "aws_network_acl.intra[0]",
           "aws_network_acl.intra"
          ]
         },
         "protocol": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.intra_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets",
          "var.intra_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.intra[0].id",
           "aws_network_acl.intra[0]",
           "aws_network_acl.intra"
          ]
         },
         "protocol": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.outpost_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets",
          "var.outpost_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.outpost[0].id",
           "aws_network_acl.outpost[0]",
           "aws_network_acl.outpost"
          ]
         },
         "protocol": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.outpost_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets",
          "var.outpost_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.outpost[0].id",
           "aws_network_acl.outpost[0]",
           "aws_network_acl.outpost"
          ]
         },
         "protocol": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.private_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets",
          "var.private_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.private[0].id",
           "aws_network_acl.private[0]",
           "aws_network_acl.private"
          ]
         },
         "protocol": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.private_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets",
          "var.private_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.private[0].id",
           "aws_network_acl.private[0]",
           "aws_network_acl.private"
          ]
         },
         "protocol": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.public_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets",
          "var.public_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.public[0].id",
           "aws_network_acl.public[0]",
           "aws_network_acl.public"
          ]
         },
         "protocol": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.public_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets",
          "var.public_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.public[0].id",
           "aws_network_acl.public[0]",
           "aws_network_acl.public"
          ]
         },
         "protocol": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.redshift_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets",
          "var.redshift_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.redshift[0].id",
           "aws_network_acl.redshift[0]",
           "aws_network_acl.redshift"
          ]
         },
         "protocol": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.redshift_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets",
          "var.redshift_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.redshift[0].id",
           "aws_network_acl.redshift[0]",
           "aws_network_acl.redshift"
          ]
         },
         "protocol": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_redshift_subnet_group.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.create_redshift_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.redshift_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.redshift"
          ]
         },
         "tags": {
          "references": [
           "var.redshift_subnet_group_name",
           "var.name",
           "var.tags",
           "var.redshift_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_redshift_subnet_group"
       },
       {
        "address": "aws_route.database_internet_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route",
          "var.create_database_nat_gateway_route"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database[0].id",
           "aws_route_table.database[0]",
           "aws_route_table.database"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_internet_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.database_ipv6_egress",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "egress_only_gateway_id": {
          "references": [
           "aws_egress_only_internet_gateway.this[0].id",
           "aws_egress_only_internet_gateway.this[0]",
           "aws_egress_only_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database[0].id",
           "aws_route_table.database[0]",
           "aws_route_table.database"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_ipv6_egress",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.database_nat_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route",
          "var.create_database_nat_gateway_route",
          "var.enable_nat_gateway",
          "var.single_nat_gateway",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "nat_gateway_id": {
          "references": [
           "aws_nat_gateway.this",
           "count.index"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database",
           "count.index"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_nat_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.private_ipv6_egress",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "egress_only_gateway_id": {
          "references": [
           "aws_egress_only_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_ipv6_egress",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.private_nat_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "references": [
           "var.nat_gateway_destination_cidr_block"
          ]
         },
         "nat_gateway_id": {
          "references": [
           "aws_nat_gateway.this",
           "count.index"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "private_nat_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.public_internet_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "public_internet_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.public_internet_gateway_ipv6",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.enable_ipv6",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         }
        },
        "mode": "managed",
        "name": "public_internet_gateway_ipv6",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route_table.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.single_nat_gateway",
          "var.create_database_internet_gateway_route",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.single_nat_gateway",
           "var.create_database_internet_gateway_route",
           "var.name",
           "var.database_subnet_suffix",
           "var.name",
           "var.database_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.database_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_elasticache_subnet_route_table",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.tags",
           "var.elasticache_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.intra_subnet_suffix",
           "var.tags",
           "var.intra_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "local.max_subnet_length",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.single_nat_gateway",
           "var.name",
           "var.private_subnet_suffix",
           "var.name",
           "var.private_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.private_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.public_subnet_suffix",
           "var.tags",
           "var.public_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_redshift_subnet_route_table",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.redshift_subnet_suffix",
           "var.tags",
           "var.redshift_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table_association.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.database",
           "aws_route_table.private",
           "var.create_database_subnet_route_table",
           "var.single_nat_gateway",
           "var.create_database_internet_gateway_route",
           "count.index",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.database",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.elasticache",
           "aws_route_table.private",
           "var.single_nat_gateway",
           "var.create_elasticache_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.elasticache",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.intra"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.intra",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_subnets",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.outpost",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_subnets",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.private",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.public",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.enable_public_redshift",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.redshift",
           "aws_route_table.private",
           "var.single_nat_gateway",
           "var.create_redshift_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.redshift",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.redshift_public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.enable_public_redshift",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.redshift",
           "aws_route_table.public",
           "var.single_nat_gateway",
           "var.create_redshift_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.redshift",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_subnet.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.database_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.database_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.database_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.database_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.database_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.database_subnet_names",
           "count.index",
           "var.name",
           "var.database_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.database_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.elasticache_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.elasticache_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.elasticache_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.elasticache_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.elasticache_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.elasticache_subnet_names",
           "count.index",
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.elasticache_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.intra_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.intra_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.intra_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.intra_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.intra_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.intra_subnet_names",
           "count.index",
           "var.name",
           "var.intra_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.intra_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_subnets",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.outpost_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.outpost_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.outpost_az"
          ]
         },
         "cidr_block": {
          "references": [
           "var.outpost_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.outpost_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.outpost_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "outpost_arn": {
          "references": [
           "var.outpost_arn"
          ]
         },
         "tags": {
          "references": [
           "var.outpost_subnet_names",
           "count.index",
           "var.name",
           "var.outpost_subnet_suffix",
           "var.outpost_az",
           "var.tags",
           "var.outpost_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_subnets",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.private_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.private_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.private_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.private_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.private_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.private_subnet_names",
           "count.index",
           "var.name",
           "var.private_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.private_subnet_tags",
           "var.private_subnet_tags_per_az",
           "var.azs",
           "count.index"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets",
          "var.one_nat_gateway_per_az",
          "var.public_subnets",
          "var.azs",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.public_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.public_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.public_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.public_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.public_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "map_public_ip_on_launch": {
          "references": [
           "var.map_public_ip_on_launch"
          ]
         },
         "tags": {
          "references": [
           "var.public_subnet_names",
           "count.index",
           "var.name",
           "var.public_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.public_subnet_tags",
           "var.public_subnet_tags_per_az",
           "var.azs",
           "count.index"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.redshift_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.redshift_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.redshift_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.redshift_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.redshift_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.redshift_subnet_names",
           "count.index",
           "var.name",
           "var.redshift_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.redshift_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_vpc.this",
        "count_expression": {
         "references": [
          "local.create_vpc"
         ]
        },
        "expressions": {
         "assign_generated_ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.use_ipam_pool"
          ]
         },
         "cidr_block": {
          "references": [
           "var.use_ipam_pool",
           "var.cidr"
          ]
         },
         "enable_classiclink": {
          "constant_value": null
         },
         "enable_classiclink_dns_support": {
          "constant_value": null
         },
         "enable_dns_hostnames": {
          "references": [
           "var.enable_dns_hostnames"
          ]
         },
         "enable_dns_support": {
          "references": [
           "var.enable_dns_support"
          ]
         },
         "instance_tenancy": {
          "references": [
           "var.instance_tenancy"
          ]
         },
         "ipv4_ipam_pool_id": {
          "references": [
           "var.ipv4_ipam_pool_id"
          ]
         },
         "ipv4_netmask_length": {
          "references": [
           "var.ipv4_netmask_length"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.ipv6_cidr"
          ]
         },
         "ipv6_ipam_pool_id": {
          "references": [
           "var.ipv6_ipam_pool_id"
          ]
         },
         "ipv6_netmask_length": {
          "references": [
           "var.ipv6_netmask_length"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.vpc_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_vpc"
       },
       {
        "address": "aws_vpc_dhcp_options.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_dhcp_options"
         ]
        },
        "expressions": {
         "domain_name": {
          "references": [
           "var.dhcp_options_domain_name"
          ]
         },
         "domain_name_servers": {
          "references": [
           "var.dhcp_options_domain_name_servers"
          ]
         },
         "netbios_name_servers": {
          "references": [
           "var.dhcp_options_netbios_name_servers"
          ]
         },
         "netbios_node_type": {
          "references": [
           "var.dhcp_options_netbios_node_type"
          ]
         },
         "ntp_servers": {
          "references": [
           "var.dhcp_options_ntp_servers"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.dhcp_options_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_dhcp_options"
       },
       {
        "address": "aws_vpc_dhcp_options_association.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_dhcp_options"
         ]
        },
        "expressions": {
         "dhcp_options_id": {
          "references": [
           "aws_vpc_dhcp_options.this[0].id",
           "aws_vpc_dhcp_options.this[0]",
           "aws_vpc_dhcp_options.this"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_dhcp_options_association"
       },
       {
        "address": "aws_vpc_ipv4_cidr_block_association.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.secondary_cidr_blocks",
          "var.secondary_cidr_blocks"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.secondary_cidr_blocks",
           "count.index"
          ]
         },
         "vpc_id": {
          "references": [
           "aws_vpc.this[0].id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_ipv4_cidr_block_association"
       },
       {
        "address": "aws_vpn_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_vpn_gateway"
         ]
        },
        "expressions": {
         "amazon_side_asn": {
          "references": [
           "var.amazon_side_asn"
          ]
         },
         "availability_zone": {
          "references": [
           "var.vpn_gateway_az"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.vpn_gateway_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway"
       },
       {
        "address": "aws_vpn_gateway_attachment.this",
        "count_expression": {
         "references": [
          "var.vpn_gateway_id"
         ]
        },
        "expressions": {
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "var.vpn_gateway_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_attachment"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_intra_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.intra",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_private_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_public_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.public",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "sts:AssumeRole"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "principals": [
            {
             "identifiers": {
              "constant_value": [
               "vpc-flow-logs.amazonaws.com"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ],
           "sid": {
            "constant_value": "AWSVPCFlowLogsAssumeRole"
           }
          }
         ]
        },
        "mode": "data",
        "name": "flow_log_cloudwatch_assume_role",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "logs:CreateLogStream",
             "logs:PutLogEvents",
             "logs:DescribeLogGroups",
             "logs:DescribeLogStreams"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
           }
          }
         ]
        },
        "mode": "data",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       }
      ],
      "variables": {
       "amazon_side_asn": {
        "default": "64512",
        "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
       },
       "assign_ipv6_address_on_creation": {
        "default": false,
        "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "azs": {
        "default": [],
        "description": "A list of availability zones names or ids in the region"
       },
       "cidr": {
        "default": "0.0.0.0/0",
        "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` \u0026 `ipv4_ipam_pool_id`"
       },
       "create_database_internet_gateway_route": {
        "default": false,
        "description": "Controls if an internet gateway route for public database access should be created"
       },
       "create_database_nat_gateway_route": {
        "default": false,
        "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
       },
       "create_database_subnet_group": {
        "default": true,
        "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
       },
       "create_database_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for database should be created"
       },
       "create_egress_only_igw": {
        "default": true,
        "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
       },
       "create_elasticache_subnet_group": {
        "default": true,
        "description": "Controls if elasticache subnet group should be created"
       },
       "create_elasticache_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for elasticache should be created"
       },
       "create_flow_log_cloudwatch_iam_role": {
        "default": false,
        "description": "Whether to create IAM role for VPC Flow Logs"
       },
       "create_flow_log_cloudwatch_log_group": {
        "default": false,
        "description": "Whether to create CloudWatch log group for VPC Flow Logs"
       },
       "create_igw": {
        "default": true,
        "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
       },
       "create_redshift_subnet_group": {
        "default": true,
        "description": "Controls if redshift subnet group should be created"
       },
       "create_redshift_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for redshift should be created"
       },
       "create_vpc": {
        "default": true,
        "description": "Controls if VPC should be created (it affects almost all resources)"
       },
       "customer_gateway_tags": {
        "default": {},
        "description": "Additional tags for the Customer Gateway"
       },
       "customer_gateways": {
        "default": {},
        "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
       },
       "database_acl_tags": {
        "default": {},
        "description": "Additional tags for the database subnets network ACL"
       },
       "database_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
       },
       "database_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Database subnets inbound network ACL rules"
       },
       "database_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Database subnets outbound network ACL rules"
       },
       "database_route_table_tags": {
        "default": {},
        "description": "Additional tags for the database route tables"
       },
       "database_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "database_subnet_group_name": {
        "default": null,
        "description": "Name of database subnet group"
       },
       "database_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the database subnet group"
       },
       "database_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "database_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated."
       },
       "database_subnet_suffix": {
        "default": "db",
        "description": "Suffix to append to database subnets name"
       },
       "database_subnet_tags": {
        "default": {},
        "description": "Additional tags for the database subnets"
       },
       "database_subnets": {
        "default": [],
        "description": "A list of database subnets"
       },
       "default_network_acl_egress": {
        "default": [
         {
          "action": "allow",
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_no": "100",
          "to_port": "0"
         },
         {
          "action": "allow",
          "from_port": "0",
          "ipv6_cidr_block": "::/0",
          "protocol": "-1",
          "rule_no": "101",
          "to_port": "0"
         }
        ],
        "description": "List of maps of egress rules to set on the Default Network ACL"
       },
       "default_network_acl_ingress": {
        "default": [
         {
          "action": "allow",
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_no": "100",
          "to_port": "0"
         },
         {
          "action": "allow",
          "from_port": "0",
          "ipv6_cidr_block": "::/0",
          "protocol": "-1",
          "rule_no": "101",
          "to_port": "0"
         }
        ],
        "description": "List of maps of ingress rules to set on the Default Network ACL"
       },
       "default_network_acl_name": {
        "default": null,
        "description": "Name to be used on the Default Network ACL"
       },
       "default_network_acl_tags": {
        "default": {},
        "description": "Additional tags for the Default Network ACL"
       },
       "default_route_table_name": {
        "default": null,
        "description": "Name to be used on the default route table"
       },
       "default_route_table_propagating_vgws": {
        "default": [],
        "description": "List of virtual gateways for propagation"
       },
       "default_route_table_routes": {
        "default": [],
        "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
       },
       "default_route_table_tags": {
        "default": {},
        "description": "Additional tags for the default route table"
       },
       "default_security_group_egress": {
        "default": [],
        "description": "List of maps of egress rules to set on the default security group"
       },
       "default_security_group_ingress": {
        "default": [],
        "description": "List of maps of ingress rules to set on the default security group"
       },
       "default_security_group_name": {
        "default": null,
        "description": "Name to be used on the default security group"
       },
       "default_security_group_tags": {
        "default": {},
        "description": "Additional tags for the default security group"
       },
       "default_vpc_enable_classiclink": {
        "default": false,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink in the Default VPC"
       },
       "default_vpc_enable_dns_hostnames": {
        "default": false,
        "description": "Should be true to enable DNS hostnames in the Default VPC"
       },
       "default_vpc_enable_dns_support": {
        "default": true,
        "description": "Should be true to enable DNS support in the Default VPC"
       },
       "default_vpc_name": {
        "default": null,
        "description": "Name to be used on the Default VPC"
       },
       "default_vpc_tags": {
        "default": {},
        "description": "Additional tags for the Default VPC"
       },
       "dhcp_options_domain_name": {
        "default": "",
        "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_domain_name_servers": {
        "default": [
         "AmazonProvidedDNS"
        ],
        "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_netbios_name_servers": {
        "default": [],
        "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_netbios_node_type": {
        "default": "",
        "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_ntp_servers": {
        "default": [],
        "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_tags": {
        "default": {},
        "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
       },
       "elasticache_acl_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnets network ACL"
       },
       "elasticache_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
       },
       "elasticache_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Elasticache subnets inbound network ACL rules"
       },
       "elasticache_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Elasticache subnets outbound network ACL rules"
       },
       "elasticache_route_table_tags": {
        "default": {},
        "description": "Additional tags for the elasticache route tables"
       },
       "elasticache_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "elasticache_subnet_group_name": {
        "default": null,
        "description": "Name of elasticache subnet group"
       },
       "elasticache_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnet group"
       },
       "elasticache_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "elasticache_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated."
       },
       "elasticache_subnet_suffix": {
        "default": "elasticache",
        "description": "Suffix to append to elasticache subnets name"
       },
       "elasticache_subnet_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnets"
       },
       "elasticache_subnets": {
        "default": [],
        "description": "A list of elasticache subnets"
       },
       "enable_classiclink": {
        "default": null,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
       },
       "enable_classiclink_dns_support": {
        "default": null,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
       },
       "enable_dhcp_options": {
        "default": false,
        "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
       },
       "enable_dns_hostnames": {
        "default": false,
        "description": "Should be true to enable DNS hostnames in the VPC"
       },
       "enable_dns_support": {
        "default": true,
        "description": "Should be true to enable DNS support in the VPC"
       },
       "enable_flow_log": {
        "default": false,
        "description": "Whether or not to enable VPC Flow Logs"
       },
       "enable_ipv6": {
        "default": false,
        "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
       },
       "enable_nat_gateway": {
        "default": false,
        "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
       },
       "enable_public_redshift": {
        "default": false,
        "description": "Controls if redshift should have public routing table"
       },
       "enable_vpn_gateway": {
        "default": false,
        "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
       },
       "external_nat_ip_ids": {
        "default": [],
        "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
       },
       "external_nat_ips": {
        "default": [],
        "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
       },
       "flow_log_cloudwatch_iam_role_arn": {
        "default": "",
        "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
       },
       "flow_log_cloudwatch_log_group_kms_key_id": {
        "default": null,
        "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_name_prefix": {
        "default": "/aws/vpc-flow-log/",
        "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_name_suffix": {
        "default": "",
        "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_retention_in_days": {
        "default": null,
        "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
       },
       "flow_log_destination_arn": {
        "default": "",
        "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
       },
       "flow_log_destination_type": {
        "default": "cloud-watch-logs",
        "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
       },
       "flow_log_file_format": {
        "default": "plain-text",
        "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`."
       },
       "flow_log_hive_compatible_partitions": {
        "default": false,
        "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3."
       },
       "flow_log_log_format": {
        "default": null,
        "description": "The fields to include in the flow log record, in the order in which they should appear."
       },
       "flow_log_max_aggregation_interval": {
        "default": 600,
        "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
       },
       "flow_log_per_hour_partition": {
        "default": false,
        "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries."
       },
       "flow_log_traffic_type": {
        "default": "ALL",
        "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
       },
       "igw_tags": {
        "default": {},
        "description": "Additional tags for the internet gateway"
       },
       "instance_tenancy": {
        "default": "default",
        "description": "A tenancy option for instances launched into the VPC"
       },
       "intra_acl_tags": {
        "default": {},
        "description": "Additional tags for the intra subnets network ACL"
       },
       "intra_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
       },
       "intra_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Intra subnets inbound network ACLs"
       },
       "intra_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Intra subnets outbound network ACLs"
       },
       "intra_route_table_tags": {
        "default": {},
        "description": "Additional tags for the intra route tables"
       },
       "intra_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "intra_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "intra_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated."
       },
       "intra_subnet_suffix": {
        "default": "intra",
        "description": "Suffix to append to intra subnets name"
       },
       "intra_subnet_tags": {
        "default": {},
        "description": "Additional tags for the intra subnets"
       },
       "intra_subnets": {
        "default": [],
        "description": "A list of intra subnets"
       },
       "ipv4_ipam_pool_id": {
        "default": null,
        "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR."
       },
       "ipv4_netmask_length": {
        "default": null,
        "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id."
       },
       "ipv6_cidr": {
        "default": null,
        "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`."
       },
       "ipv6_ipam_pool_id": {
        "default": null,
        "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`."
       },
       "ipv6_netmask_length": {
        "default": null,
        "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`."
       },
       "manage_default_network_acl": {
        "default": false,
        "description": "Should be true to adopt and manage Default Network ACL"
       },
       "manage_default_route_table": {
        "default": false,
        "description": "Should be true to manage default route table"
       },
       "manage_default_security_group": {
        "default": false,
        "description": "Should be true to adopt and manage default security group"
       },
       "manage_default_vpc": {
        "default": false,
        "description": "Should be true to adopt and manage Default VPC"
       },
       "map_public_ip_on_launch": {
        "default": true,
        "description": "Should be false if you do not want to auto-assign public IP on launch"
       },
       "name": {
        "default": "",
        "description": "Name to be used on all the resources as identifier"
       },
       "nat_eip_tags": {
        "default": {},
        "description": "Additional tags for the NAT EIP"
       },
       "nat_gateway_destination_cidr_block": {
        "default": "0.0.0.0/0",
        "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route."
       },
       "nat_gateway_tags": {
        "default": {},
        "description": "Additional tags for the NAT gateways"
       },
       "one_nat_gateway_per_az": {
        "default": false,
        "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
       },
       "outpost_acl_tags": {
        "default": {},
        "description": "Additional tags for the outpost subnets network ACL"
       },
       "outpost_arn": {
        "default": null,
        "description": "ARN of Outpost you want to create a subnet in."
       },
       "outpost_az": {
        "default": null,
        "description": "AZ where Outpost is anchored."
       },
       "outpost_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
       },
       "outpost_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Outpost subnets inbound network ACLs"
       },
       "outpost_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Outpost subnets outbound network ACLs"
       },
       "outpost_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "outpost_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "outpost_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated."
       },
       "outpost_subnet_suffix": {
        "default": "outpost",
        "description": "Suffix to append to outpost subnets name"
       },
       "outpost_subnet_tags": {
        "default": {},
        "description": "Additional tags for the outpost subnets"
       },
       "outpost_subnets": {
        "default": [],
        "description": "A list of outpost subnets inside the VPC"
       },
       "private_acl_tags": {
        "default": {},
        "description": "Additional tags for the private subnets network ACL"
       },
       "private_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
       },
       "private_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Private subnets inbound network ACLs"
       },
       "private_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Private subnets outbound network ACLs"
       },
       "private_route_table_tags": {
        "default": {},
        "description": "Additional tags for the private route tables"
       },
       "private_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "private_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "private_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated."
       },
       "private_subnet_suffix": {
        "default": "private",
        "description": "Suffix to append to private subnets name"
       },
       "private_subnet_tags": {
        "default": {},
        "description": "Additional tags for the private subnets"
       },
       "private_subnet_tags_per_az": {
        "default": {},
        "description": "Additional tags for the private subnets where the primary key is the AZ"
       },
       "private_subnets": {
        "default": [],
        "description": "A list of private subnets inside the VPC"
       },
       "propagate_intra_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "propagate_private_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "propagate_public_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "public_acl_tags": {
        "default": {},
        "description": "Additional tags for the public subnets network ACL"
       },
       "public_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
       },
       "public_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Public subnets inbound network ACLs"
       },
       "public_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Public subnets outbound network ACLs"
       },
       "public_route_table_tags": {
        "default": {},
        "description": "Additional tags for the public route tables"
       },
       "public_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "public_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "public_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated."
       },
       "public_subnet_suffix": {
        "default": "public",
        "description": "Suffix to append to public subnets name"
       },
       "public_subnet_tags": {
        "default": {},
        "description": "Additional tags for the public subnets"
       },
       "public_subnet_tags_per_az": {
        "default": {},
        "description": "Additional tags for the public subnets where the primary key is the AZ"
       },
       "public_subnets": {
        "default": [],
        "description": "A list of public subnets inside the VPC"
       },
       "putin_khuylo": {
        "default": true,
        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
       },
       "redshift_acl_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnets network ACL"
       },
       "redshift_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
       },
       "redshift_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Redshift subnets inbound network ACL rules"
       },
       "redshift_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Redshift subnets outbound network ACL rules"
       },
       "redshift_route_table_tags": {
        "default": {},
        "description": "Additional tags for the redshift route tables"
       },
       "redshift_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "redshift_subnet_group_name": {
        "default": null,
        "description": "Name of redshift subnet group"
       },
       "redshift_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnet group"
       },
       "redshift_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "redshift_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated."
       },
       "redshift_subnet_suffix": {
        "default": "redshift",
        "description": "Suffix to append to redshift subnets name"
       },
       "redshift_subnet_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnets"
       },
       "redshift_subnets": {
        "default": [],
        "description": "A list of redshift subnets"
       },
       "reuse_nat_ips": {
        "default": false,
        "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
       },
       "secondary_cidr_blocks": {
        "default": [],
        "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
       },
       "single_nat_gateway": {
        "default": false,
        "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       },
       "use_ipam_pool": {
        "default": false,
        "description": "Determines whether IPAM pool is used for CIDR allocation"
       },
       "vpc_flow_log_permissions_boundary": {
        "default": null,
        "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
       },
       "vpc_flow_log_tags": {
        "default": {},
        "description": "Additional tags for the VPC Flow Logs"
       },
       "vpc_tags": {
        "default": {},
        "description": "Additional tags for the VPC"
       },
       "vpn_gateway_az": {
        "default": null,
        "description": "The Availability Zone for the VPN Gateway"
       },
       "vpn_gateway_id": {
        "default": "",
        "description": "ID of VPN Gateway to attach to the VPC"
       },
       "vpn_gateway_tags": {
        "default": {},
        "description": "Additional tags for the VPN gateway"
       }
      }
     },
     "source": "terraform-aws-modules/vpc/aws"
    }
   },
   "variables": {
    "credentials": {
     "description": "contains aws access key and secret key"
    },
    "environment": {
     "default": "staging",
     "description": "environment name"
    },
    "region": {
     "default": [
      "us-east-1"
     ]
    }
   }
  }
 },
 "format_version": "1.1",
 "planned_values": {
  "root_module": {
   "child_modules": [
    {
     "address": "module.allow_assume_eks_admins_iam_policy",
     "resources": [
      {
       "address": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]",
       "index": 0,
       "mode": "managed",
       "name": "policy",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_iam_policy",
       "values": {
        "description": "IAM Policy",
        "name": "allow-assume-eks-admin-iam-role",
        "name_prefix": null,
        "path": "/",
        "tags": null
       }
      }
     ]
    },
    {
     "address": "module.allow_eks_access_iam_policy",
     "resources": [
      {
       "address": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]",
       "index": 0,
       "mode": "managed",
       "name": "policy",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_iam_policy",
       "values": {
        "description": "IAM Policy",
        "name": "allow-eks-access",
        "name_prefix": null,
        "path": "/",
        "policy": "{\"Statement\":[{\"Action\":[\"eks:DescribeCluster\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
        "tags": null
       }
      }
     ]
    },
    {
     "address": "module.ecr",
     "resources": [
      {
       "address": "module.ecr.aws_ecr_lifecycle_policy.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_ecr_lifecycle_policy",
       "values": {
        "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Keep last 30 images\",\"rulePriority\":1,\"selection\":{\"countNumber\":30,\"countType\":\"imageCountMoreThan\",\"tagPrefixList\":[\"v\"],\"tagStatus\":\"tagged\"}}]}",
        "repository": "snapshot"
       }
      },
      {
       "address": "module.ecr.aws_ecr_repository.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "encryption_configuration": [
         {}
        ],
        "image_scanning_configuration": [
         {}
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_ecr_repository",
       "values": {
        "encryption_configuration": [
         {
          "encryption_type": "AES256"
         }
        ],
        "force_delete": null,
        "image_scanning_configuration": [
         {
          "scan_on_push": true
         }
        ],
        "image_tag_mutability": "IMMUTABLE",
        "name": "snapshot",
        "tags": {
         "Environment": "staging",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Terraform": "true"
        },
        "timeouts": null
       }
      },
      {
       "address": "module.ecr.aws_ecr_repository_policy.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_ecr_repository_policy",
       "values": {
        "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::012345678901:role/terraform\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:UploadLayerPart\",\"ecr:PutImage\",\"ecr:InitiateLayerUpload\",\"ecr:CompleteLayerUpload\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::012345678901:role/terraform\"},\"Sid\":\"ReadWrite\"}],\"Version\":\"2012-10-17\"}",
        "repository": "snapshot"
       }
      }
     ]
    },
    {
     "address": "module.eks",
     "child_modules": [
      {
       "address": "module.eks.module.eks_managed_node_group[\"general\"]",
       "resources": [
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "instance_types": [
           false
          ],
          "labels": {},
          "launch_template": [
           {}
          ],
          "remote_access": [],
          "resources": [],
          "scaling_config": [
           {}
          ],
          "subnet_ids": [
           false,
           false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": []
         },
         "type": "aws_eks_node_group",
         "values": {
          "capacity_type": "ON_DEMAND",
          "cluster_name": "my-eks",
          "force_update_version": null,
          "instance_types": [
           "t3.small"
          ],
          "labels": {
           "role": "general"
          },
          "launch_template": [
           {
            "name": "general-20230321102729410000000014",
            "version": "1"
           }
          ],
          "node_group_name_prefix": "general-",
          "node_role_arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
          "remote_access": [],
          "scaling_config": [
           {
            "desired_size": 1,
            "max_size": 10,
            "min_size": 1
           }
          ],
          "subnet_ids": [
           "subnet-039f059147e745b37",
           "subnet-056badd0f81724544"
          ],
          "tags": {
           "Environment": "staging",
           "Name": "general"
          },
          "tags_all": {
           "Environment": "staging",
           "Name": "general"
          },
          "taint": [],
          "timeouts": {
           "create": null,
           "delete": null,
           "update": null
          },
          "version": "1.23"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "inline_policy": [],
          "managed_policy_arns": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_iam_role",
         "values": {
          "arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2023-03-21T10:16:27Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "general-eks-node-group-20230321101626182100000002",
          "inline_policy": [],
          "managed_policy_arns": [
           "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "general-eks-node-group-20230321101626182100000002",
          "name_prefix": "general-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
           "Environment": "staging"
          },
          "tags_all": {
           "Environment": "staging"
          },
          "unique_id": "AROAZNLSXTQWNEUJDLA4B"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "general-eks-node-group-20230321101626182100000002-20230321101628481900000004",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "general-eks-node-group-20230321101626182100000002"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "general-eks-node-group-20230321101626182100000002-20230321101628794200000006",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "general-eks-node-group-20230321101626182100000002"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "general-eks-node-group-20230321101626182100000002-20230321101628622000000005",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "general-eks-node-group-20230321101626182100000002"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {}
          ],
          "monitoring": [
           {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
           {
            "tags": {}
           },
           {
            "tags": {}
           },
           {
            "tags": {}
           }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
           false,
           false
          ]
         },
         "type": "aws_launch_template",
         "values": {
          "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-0121f11fe8e9bbf52",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for general EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0121f11fe8e9bbf52",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {
            "http_endpoint": "enabled",
            "http_protocol_ipv6": "disabled",
            "http_put_response_hop_limit": 2,
            "http_tokens": "required",
            "instance_metadata_tags": "disabled"
           }
          ],
          "monitoring": [
           {
            "enabled": true
           }
          ],
          "name": "general-20230321102729410000000014",
          "name_prefix": "general-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
           {
            "resource_type": "instance",
            "tags": {
             "Environment": "staging",
             "Name": "general"
            }
           },
           {
            "resource_type": "network-interface",
            "tags": {
             "Environment": "staging",
             "Name": "general"
            }
           },
           {
            "resource_type": "volume",
            "tags": {
             "Environment": "staging",
             "Name": "general"
            }
           }
          ],
          "tags": {
           "Environment": "staging"
          },
          "tags_all": {
           "Environment": "staging"
          },
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
           "sg-03138577ccfa715e3",
           "sg-0c0b65d3882cec69f"
          ]
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_security_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_security_group",
         "values": {
          "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-03138577ccfa715e3",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-03138577ccfa715e3",
          "ingress": [],
          "name": "general-eks-node-group-2023032110164300940000000e",
          "name_prefix": "general-eks-node-group-",
          "owner_id": "647170071596",
          "revoke_rules_on_delete": false,
          "tags": {
           "Environment": "staging",
           "Name": "general-eks-node-group"
          },
          "tags_all": {
           "Environment": "staging",
           "Name": "general-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-0d530b46a737bea5e"
         }
        }
       ]
      },
      {
       "address": "module.eks.module.eks_managed_node_group[\"spot\"]",
       "resources": [
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "instance_types": [
           false
          ],
          "labels": {},
          "launch_template": [
           {}
          ],
          "remote_access": [],
          "resources": [],
          "scaling_config": [
           {}
          ],
          "subnet_ids": [
           false,
           false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [
           {}
          ],
          "timeouts": {},
          "update_config": []
         },
         "type": "aws_eks_node_group",
         "values": {
          "capacity_type": "SPOT",
          "cluster_name": "my-eks",
          "force_update_version": null,
          "instance_types": [
           "t3.micro"
          ],
          "labels": {
           "role": "spot"
          },
          "launch_template": [
           {
            "name": "spot-20230321102729407400000012",
            "version": "1"
           }
          ],
          "node_group_name_prefix": "spot-",
          "node_role_arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
          "remote_access": [],
          "scaling_config": [
           {
            "desired_size": 1,
            "max_size": 10,
            "min_size": 1
           }
          ],
          "subnet_ids": [
           "subnet-039f059147e745b37",
           "subnet-056badd0f81724544"
          ],
          "tags": {
           "Environment": "staging",
           "Name": "spot"
          },
          "tags_all": {
           "Environment": "staging",
           "Name": "spot"
          },
          "taint": [
           {
            "effect": "NO_SCHEDULE",
            "key": "market",
            "value": "spot"
           }
          ],
          "timeouts": {
           "create": null,
           "delete": null,
           "update": null
          },
          "version": "1.23"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "inline_policy": [],
          "managed_policy_arns": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_iam_role",
         "values": {
          "arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2023-03-21T10:16:27Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "spot-eks-node-group-20230321101626181600000001",
          "inline_policy": [],
          "managed_policy_arns": [
           "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "spot-eks-node-group-20230321101626181600000001",
          "name_prefix": "spot-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {
           "Environment": "staging"
          },
          "tags_all": {
           "Environment": "staging"
          },
          "unique_id": "AROAZNLSXTQWOTJZRWAP7"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "spot-eks-node-group-20230321101626181600000001-20230321101628896200000007",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "spot-eks-node-group-20230321101626181600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "spot-eks-node-group-20230321101626181600000001-20230321101629030000000009",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "spot-eks-node-group-20230321101626181600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "spot-eks-node-group-20230321101626181600000001-20230321101629020800000008",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "spot-eks-node-group-20230321101626181600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {}
          ],
          "monitoring": [
           {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
           {
            "tags": {}
           },
           {
            "tags": {}
           },
           {
            "tags": {}
           }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
           false,
           false
          ]
         },
         "type": "aws_launch_template",
         "values": {
          "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-059233327e26eeea7",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for spot EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-059233327e26eeea7",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {
            "http_endpoint": "enabled",
            "http_protocol_ipv6": "disabled",
            "http_put_response_hop_limit": 2,
            "http_tokens": "required",
            "instance_metadata_tags": "disabled"
           }
          ],
          "monitoring": [
           {
            "enabled": true
           }
          ],
          "name": "spot-20230321102729407400000012",
          "name_prefix": "spot-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
           {
            "resource_type": "instance",
            "tags": {
             "Environment": "staging",
             "Name": "spot"
            }
           },
           {
            "resource_type": "network-interface",
            "tags": {
             "Environment": "staging",
             "Name": "spot"
            }
           },
           {
            "resource_type": "volume",
            "tags": {
             "Environment": "staging",
             "Name": "spot"
            }
           }
          ],
          "tags": {
           "Environment": "staging"
          },
          "tags_all": {
           "Environment": "staging"
          },
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
           "sg-0b1202a53bafe33b7",
           "sg-0c0b65d3882cec69f"
          ]
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_security_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_security_group",
         "values": {
          "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0b1202a53bafe33b7",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-0b1202a53bafe33b7",
          "ingress": [],
          "name": "spot-eks-node-group-2023032110164319760000000f",
          "name_prefix": "spot-eks-node-group-",
          "owner_id": "647170071596",
          "revoke_rules_on_delete": false,
          "tags": {
           "Environment": "staging",
           "Name": "spot-eks-node-group"
          },
          "tags_all": {
           "Environment": "staging",
           "Name": "spot-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-0d530b46a737bea5e"
         }
        }
       ]
      }
     ],
     "resources": [
      {
       "address": "module.eks.aws_cloudwatch_log_group.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_cloudwatch_log_group",
       "values": {
        "arn": "arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster",
        "id": "/aws/eks/my-eks/cluster",
        "kms_key_id": "",
        "name": "/aws/eks/my-eks/cluster",
        "name_prefix": "",
        "retention_in_days": 90,
        "skip_destroy": false,
        "tags": {
         "Environment": "staging"
        },
        "tags_all": {
         "Environment": "staging"
        }
       }
      },
      {
       "address": "module.eks.aws_ec2_tag.cluster_primary_security_group[\"Environment\"]",
       "index": "Environment",
       "mode": "managed",
       "name": "cluster_primary_security_group",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_ec2_tag",
       "values": {
        "key": "Environment",
        "resource_id": "sg-001c3bad69e124e9e",
        "value": "staging"
       }
      },
      {
       "address": "module.eks.aws_eks_cluster.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "certificate_authority": [
         {}
        ],
        "enabled_cluster_log_types": [
         false,
         false,
         false
        ],
        "encryption_config": [],
        "identity": [
         {
          "oidc": [
           {}
          ]
         }
        ],
        "kubernetes_network_config": [
         {}
        ],
        "outpost_config": [],
        "tags": {},
        "tags_all": {},
        "timeouts": {},
        "vpc_config": [
         {
          "public_access_cidrs": [
           false
          ],
          "security_group_ids": [
           false
          ],
          "subnet_ids": [
           false,
           false
          ]
         }
        ]
       },
       "type": "aws_eks_cluster",
       "values": {
        "arn": "arn:aws:eks:us-east-1:647170071596:cluster/my-eks",
        "certificate_authority": [
         {
          "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXlNVEV3TWpJME9Gb1hEVE16TURNeE9ERXdNakkwT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGY4CjJMM0NrMHJHZEdMK0dMNkF0QitEU3cydkZQZWRxZE10MkVVTitvOXp0bEpCY3dVb2lXdGVKUldvMEh6MUw2YkUKMjJMOVJ2OTlyN3E3Q05Qb2tmUGVxeUMwdlE0T01YZzdMU0krcncrV01pc0VpTGFhWWN6R09nNEpuWXNIdFpjawpZWHpiMlMycTVsbUo5UllLUEFVbG5WN1M3YVdYdXVUbDlPNGpnM0FGdVVvNVZEdXJuWnVoSVo3NDEvczYydGZJCktPaHRNb0h5YW5JZzhlRWhJNjZ0ZzNNSHV4bGRXQVpHbVNDMEhhZmhiSWoyaEFRdWhOejk5V0l5MmpCaW8xcVcKcnBjcGNnMW5RbVdHLytFYXRVbkdUMUp1bHAzaFppQ3BhNkVRWUo1S2hLMDhoTElwY3lBSFZucUZtelRYSnF2ZApCTHNMNDBiNUxRZVFxdGtHTXNzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIWDFTOS9PTVg4TGRrK3VIQ3ZidlRnUkxmSjdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1MwZXFJeHNteUFXVkpYa25BQQpDVVdhSVJVTjRicm93ZlNSWnZMWGhhRm1PNlVlcG5BVFE4NFZZdHFaQlNlMFlJblNHK1pGa08ydGtoaytBQkR3CndnSW1lRGVmbm94WGY3K205YTg5eGFRdkFEN2Q1TVZ3aW0zQTJNVGtVRGxQKzBUeUZxNnFaZW15TGZRMnJDL3IKdGI4ZTRwODdKMTZhRWdSNmpjUEZkS1pwdzRoU3F1QWR5d0hzcWd1Z1pUSFdvNURpWHp1WVpKR09ubWRHNFJEMgo5K3JwWVNtcVk3bnE0bS84Z2dKbjBISWVTSlhUOVF6ZjRGY2FNaWw4cE4yeHIrTTh4UnJGMDFQbDhOYmlBd09SCk5lSWpVM0VyOGJreXFnaWNlb1paMU9IL1hNdXpFYmkxU0xKVTVOTnVGaE85MXRrV1ZWaVgrMTl4NHNNNEV4YVcKeG1RPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
         }
        ],
        "cluster_id": null,
        "created_at": "2023-03-21 10:17:01.909 +0000 UTC",
        "enabled_cluster_log_types": [
         "api",
         "audit",
         "authenticator"
        ],
        "encryption_config": [],
        "endpoint": "https://DCCF780FC092DCCC68304E31D80A455E.gr7.us-east-1.eks.amazonaws.com",
        "id": "my-eks",
        "identity": [
         {
          "oidc": [
           {
            "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
           }
          ]
         }
        ],
        "kubernetes_network_config": [
         {
          "ip_family": "ipv4",
          "service_ipv4_cidr": "172.20.0.0/16",
          "service_ipv6_cidr": ""
         }
        ],
        "name": "my-eks",
        "outpost_config": [],
        "platform_version": "eks.6",
        "role_arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
        "status": "ACTIVE",
        "tags": {
         "Environment": "staging"
        },
        "tags_all": {
         "Environment": "staging"
        },
        "timeouts": {
         "create": null,
         "delete": null,
         "update": null
        },
        "version": "1.23",
        "vpc_config": [
         {
          "cluster_security_group_id": "sg-001c3bad69e124e9e",
          "endpoint_private_access": true,
          "endpoint_public_access": true,
          "public_access_cidrs": [
           "0.0.0.0/0"
          ],
          "security_group_ids": [
           "sg-089ed2ede29616016"
          ],
          "subnet_ids": [
           "subnet-039f059147e745b37",
           "subnet-056badd0f81724544"
          ],
          "vpc_id": "vpc-0d530b46a737bea5e"
         }
        ]
       }
      },
      {
       "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
       "index": 0,
       "mode": "managed",
       "name": "oidc_provider",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "client_id_list": [
         false
        ],
        "tags": {},
        "tags_all": {},
        "thumbprint_list": [
         false
        ]
       },
       "type": "aws_iam_openid_connect_provider",
       "values": {
        "client_id_list": [
         "sts.amazonaws.com"
        ],
        "tags": {
         "Environment": "staging",
         "Name": "my-eks-eks-irsa"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "my-eks-eks-irsa"
        },
        "thumbprint_list": [
         "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
        ],
        "url": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
       }
      },
      {
       "address": "module.eks.aws_iam_role.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [
         {}
        ],
        "managed_policy_arns": [
         false,
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
        "create_date": "2023-03-21T10:16:28Z",
        "description": "",
        "force_detach_policies": true,
        "id": "my-eks-cluster-20230321101628014600000003",
        "inline_policy": [
         {
          "name": "my-eks-cluster",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster\"}]}"
         }
        ],
        "managed_policy_arns": [
         "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        ],
        "max_session_duration": 3600,
        "name": "my-eks-cluster-20230321101628014600000003",
        "name_prefix": "my-eks-cluster-",
        "path": "/",
        "permissions_boundary": null,
        "tags": {
         "Environment": "staging"
        },
        "tags_all": {
         "Environment": "staging"
        },
        "unique_id": "AROAZNLSXTQWE7CUPK6U6"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
       "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "my-eks-cluster-20230321101628014600000003-2023032110163047520000000b",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "role": "my-eks-cluster-20230321101628014600000003"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
       "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "my-eks-cluster-20230321101628014600000003-2023032110163042340000000a",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "role": "my-eks-cluster-20230321101628014600000003"
       }
      },
      {
       "address": "module.eks.aws_security_group.cluster[0]",
       "index": 0,
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-089ed2ede29616016",
        "description": "EKS cluster security group",
        "egress": [
         {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0c0b65d3882cec69f"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0c0b65d3882cec69f"
          ],
          "self": false,
          "to_port": 10250
         }
        ],
        "id": "sg-089ed2ede29616016",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0c0b65d3882cec69f"
          ],
          "self": false,
          "to_port": 443
         }
        ],
        "name": "my-eks-cluster-2023032110164139490000000c",
        "name_prefix": "my-eks-cluster-",
        "owner_id": "647170071596",
        "revoke_rules_on_delete": false,
        "tags": {
         "Environment": "staging",
         "Name": "my-eks-cluster"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "my-eks-cluster"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.eks.aws_security_group.node[0]",
       "index": 0,
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0c0b65d3882cec69f",
        "description": "EKS node shared security group",
        "egress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress NTP/TCP to internet",
          "from_port": 123,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 123
         },
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress NTP/UDP to internet",
          "from_port": 123,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": false,
          "to_port": 123
         },
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress all HTTPS to internet",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-089ed2ede29616016"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         }
        ],
        "id": "sg-0c0b65d3882cec69f",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-089ed2ede29616016"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-089ed2ede29616016"
          ],
          "self": false,
          "to_port": 10250
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         }
        ],
        "name": "my-eks-node-2023032110164298520000000d",
        "name_prefix": "my-eks-node-",
        "owner_id": "647170071596",
        "revoke_rules_on_delete": false,
        "tags": {
         "Environment": "staging",
         "Name": "my-eks-node",
         "kubernetes.io/cluster/my-eks": "owned"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "my-eks-node",
         "kubernetes.io/cluster/my-eks": "owned"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
       "index": "egress_nodes_443",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node groups",
        "from_port": 443,
        "id": "sgrule-233501280",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-089ed2ede29616016",
        "security_group_rule_id": "sgr-096aa520d98c86342",
        "self": false,
        "source_security_group_id": "sg-0c0b65d3882cec69f",
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
       "index": "egress_nodes_kubelet",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node kubelets",
        "from_port": 10250,
        "id": "sgrule-182106312",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-089ed2ede29616016",
        "security_group_rule_id": "sgr-045576eeb44c942c1",
        "self": false,
        "source_security_group_id": "sg-0c0b65d3882cec69f",
        "timeouts": null,
        "to_port": 10250,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
       "index": "ingress_nodes_443",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node groups to cluster API",
        "from_port": 443,
        "id": "sgrule-3605358251",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-089ed2ede29616016",
        "security_group_rule_id": "sgr-096aa520d98c86342",
        "self": false,
        "source_security_group_id": "sg-0c0b65d3882cec69f",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
       "index": "egress_cluster_443",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node groups to cluster API",
        "from_port": 443,
        "id": "sgrule-568527955",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0096857c30d67d201",
        "self": false,
        "source_security_group_id": "sg-089ed2ede29616016",
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
       "index": "egress_https",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress all HTTPS to internet",
        "from_port": 443,
        "id": "sgrule-167872820",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-00333bc436ae3ae4c",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
       "index": "egress_ntp_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress NTP/TCP to internet",
        "from_port": 123,
        "id": "sgrule-3588207658",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-05d9909f16463a0b2",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 123,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
       "index": "egress_ntp_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress NTP/UDP to internet",
        "from_port": 123,
        "id": "sgrule-2873200935",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0d193ef2c8f113468",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 123,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
       "index": "egress_self_coredns_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-1334105497",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0814240a8f6b52b74",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
       "index": "egress_self_coredns_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-3252901887",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-06278ddfac1946e19",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
       "index": "ingress_cluster_443",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node groups",
        "from_port": 443,
        "id": "sgrule-3235579394",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0096857c30d67d201",
        "self": false,
        "source_security_group_id": "sg-089ed2ede29616016",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
       "index": "ingress_cluster_kubelet",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node kubelets",
        "from_port": 10250,
        "id": "sgrule-1084777609",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0473d8989672aa8b2",
        "self": false,
        "source_security_group_id": "sg-089ed2ede29616016",
        "timeouts": null,
        "to_port": 10250,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
       "index": "ingress_self_coredns_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-314982964",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0814240a8f6b52b74",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
       "index": "ingress_self_coredns_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-3063538139",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-0c0b65d3882cec69f",
        "security_group_rule_id": "sgr-0c6b1c93cb709947b",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      }
     ]
    },
    {
     "address": "module.eks_admins_iam_group",
     "resources": [
      {
       "address": "module.eks_admins_iam_group.aws_iam_group.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_group",
       "values": {
        "name": "eks-admin",
        "path": "/"
       }
      },
      {
       "address": "module.eks_admins_iam_group.aws_iam_group_membership.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "users": [
         false
        ]
       },
       "type": "aws_iam_group_membership",
       "values": {
        "name": "eks-admin",
        "users": [
         "user1"
        ]
       }
      },
      {
       "address": "module.eks_admins_iam_group.aws_iam_group_policy_attachment.custom_arns[0]",
       "index": 0,
       "mode": "managed",
       "name": "custom_arns",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_group_policy_attachment"
      }
     ]
    },
    {
     "address": "module.eks_admins_iam_role",
     "resources": [
      {
       "address": "module.eks_admins_iam_role.aws_iam_role.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [],
        "managed_policy_arns": [],
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::647170071596:root\",\"Service\":[]},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
        "description": "",
        "force_detach_policies": false,
        "max_session_duration": 3600,
        "name": "eks-admin",
        "path": "/",
        "permissions_boundary": "",
        "tags": null
       }
      },
      {
       "address": "module.eks_admins_iam_role.aws_iam_role_policy_attachment.custom[0]",
       "index": 0,
       "mode": "managed",
       "name": "custom",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "role": "eks-admin"
       }
      }
     ]
    },
    {
     "address": "module.user1_iam_user",
     "resources": [
      {
       "address": "module.user1_iam_user.aws_iam_user.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags_all": {}
       },
       "type": "aws_iam_user",
       "values": {
        "force_destroy": true,
        "name": "user1",
        "path": "/",
        "permissions_boundary": "",
        "tags": null
       }
      }
     ]
    },
    {
     "address": "module.vpc",
     "resources": [
      {
       "address": "module.vpc.aws_eip.nat[0]",
       "index": 0,
       "mode": "managed",
       "name": "nat",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_eip",
       "values": {
        "address": null,
        "allocation_id": "eipalloc-021aad93670fc41fb",
        "associate_with_private_ip": null,
        "association_id": "",
        "carrier_ip": "",
        "customer_owned_ip": "",
        "customer_owned_ipv4_pool": "",
        "domain": "vpc",
        "id": "eipalloc-021aad93670fc41fb",
        "instance": "",
        "network_border_group": "us-east-1",
        "network_interface": "",
        "private_dns": "ip-10-0-101-7.ec2.internal",
        "private_ip": "",
        "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
        "public_ip": "3.217.240.133",
        "public_ipv4_pool": "amazon",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1a",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1a",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc": true
       }
      },
      {
       "address": "module.vpc.aws_eip.nat[1]",
       "index": 1,
       "mode": "managed",
       "name": "nat",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_eip",
       "values": {
        "address": null,
        "allocation_id": "eipalloc-04667abaa8a3936a4",
        "associate_with_private_ip": null,
        "association_id": "",
        "carrier_ip": "",
        "customer_owned_ip": "",
        "customer_owned_ipv4_pool": "",
        "domain": "vpc",
        "id": "eipalloc-04667abaa8a3936a4",
        "instance": "",
        "network_border_group": "us-east-1",
        "network_interface": "",
        "private_dns": "ip-10-0-102-43.ec2.internal",
        "private_ip": "",
        "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
        "public_ip": "52.71.96.9",
        "public_ipv4_pool": "amazon",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1b",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1b",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc": true
       }
      },
      {
       "address": "module.vpc.aws_internet_gateway.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_internet_gateway",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:internet-gateway/igw-05a1fe28233194c27",
        "id": "igw-05a1fe28233194c27",
        "owner_id": "647170071596",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_nat_gateway.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_nat_gateway",
       "values": {
        "allocation_id": "eipalloc-021aad93670fc41fb",
        "connectivity_type": "public",
        "subnet_id": "subnet-025cdaab48524b71a",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1a",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1a",
         "Terraform": "true"
        }
       }
      },
      {
       "address": "module.vpc.aws_nat_gateway.this[1]",
       "index": 1,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_nat_gateway",
       "values": {
        "allocation_id": "eipalloc-04667abaa8a3936a4",
        "connectivity_type": "public",
        "subnet_id": "subnet-0747e0227b375d8e9",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1b",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-us-east-1b",
         "Terraform": "true"
        }
       }
      },
      {
       "address": "module.vpc.aws_route.private_nat_gateway[0]",
       "index": 0,
       "mode": "managed",
       "name": "private_nat_gateway",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "timeouts": {}
       },
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": null,
        "core_network_arn": null,
        "destination_cidr_block": "0.0.0.0/0",
        "destination_ipv6_cidr_block": null,
        "destination_prefix_list_id": null,
        "egress_only_gateway_id": null,
        "gateway_id": null,
        "local_gateway_id": null,
        "timeouts": {
         "create": "5m",
         "delete": null,
         "update": null
        },
        "transit_gateway_id": null,
        "vpc_endpoint_id": null,
        "vpc_peering_connection_id": null
       }
      },
      {
       "address": "module.vpc.aws_route.private_nat_gateway[1]",
       "index": 1,
       "mode": "managed",
       "name": "private_nat_gateway",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "timeouts": {}
       },
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": null,
        "core_network_arn": null,
        "destination_cidr_block": "0.0.0.0/0",
        "destination_ipv6_cidr_block": null,
        "destination_prefix_list_id": null,
        "egress_only_gateway_id": null,
        "gateway_id": null,
        "local_gateway_id": null,
        "timeouts": {
         "create": "5m",
         "delete": null,
         "update": null
        },
        "transit_gateway_id": null,
        "vpc_endpoint_id": null,
        "vpc_peering_connection_id": null
       }
      },
      {
       "address": "module.vpc.aws_route.public_internet_gateway[0]",
       "index": 0,
       "mode": "managed",
       "name": "public_internet_gateway",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "timeouts": {}
       },
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": null,
        "core_network_arn": null,
        "destination_cidr_block": "0.0.0.0/0",
        "destination_ipv6_cidr_block": null,
        "destination_prefix_list_id": null,
        "egress_only_gateway_id": null,
        "gateway_id": "igw-05a1fe28233194c27",
        "local_gateway_id": null,
        "nat_gateway_id": null,
        "timeouts": {
         "create": "5m",
         "delete": null,
         "update": null
        },
        "transit_gateway_id": null,
        "vpc_endpoint_id": null,
        "vpc_peering_connection_id": null
       }
      },
      {
       "address": "module.vpc.aws_route_table.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1a",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1a",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_route_table.private[1]",
       "index": 1,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1b",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1b",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_route_table.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public",
         "Terraform": "true"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": null,
        "subnet_id": "subnet-039f059147e745b37"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.private[1]",
       "index": 1,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": null,
        "subnet_id": "subnet-056badd0f81724544"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": null,
        "subnet_id": "subnet-025cdaab48524b71a"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.public[1]",
       "index": 1,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": null,
        "subnet_id": "subnet-0747e0227b375d8e9"
       }
      },
      {
       "address": "module.vpc.aws_subnet.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-039f059147e745b37",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "us-east-1a",
        "availability_zone_id": "use1-az2",
        "cidr_block": "10.0.1.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-039f059147e745b37",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": false,
        "outpost_arn": "",
        "owner_id": "647170071596",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1a",
         "Terraform": "true",
         "kubernetes.io/role/internal-elb": "1"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1a",
         "Terraform": "true",
         "kubernetes.io/role/internal-elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_subnet.private[1]",
       "index": 1,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-056badd0f81724544",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "us-east-1b",
        "availability_zone_id": "use1-az4",
        "cidr_block": "10.0.2.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-056badd0f81724544",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": false,
        "outpost_arn": "",
        "owner_id": "647170071596",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1b",
         "Terraform": "true",
         "kubernetes.io/role/internal-elb": "1"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-private-us-east-1b",
         "Terraform": "true",
         "kubernetes.io/role/internal-elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_subnet.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-025cdaab48524b71a",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "us-east-1a",
        "availability_zone_id": "use1-az2",
        "cidr_block": "10.0.101.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-025cdaab48524b71a",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": true,
        "outpost_arn": "",
        "owner_id": "647170071596",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public-us-east-1a",
         "Terraform": "true",
         "kubernetes.io/role/elb": "1"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public-us-east-1a",
         "Terraform": "true",
         "kubernetes.io/role/elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_subnet.public[1]",
       "index": 1,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-0747e0227b375d8e9",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "us-east-1b",
        "availability_zone_id": "use1-az4",
        "cidr_block": "10.0.102.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-0747e0227b375d8e9",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": true,
        "outpost_arn": "",
        "owner_id": "647170071596",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public-us-east-1b",
         "Terraform": "true",
         "kubernetes.io/role/elb": "1"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc-public-us-east-1b",
         "Terraform": "true",
         "kubernetes.io/role/elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-0d530b46a737bea5e"
       }
      },
      {
       "address": "module.vpc.aws_vpc.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_vpc",
       "values": {
        "arn": "arn:aws:ec2:us-east-1:647170071596:vpc/vpc-0d530b46a737bea5e",
        "assign_generated_ipv6_cidr_block": false,
        "cidr_block": "10.0.0.0/16",
        "default_network_acl_id": "acl-0699d03be2056eae6",
        "default_route_table_id": "rtb-0d510803f0e14f711",
        "default_security_group_id": "sg-0fd5b9e9286ec2557",
        "dhcp_options_id": "dopt-076314690bac67d23",
        "enable_classiclink": false,
        "enable_classiclink_dns_support": false,
        "enable_dns_hostnames": true,
        "enable_dns_support": true,
        "enable_network_address_usage_metrics": false,
        "id": "vpc-0d530b46a737bea5e",
        "instance_tenancy": "default",
        "ipv4_ipam_pool_id": null,
        "ipv4_netmask_length": null,
        "ipv6_association_id": "",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_network_border_group": "",
        "ipv6_ipam_pool_id": "",
        "ipv6_netmask_length": 0,
        "main_route_table_id": "rtb-0d510803f0e14f711",
        "owner_id": "647170071596",
        "tags": {
         "Environment": "staging",
         "Name": "other-tools-vpc",
         "Terraform": "true"
        },
        "tags_all": {
         "Environment": "staging",
         "Name": "other-tools-vpc",
         "Terraform": "true"
        }
       }
      }
     ]
    }
   ]
  }
 },
 "prior_state": {
  "format_version": "1.0",
  "terraform_version": "1.2.8",
  "values": {
   "root_module": {
    "child_modules": [
     {
      "address": "module.ecr",
      "resources": [
       {
        "address": "module.ecr.data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "647170071596",
         "arn": "arn:aws:iam::647170071596:root",
         "id": "647170071596",
         "user_id": "647170071596"
        }
       },
       {
        "address": "module.ecr.data.aws_iam_policy_document.repository[0]",
        "index": 0,
        "mode": "data",
        "name": "repository",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            }
           ],
           "resources": []
          },
          {
           "actions": [
            false,
            false,
            false,
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            }
           ],
           "resources": []
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "395742606",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"PrivateReadOnly\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:ListTagsForResource\",\n        \"ecr:ListImages\",\n        \"ecr:GetRepositoryPolicy\",\n        \"ecr:GetLifecyclePolicyPreview\",\n        \"ecr:GetLifecyclePolicy\",\n        \"ecr:GetDownloadUrlForLayer\",\n        \"ecr:GetAuthorizationToken\",\n        \"ecr:DescribeRepositories\",\n        \"ecr:DescribeImages\",\n        \"ecr:DescribeImageScanFindings\",\n        \"ecr:BatchGetImage\",\n        \"ecr:BatchCheckLayerAvailability\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::012345678901:role/terraform\"\n      }\n    },\n    {\n      \"Sid\": \"ReadWrite\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ecr:UploadLayerPart\",\n        \"ecr:PutImage\",\n        \"ecr:InitiateLayerUpload\",\n        \"ecr:CompleteLayerUpload\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::012345678901:role/terraform\"\n      }\n    }\n  ]\n}",
         "override_json": null,
         "override_policy_documents": null,
         "policy_id": null,
         "source_json": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "ecr:BatchCheckLayerAvailability",
            "ecr:BatchGetImage",
            "ecr:DescribeImageScanFindings",
            "ecr:DescribeImages",
            "ecr:DescribeRepositories",
            "ecr:GetAuthorizationToken",
            "ecr:GetDownloadUrlForLayer",
            "ecr:GetLifecyclePolicy",
            "ecr:GetLifecyclePolicyPreview",
            "ecr:GetRepositoryPolicy",
            "ecr:ListImages",
            "ecr:ListTagsForResource"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "arn:aws:iam::012345678901:role/terraform"
             ],
             "type": "AWS"
            }
           ],
           "resources": [],
           "sid": "PrivateReadOnly"
          },
          {
           "actions": [
            "ecr:CompleteLayerUpload",
            "ecr:InitiateLayerUpload",
            "ecr:PutImage",
            "ecr:UploadLayerPart"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "arn:aws:iam::012345678901:role/terraform"
             ],
             "type": "AWS"
            }
           ],
           "resources": [],
           "sid": "ReadWrite"
          }
         ],
         "version": "2012-10-17"
        }
       },
       {
        "address": "module.ecr.data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_partition",
        "values": {
         "dns_suffix": "amazonaws.com",
         "id": "aws",
         "partition": "aws",
         "reverse_dns_prefix": "com.amazonaws"
        }
       }
      ]
     },
     {
      "address": "module.eks",
      "child_modules": [
       {
        "address": "module.eks.module.eks_managed_node_group[\"general\"]",
        "resources": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "inline_policy": [],
           "managed_policy_arns": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_iam_role",
          "values": {
           "arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
           "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
           "create_date": "2023-03-21T10:16:27Z",
           "description": "EKS managed node group IAM role",
           "force_detach_policies": true,
           "id": "general-eks-node-group-20230321101626182100000002",
           "inline_policy": [],
           "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
           ],
           "max_session_duration": 3600,
           "name": "general-eks-node-group-20230321101626182100000002",
           "name_prefix": "general-eks-node-group-",
           "path": "/",
           "permissions_boundary": null,
           "tags": {
            "Environment": "staging"
           },
           "tags_all": {
            "Environment": "staging"
           },
           "unique_id": "AROAZNLSXTQWNEUJDLA4B"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "general-eks-node-group-20230321101626182100000002-20230321101628481900000004",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "role": "general-eks-node-group-20230321101626182100000002"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "general-eks-node-group-20230321101626182100000002-20230321101628794200000006",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "role": "general-eks-node-group-20230321101626182100000002"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "general-eks-node-group-20230321101626182100000002-20230321101628622000000005",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
           "role": "general-eks-node-group-20230321101626182100000002"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]",
          "depends_on": [
           "module.eks.aws_cloudwatch_log_group.this",
           "module.eks.aws_eks_cluster.this",
           "module.eks.aws_iam_role.this",
           "module.eks.aws_iam_role_policy_attachment.this",
           "module.eks.aws_security_group.cluster",
           "module.eks.aws_security_group.node",
           "module.eks.aws_security_group_rule.cluster",
           "module.eks.aws_security_group_rule.node",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
           "module.eks.module.eks_managed_node_group.aws_security_group.this",
           "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
           "module.eks.module.kms.aws_kms_external_key.this",
           "module.eks.module.kms.aws_kms_key.this",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current",
           "module.vpc.aws_subnet.private",
           "module.vpc.aws_vpc.this",
           "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "instance_market_options": [],
           "instance_requirements": [],
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {}
           ],
           "monitoring": [
            {}
           ],
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "security_group_names": [],
           "tag_specifications": [
            {
             "tags": {}
            },
            {
             "tags": {}
            },
            {
             "tags": {}
            }
           ],
           "tags": {},
           "tags_all": {},
           "vpc_security_group_ids": [
            false,
            false
           ]
          },
          "type": "aws_launch_template",
          "values": {
           "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-0121f11fe8e9bbf52",
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "default_version": 1,
           "description": "Custom launch template for general EKS managed node group",
           "disable_api_stop": false,
           "disable_api_termination": false,
           "ebs_optimized": "",
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "id": "lt-0121f11fe8e9bbf52",
           "image_id": "",
           "instance_initiated_shutdown_behavior": "",
           "instance_market_options": [],
           "instance_requirements": [],
           "instance_type": "",
           "kernel_id": "",
           "key_name": "",
           "latest_version": 1,
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {
             "http_endpoint": "enabled",
             "http_protocol_ipv6": "disabled",
             "http_put_response_hop_limit": 2,
             "http_tokens": "required",
             "instance_metadata_tags": "disabled"
            }
           ],
           "monitoring": [
            {
             "enabled": true
            }
           ],
           "name": "general-20230321102729410000000014",
           "name_prefix": "general-",
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "ram_disk_id": "",
           "security_group_names": [],
           "tag_specifications": [
            {
             "resource_type": "instance",
             "tags": {
              "Environment": "staging",
              "Name": "general"
             }
            },
            {
             "resource_type": "network-interface",
             "tags": {
              "Environment": "staging",
              "Name": "general"
             }
            },
            {
             "resource_type": "volume",
             "tags": {
              "Environment": "staging",
              "Name": "general"
             }
            }
           ],
           "tags": {
            "Environment": "staging"
           },
           "tags_all": {
            "Environment": "staging"
           },
           "update_default_version": true,
           "user_data": "",
           "vpc_security_group_ids": [
            "sg-03138577ccfa715e3",
            "sg-0c0b65d3882cec69f"
           ]
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_security_group.this[0]",
          "depends_on": [
           "module.vpc.aws_vpc.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "egress": [],
           "ingress": [],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_security_group",
          "values": {
           "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-03138577ccfa715e3",
           "description": "EKS managed node group security group",
           "egress": [],
           "id": "sg-03138577ccfa715e3",
           "ingress": [],
           "name": "general-eks-node-group-2023032110164300940000000e",
           "name_prefix": "general-eks-node-group-",
           "owner_id": "647170071596",
           "revoke_rules_on_delete": false,
           "tags": {
            "Environment": "staging",
            "Name": "general-eks-node-group"
           },
           "tags_all": {
            "Environment": "staging",
            "Name": "general-eks-node-group"
           },
           "timeouts": null,
           "vpc_id": "vpc-0d530b46a737bea5e"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "647170071596",
           "arn": "arn:aws:iam::647170071596:root",
           "id": "647170071596",
           "user_id": "647170071596"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].data.aws_iam_policy_document.assume_role_policy[0]",
          "index": 0,
          "mode": "data",
          "name": "assume_role_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "statement": [
            {
             "actions": [
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": []
            }
           ]
          },
          "type": "aws_iam_policy_document",
          "values": {
           "id": "2560088296",
           "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
           "override_json": null,
           "override_policy_documents": null,
           "policy_id": null,
           "source_json": null,
           "source_policy_documents": null,
           "statement": [
            {
             "actions": [
              "sts:AssumeRole"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "ec2.amazonaws.com"
               ],
               "type": "Service"
              }
             ],
             "resources": [],
             "sid": "EKSNodeAssumeRole"
            }
           ],
           "version": "2012-10-17"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"general\"].data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         }
        ]
       },
       {
        "address": "module.eks.module.eks_managed_node_group[\"spot\"]",
        "resources": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "inline_policy": [],
           "managed_policy_arns": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_iam_role",
          "values": {
           "arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
           "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
           "create_date": "2023-03-21T10:16:27Z",
           "description": "EKS managed node group IAM role",
           "force_detach_policies": true,
           "id": "spot-eks-node-group-20230321101626181600000001",
           "inline_policy": [],
           "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
           ],
           "max_session_duration": 3600,
           "name": "spot-eks-node-group-20230321101626181600000001",
           "name_prefix": "spot-eks-node-group-",
           "path": "/",
           "permissions_boundary": null,
           "tags": {
            "Environment": "staging"
           },
           "tags_all": {
            "Environment": "staging"
           },
           "unique_id": "AROAZNLSXTQWOTJZRWAP7"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "spot-eks-node-group-20230321101626181600000001-20230321101628896200000007",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "role": "spot-eks-node-group-20230321101626181600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "spot-eks-node-group-20230321101626181600000001-20230321101629030000000009",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "role": "spot-eks-node-group-20230321101626181600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "spot-eks-node-group-20230321101626181600000001-20230321101629020800000008",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
           "role": "spot-eks-node-group-20230321101626181600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]",
          "depends_on": [
           "module.eks.aws_cloudwatch_log_group.this",
           "module.eks.aws_eks_cluster.this",
           "module.eks.aws_iam_role.this",
           "module.eks.aws_iam_role_policy_attachment.this",
           "module.eks.aws_security_group.cluster",
           "module.eks.aws_security_group.node",
           "module.eks.aws_security_group_rule.cluster",
           "module.eks.aws_security_group_rule.node",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
           "module.eks.module.eks_managed_node_group.aws_security_group.this",
           "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
           "module.eks.module.kms.aws_kms_external_key.this",
           "module.eks.module.kms.aws_kms_key.this",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current",
           "module.vpc.aws_subnet.private",
           "module.vpc.aws_vpc.this",
           "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "instance_market_options": [],
           "instance_requirements": [],
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {}
           ],
           "monitoring": [
            {}
           ],
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "security_group_names": [],
           "tag_specifications": [
            {
             "tags": {}
            },
            {
             "tags": {}
            },
            {
             "tags": {}
            }
           ],
           "tags": {},
           "tags_all": {},
           "vpc_security_group_ids": [
            false,
            false
           ]
          },
          "type": "aws_launch_template",
          "values": {
           "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-059233327e26eeea7",
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "default_version": 1,
           "description": "Custom launch template for spot EKS managed node group",
           "disable_api_stop": false,
           "disable_api_termination": false,
           "ebs_optimized": "",
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "id": "lt-059233327e26eeea7",
           "image_id": "",
           "instance_initiated_shutdown_behavior": "",
           "instance_market_options": [],
           "instance_requirements": [],
           "instance_type": "",
           "kernel_id": "",
           "key_name": "",
           "latest_version": 1,
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {
             "http_endpoint": "enabled",
             "http_protocol_ipv6": "disabled",
             "http_put_response_hop_limit": 2,
             "http_tokens": "required",
             "instance_metadata_tags": "disabled"
            }
           ],
           "monitoring": [
            {
             "enabled": true
            }
           ],
           "name": "spot-20230321102729407400000012",
           "name_prefix": "spot-",
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "ram_disk_id": "",
           "security_group_names": [],
           "tag_specifications": [
            {
             "resource_type": "instance",
             "tags": {
              "Environment": "staging",
              "Name": "spot"
             }
            },
            {
             "resource_type": "network-interface",
             "tags": {
              "Environment": "staging",
              "Name": "spot"
             }
            },
            {
             "resource_type": "volume",
             "tags": {
              "Environment": "staging",
              "Name": "spot"
             }
            }
           ],
           "tags": {
            "Environment": "staging"
           },
           "tags_all": {
            "Environment": "staging"
           },
           "update_default_version": true,
           "user_data": "",
           "vpc_security_group_ids": [
            "sg-0b1202a53bafe33b7",
            "sg-0c0b65d3882cec69f"
           ]
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_security_group.this[0]",
          "depends_on": [
           "module.vpc.aws_vpc.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "egress": [],
           "ingress": [],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_security_group",
          "values": {
           "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0b1202a53bafe33b7",
           "description": "EKS managed node group security group",
           "egress": [],
           "id": "sg-0b1202a53bafe33b7",
           "ingress": [],
           "name": "spot-eks-node-group-2023032110164319760000000f",
           "name_prefix": "spot-eks-node-group-",
           "owner_id": "647170071596",
           "revoke_rules_on_delete": false,
           "tags": {
            "Environment": "staging",
            "Name": "spot-eks-node-group"
           },
           "tags_all": {
            "Environment": "staging",
            "Name": "spot-eks-node-group"
           },
           "timeouts": null,
           "vpc_id": "vpc-0d530b46a737bea5e"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "647170071596",
           "arn": "arn:aws:iam::647170071596:root",
           "id": "647170071596",
           "user_id": "647170071596"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].data.aws_iam_policy_document.assume_role_policy[0]",
          "index": 0,
          "mode": "data",
          "name": "assume_role_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "statement": [
            {
             "actions": [
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": []
            }
           ]
          },
          "type": "aws_iam_policy_document",
          "values": {
           "id": "2560088296",
           "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
           "override_json": null,
           "override_policy_documents": null,
           "policy_id": null,
           "source_json": null,
           "source_policy_documents": null,
           "statement": [
            {
             "actions": [
              "sts:AssumeRole"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "ec2.amazonaws.com"
               ],
               "type": "Service"
              }
             ],
             "resources": [],
             "sid": "EKSNodeAssumeRole"
            }
           ],
           "version": "2012-10-17"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"spot\"].data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         }
        ]
       },
       {
        "address": "module.eks.module.kms",
        "resources": [
         {
          "address": "module.eks.module.kms.data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "647170071596",
           "arn": "arn:aws:iam::647170071596:root",
           "id": "647170071596",
           "user_id": "647170071596"
          }
         },
         {
          "address": "module.eks.module.kms.data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         }
        ]
       }
      ],
      "resources": [
       {
        "address": "module.eks.aws_cloudwatch_log_group.this[0]",
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_cloudwatch_log_group",
        "values": {
         "arn": "arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster",
         "id": "/aws/eks/my-eks/cluster",
         "kms_key_id": "",
         "name": "/aws/eks/my-eks/cluster",
         "name_prefix": "",
         "retention_in_days": 90,
         "skip_destroy": false,
         "tags": {
          "Environment": "staging"
         },
         "tags_all": {
          "Environment": "staging"
         }
        }
       },
       {
        "address": "module.eks.aws_eks_cluster.this[0]",
        "depends_on": [
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "certificate_authority": [
          {}
         ],
         "enabled_cluster_log_types": [
          false,
          false,
          false
         ],
         "encryption_config": [],
         "identity": [
          {
           "oidc": [
            {}
           ]
          }
         ],
         "kubernetes_network_config": [
          {}
         ],
         "outpost_config": [],
         "tags": {},
         "tags_all": {},
         "timeouts": {},
         "vpc_config": [
          {
           "public_access_cidrs": [
            false
           ],
           "security_group_ids": [
            false
           ],
           "subnet_ids": [
            false,
            false
           ]
          }
         ]
        },
        "type": "aws_eks_cluster",
        "values": {
         "arn": "arn:aws:eks:us-east-1:647170071596:cluster/my-eks",
         "certificate_authority": [
          {
           "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXlNVEV3TWpJME9Gb1hEVE16TURNeE9ERXdNakkwT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGY4CjJMM0NrMHJHZEdMK0dMNkF0QitEU3cydkZQZWRxZE10MkVVTitvOXp0bEpCY3dVb2lXdGVKUldvMEh6MUw2YkUKMjJMOVJ2OTlyN3E3Q05Qb2tmUGVxeUMwdlE0T01YZzdMU0krcncrV01pc0VpTGFhWWN6R09nNEpuWXNIdFpjawpZWHpiMlMycTVsbUo5UllLUEFVbG5WN1M3YVdYdXVUbDlPNGpnM0FGdVVvNVZEdXJuWnVoSVo3NDEvczYydGZJCktPaHRNb0h5YW5JZzhlRWhJNjZ0ZzNNSHV4bGRXQVpHbVNDMEhhZmhiSWoyaEFRdWhOejk5V0l5MmpCaW8xcVcKcnBjcGNnMW5RbVdHLytFYXRVbkdUMUp1bHAzaFppQ3BhNkVRWUo1S2hLMDhoTElwY3lBSFZucUZtelRYSnF2ZApCTHNMNDBiNUxRZVFxdGtHTXNzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIWDFTOS9PTVg4TGRrK3VIQ3ZidlRnUkxmSjdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1MwZXFJeHNteUFXVkpYa25BQQpDVVdhSVJVTjRicm93ZlNSWnZMWGhhRm1PNlVlcG5BVFE4NFZZdHFaQlNlMFlJblNHK1pGa08ydGtoaytBQkR3CndnSW1lRGVmbm94WGY3K205YTg5eGFRdkFEN2Q1TVZ3aW0zQTJNVGtVRGxQKzBUeUZxNnFaZW15TGZRMnJDL3IKdGI4ZTRwODdKMTZhRWdSNmpjUEZkS1pwdzRoU3F1QWR5d0hzcWd1Z1pUSFdvNURpWHp1WVpKR09ubWRHNFJEMgo5K3JwWVNtcVk3bnE0bS84Z2dKbjBISWVTSlhUOVF6ZjRGY2FNaWw4cE4yeHIrTTh4UnJGMDFQbDhOYmlBd09SCk5lSWpVM0VyOGJreXFnaWNlb1paMU9IL1hNdXpFYmkxU0xKVTVOTnVGaE85MXRrV1ZWaVgrMTl4NHNNNEV4YVcKeG1RPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
          }
         ],
         "cluster_id": null,
         "created_at": "2023-03-21 10:17:01.909 +0000 UTC",
         "enabled_cluster_log_types": [
          "api",
          "audit",
          "authenticator"
         ],
         "encryption_config": [],
         "endpoint": "https://DCCF780FC092DCCC68304E31D80A455E.gr7.us-east-1.eks.amazonaws.com",
         "id": "my-eks",
         "identity": [
          {
           "oidc": [
            {
             "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
            }
           ]
          }
         ],
         "kubernetes_network_config": [
          {
           "ip_family": "ipv4",
           "service_ipv4_cidr": "172.20.0.0/16",
           "service_ipv6_cidr": ""
          }
         ],
         "name": "my-eks",
         "outpost_config": [],
         "platform_version": "eks.6",
         "role_arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
         "status": "ACTIVE",
         "tags": {
          "Environment": "staging"
         },
         "tags_all": {
          "Environment": "staging"
         },
         "timeouts": {
          "create": null,
          "delete": null,
          "update": null
         },
         "version": "1.23",
         "vpc_config": [
          {
           "cluster_security_group_id": "sg-001c3bad69e124e9e",
           "endpoint_private_access": true,
           "endpoint_public_access": true,
           "public_access_cidrs": [
            "0.0.0.0/0"
           ],
           "security_group_ids": [
            "sg-089ed2ede29616016"
           ],
           "subnet_ids": [
            "subnet-039f059147e745b37",
            "subnet-056badd0f81724544"
           ],
           "vpc_id": "vpc-0d530b46a737bea5e"
          }
         ]
        }
       },
       {
        "address": "module.eks.aws_iam_role.this[0]",
        "depends_on": [
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "inline_policy": [
          {}
         ],
         "managed_policy_arns": [
          false,
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_role",
        "values": {
         "arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
         "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
         "create_date": "2023-03-21T10:16:28Z",
         "description": "",
         "force_detach_policies": true,
         "id": "my-eks-cluster-20230321101628014600000003",
         "inline_policy": [
          {
           "name": "my-eks-cluster",
           "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster\"}]}"
          }
         ],
         "managed_policy_arns": [
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
         ],
         "max_session_duration": 3600,
         "name": "my-eks-cluster-20230321101628014600000003",
         "name_prefix": "my-eks-cluster-",
         "path": "/",
         "permissions_boundary": null,
         "tags": {
          "Environment": "staging"
         },
         "tags_all": {
          "Environment": "staging"
         },
         "unique_id": "AROAZNLSXTQWE7CUPK6U6"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
        "depends_on": [
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "my-eks-cluster-20230321101628014600000003-2023032110163047520000000b",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "role": "my-eks-cluster-20230321101628014600000003"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
        "depends_on": [
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "my-eks-cluster-20230321101628014600000003-2023032110163042340000000a",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
         "role": "my-eks-cluster-20230321101628014600000003"
        }
       },
       {
        "address": "module.eks.aws_security_group.cluster[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          }
         ],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-089ed2ede29616016",
         "description": "EKS cluster security group",
         "egress": [
          {
           "cidr_blocks": [],
           "description": "Cluster API to node groups",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0c0b65d3882cec69f"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node kubelets",
           "from_port": 10250,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0c0b65d3882cec69f"
           ],
           "self": false,
           "to_port": 10250
          }
         ],
         "id": "sg-089ed2ede29616016",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Node groups to cluster API",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0c0b65d3882cec69f"
           ],
           "self": false,
           "to_port": 443
          }
         ],
         "name": "my-eks-cluster-2023032110164139490000000c",
         "name_prefix": "my-eks-cluster-",
         "owner_id": "647170071596",
         "revoke_rules_on_delete": false,
         "tags": {
          "Environment": "staging",
          "Name": "my-eks-cluster"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "my-eks-cluster"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.eks.aws_security_group.node[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0c0b65d3882cec69f",
         "description": "EKS node shared security group",
         "egress": [
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress NTP/TCP to internet",
           "from_port": 123,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": false,
           "to_port": 123
          },
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress NTP/UDP to internet",
           "from_port": 123,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": false,
           "to_port": 123
          },
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress all HTTPS to internet",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Node groups to cluster API",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-089ed2ede29616016"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          }
         ],
         "id": "sg-0c0b65d3882cec69f",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Cluster API to node groups",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-089ed2ede29616016"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node kubelets",
           "from_port": 10250,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-089ed2ede29616016"
           ],
           "self": false,
           "to_port": 10250
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          }
         ],
         "name": "my-eks-node-2023032110164298520000000d",
         "name_prefix": "my-eks-node-",
         "owner_id": "647170071596",
         "revoke_rules_on_delete": false,
         "tags": {
          "Environment": "staging",
          "Name": "my-eks-node",
          "kubernetes.io/cluster/my-eks": "owned"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "my-eks-node",
          "kubernetes.io/cluster/my-eks": "owned"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_nodes_443",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node groups",
         "from_port": 443,
         "id": "sgrule-233501280",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-089ed2ede29616016",
         "security_group_rule_id": "sgr-096aa520d98c86342",
         "self": false,
         "source_security_group_id": "sg-0c0b65d3882cec69f",
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_nodes_kubelet",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node kubelets",
         "from_port": 10250,
         "id": "sgrule-182106312",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-089ed2ede29616016",
         "security_group_rule_id": "sgr-045576eeb44c942c1",
         "self": false,
         "source_security_group_id": "sg-0c0b65d3882cec69f",
         "timeouts": null,
         "to_port": 10250,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_nodes_443",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node groups to cluster API",
         "from_port": 443,
         "id": "sgrule-3605358251",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-089ed2ede29616016",
         "security_group_rule_id": "sgr-096aa520d98c86342",
         "self": false,
         "source_security_group_id": "sg-0c0b65d3882cec69f",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_cluster_443",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node groups to cluster API",
         "from_port": 443,
         "id": "sgrule-568527955",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0096857c30d67d201",
         "self": false,
         "source_security_group_id": "sg-089ed2ede29616016",
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_https",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress all HTTPS to internet",
         "from_port": 443,
         "id": "sgrule-167872820",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-00333bc436ae3ae4c",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_ntp_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress NTP/TCP to internet",
         "from_port": 123,
         "id": "sgrule-3588207658",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-05d9909f16463a0b2",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 123,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_ntp_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress NTP/UDP to internet",
         "from_port": 123,
         "id": "sgrule-2873200935",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0d193ef2c8f113468",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 123,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_self_coredns_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-1334105497",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0814240a8f6b52b74",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_self_coredns_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-3252901887",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-06278ddfac1946e19",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_cluster_443",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node groups",
         "from_port": 443,
         "id": "sgrule-3235579394",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0096857c30d67d201",
         "self": false,
         "source_security_group_id": "sg-089ed2ede29616016",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_cluster_kubelet",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node kubelets",
         "from_port": 10250,
         "id": "sgrule-1084777609",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0473d8989672aa8b2",
         "self": false,
         "source_security_group_id": "sg-089ed2ede29616016",
         "timeouts": null,
         "to_port": 10250,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_self_coredns_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-314982964",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0814240a8f6b52b74",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_self_coredns_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-3063538139",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-0c0b65d3882cec69f",
         "security_group_rule_id": "sgr-0c6b1c93cb709947b",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "647170071596",
         "arn": "arn:aws:iam::647170071596:root",
         "id": "647170071596",
         "user_id": "647170071596"
        }
       },
       {
        "address": "module.eks.data.aws_iam_policy_document.assume_role_policy[0]",
        "index": 0,
        "mode": "data",
        "name": "assume_role_policy",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            }
           ],
           "resources": []
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "2764486067",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
         "override_json": null,
         "override_policy_documents": null,
         "policy_id": null,
         "source_json": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "sts:AssumeRole"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "eks.amazonaws.com"
             ],
             "type": "Service"
            }
           ],
           "resources": [],
           "sid": "EKSClusterAssumeRole"
          }
         ],
         "version": "2012-10-17"
        }
       },
       {
        "address": "module.eks.data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_partition",
        "values": {
         "dns_suffix": "amazonaws.com",
         "id": "aws",
         "partition": "aws",
         "reverse_dns_prefix": "com.amazonaws"
        }
       },
       {
        "address": "module.eks.data.tls_certificate.this[0]",
        "index": 0,
        "mode": "data",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/tls",
        "schema_version": 0,
        "sensitive_values": {
         "certificates": [
          {},
          {},
          {},
          {}
         ]
        },
        "type": "tls_certificate",
        "values": {
         "certificates": [
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
           "not_after": "2034-06-28T17:39:16Z",
           "not_before": "2009-09-02T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "12037640545166866303",
           "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "not_after": "2037-12-31T01:00:00Z",
           "not_before": "2015-05-25T12:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "144918191876577076464031512351042010504348870",
           "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSOAudZoijOx7Zv5zNpo4ODzANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjEyOFoXDTMwMDgyMzIyMjEyOFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOtxLKnL\nH4gokjIwr4pXD3i3NyWVVYesZ1yX0yLI2qIUZ2t88Gfa4gMqs1YSXca1R/lnCKeT\nepWSGA+0+fkQNpp/L4C2T7oTTsddUx7g3ZYzByDTlrwS5HRQQqEFE3O1T5tEJP4t\nf+28IoXsNiEzl3UGzicYgtzj2cWCB41eJgEmJmcf2T8TzzK6a614ZPyq/w4CPAff\nnAV4coz96nW3AyiE2uhuB4zQUIXvgVSycW7sbWLvj5TDXunEpNCRwC4kkZjK7rol\njtT2cbb7W2s4Bkg3R42G3PLqBvt2N32e/0JOTViCk8/iccJ4sXqrS1uUN4iB5Nmv\nJK74csVl+0u0UecCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUgbgOY4qJEhjl+js7UJWf5uWQE4UwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQCtAN4CBSMuBjJitGuxlBbkEUDeK/pZwTXv4KqPK0G50fOHOQAd8j21p0cMBgbG\nkfMHVwLU7b0XwZCav0h1ogdPMN1KakK1DT0VwA/+hFvGPJnMV1Kx2G4S1ZaSk0uU\n5QfoiYIIano01J5k4T2HapKQmmOhS/iPtuo00wW+IMLeBuKMn3OLn005hcrOGTad\nhcmeyfhQP7Z+iKHvyoQGi1C0ClymHETx/chhQGDyYSWqB/THwnN15AwLQo0E5V9E\nSJlbe4mBlqeInUsNYugExNf+tOiybcrswBy8OFsd34XOW3rjSUtsuafd9AWySa3h\nxRRrwszrzX/WWGm6wyB+f7C4\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "not_after": "2030-08-23T22:21:28Z",
           "not_before": "2022-08-23T22:21:28Z",
           "public_key_algorithm": "RSA",
           "serial_number": "166129328851546858514271303855646110030630415",
           "sha1_fingerprint": "2ad974a775f73cbdbbd8f5ac3a49255fa8fb1f8c",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF6jCCBNKgAwIBAgIQCcCk7BIViH8C+Tf4VWxhKzANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAxMB4XDTIzMDIyMzAwMDAwMFoXDTIzMDYyNjIzNTk1OVowKzEp\nMCcGA1UEAxMgb2lkYy5la3MudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrCuy0md03k+NUS1t9Nd27vLH1+qIL\nTquznJihWn4w76OgUtRCrMuLwohG6kHi+wg6wPkGZP5UC87mEdSLpcOaDvTwPZOz\nHfD5Sd/iX3wHfnqZcpilIiVfBK24dzDkvzy9xm3U6Ng3vvORjoMmTsivq+iw7X9R\n0Mnt8jFq5QQzeDCC8qRftpPtCDQqZ8uoPJIXi815zOHUu/lPxiOp8vBP5PJtHkCD\nZZb21pxeWsJullHoodtmEw2harp7HXoUnksN/oTdc7/t8OQm2Yn80AY86FviW0qY\nTGEJT27ieE8c0qVv49KeNs3t7jXMjam154BONIpVc2Pzqk0bmIBQdcojAgMBAAGj\nggL3MIIC8zAfBgNVHSMEGDAWgBSBuA5jiokSGOX6OztQlZ/m5ZAThTAdBgNVHQ4E\nFgQUttNxultjwL6aC1+JaLWDKcLFL94wKwYDVR0RBCQwIoIgb2lkYy5la3MudXMt\nZWFzdC0xLmFtYXpvbmF3cy5jb20wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCgLqAshipodHRwOi8vY3Js\nLnIybTAxLmFtYXpvbnRydXN0LmNvbS9yMm0wMS5jcmwwEwYDVR0gBAwwCjAIBgZn\ngQwBAgEwdQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5y\nMm0wMS5hbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJt\nMDEuYW1hem9udHJ1c3QuY29tL3IybTAxLmNlcjAMBgNVHRMBAf8EAjAAMIIBfAYK\nKwYBBAHWeQIEAgSCAWwEggFoAWYAdQDoPtDaPvUGNTLnVyi8iWvJA9PL0RFr7Otp\n4Xd9bQa9bgAAAYZ+BWwKAAAEAwBGMEQCIGMqdwA4wz13ik32Juibt34DkjMApD6Q\nVpfPq9x98DxPAiALEjtaefkHMAUFEakle1P6EYgE/iMobgHQrh9eXe1jCgB2ALNz\ndwfhhFD4Y4bWBancEQlKeS2xZwwLh9zwAw55NqWaAAABhn4FbBwAAAQDAEcwRQIg\nD2cYqJeiBbDt/tm+IjNBfO0fTuP0O2rpvDCk+f2GruQCIQCP+PWcBtOjVNBVETyQ\nGQ4bzOzSS2VqX5cmItYMUGdlyAB1ALc++yTfnE26dfI5xbpY9Gxd/ELPep81xJ4d\nCYEl7bSZAAABhn4Fa/IAAAQDAEYwRAIgRCMQCgYmzXYR2J4BOK3AghjRw1Bgi3hd\nOOgLVTtDGKsCIFkrCkOmGN59nWDMHqFWasYvIrS+DeehEy6/++gvXnzCMA0GCSqG\nSIb3DQEBCwUAA4IBAQDjAyA4igHNxTeZzePGnh77joIlhYhjM+bYP2sMqpkgm/k+\nMr3WsW5uGtUkKDrU/nqewpBbaERyu38I7AG9kVbRf0iX2hIVR5o5jRPHvhNG9KTn\nfRq8K8SCaoFuq54lHqf/k1SEvMhUquwOIgG+aE39RG3mRi32/ucVMqqZ55Y2ND0O\n7JwvUyLcE31BTT7vAiCwqpwPTWMP4uJXp58D9JpnsgQYqcBWHf4GsN97/B5CtNLh\nlarySf+72Z2OYmAyv5SfBw26DSqsrgwhBuY29MREIIxa1MoBKmezMCODvHUv0KwD\n4NFsttfm7l0h2sfg1Scdfs6LFIvq6mzu6EFqYMNM\n-----END CERTIFICATE-----\n",
           "is_ca": false,
           "issuer": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
           "not_after": "2023-06-26T23:59:59Z",
           "not_before": "2023-02-23T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "12963317977521044204933868342894944555",
           "sha1_fingerprint": "f8e9efef11f4308c0912577ed37afe2707b2721c",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=oidc.eks.us-east-1.amazonaws.com",
           "version": 3
          }
         ],
         "content": null,
         "id": "8cb781b6037f4703f17f42d8de4a2c2aa78474ab",
         "url": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E",
         "verify_chain": true
        }
       }
      ]
     },
     {
      "address": "module.eks_admins_iam_group",
      "resources": [
       {
        "address": "module.eks_admins_iam_group.data.aws_caller_identity.current[0]",
        "index": 0,
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "647170071596",
         "arn": "arn:aws:iam::647170071596:root",
         "id": "647170071596",
         "user_id": "647170071596"
        }
       },
       {
        "address": "module.eks_admins_iam_group.data.aws_iam_policy_document.iam_self_management",
        "mode": "data",
        "name": "iam_self_management",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            false,
            false,
            false
           ]
          },
          {
           "actions": [
            false,
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            false
           ]
          },
          {
           "actions": [
            false
           ],
           "condition": [
            {
             "values": [
              false
             ]
            },
            {
             "values": [
              false
             ]
            }
           ],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            false,
            false,
            false
           ]
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "1179167110",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowSelfManagement\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:UploadSigningCertificate\",\n        \"iam:UploadSSHPublicKey\",\n        \"iam:UpdateUser\",\n        \"iam:UpdateLoginProfile\",\n        \"iam:UpdateAccessKey\",\n        \"iam:ResyncMFADevice\",\n        \"iam:List*\",\n        \"iam:Get*\",\n        \"iam:GenerateServiceLastAccessedDetails\",\n        \"iam:GenerateCredentialReport\",\n        \"iam:EnableMFADevice\",\n        \"iam:DeleteVirtualMFADevice\",\n        \"iam:DeleteLoginProfile\",\n        \"iam:DeleteAccessKey\",\n        \"iam:CreateVirtualMFADevice\",\n        \"iam:CreateLoginProfile\",\n        \"iam:CreateAccessKey\",\n        \"iam:ChangePassword\"\n      ],\n      \"Resource\": [\n        \"arn:aws:iam::647170071596:user/*/${aws:username}\",\n        \"arn:aws:iam::647170071596:user/${aws:username}\",\n        \"arn:aws:iam::647170071596:mfa/${aws:username}\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowIAMReadOnly\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:List*\",\n        \"iam:Get*\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"AllowDeactivateMFADevice\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:DeactivateMFADevice\",\n      \"Resource\": [\n        \"arn:aws:iam::647170071596:user/*/${aws:username}\",\n        \"arn:aws:iam::647170071596:user/${aws:username}\",\n        \"arn:aws:iam::647170071596:mfa/${aws:username}\"\n      ],\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:MultiFactorAuthPresent\": \"true\"\n        },\n        \"NumericLessThan\": {\n          \"aws:MultiFactorAuthAge\": \"3600\"\n        }\n      }\n    }\n  ]\n}",
         "override_json": null,
         "override_policy_documents": null,
         "policy_id": null,
         "source_json": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "iam:ChangePassword",
            "iam:CreateAccessKey",
            "iam:CreateLoginProfile",
            "iam:CreateVirtualMFADevice",
            "iam:DeleteAccessKey",
            "iam:DeleteLoginProfile",
            "iam:DeleteVirtualMFADevice",
            "iam:EnableMFADevice",
            "iam:GenerateCredentialReport",
            "iam:GenerateServiceLastAccessedDetails",
            "iam:Get*",
            "iam:List*",
            "iam:ResyncMFADevice",
            "iam:UpdateAccessKey",
            "iam:UpdateLoginProfile",
            "iam:UpdateUser",
            "iam:UploadSSHPublicKey",
            "iam:UploadSigningCertificate"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            "arn:aws:iam::647170071596:mfa/${aws:username}",
            "arn:aws:iam::647170071596:user/${aws:username}",
            "arn:aws:iam::647170071596:user/*/${aws:username}"
           ],
           "sid": "AllowSelfManagement"
          },
          {
           "actions": [
            "iam:Get*",
            "iam:List*"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            "*"
           ],
           "sid": "AllowIAMReadOnly"
          },
          {
           "actions": [
            "iam:DeactivateMFADevice"
           ],
           "condition": [
            {
             "test": "Bool",
             "values": [
              "true"
             ],
             "variable": "aws:MultiFactorAuthPresent"
            },
            {
             "test": "NumericLessThan",
             "values": [
              "3600"
             ],
             "variable": "aws:MultiFactorAuthAge"
            }
           ],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [],
           "resources": [
            "arn:aws:iam::647170071596:mfa/${aws:username}",
            "arn:aws:iam::647170071596:user/${aws:username}",
            "arn:aws:iam::647170071596:user/*/${aws:username}"
           ],
           "sid": "AllowDeactivateMFADevice"
          }
         ],
         "version": "2012-10-17"
        }
       },
       {
        "address": "module.eks_admins_iam_group.data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_partition",
        "values": {
         "dns_suffix": "amazonaws.com",
         "id": "aws",
         "partition": "aws",
         "reverse_dns_prefix": "com.amazonaws"
        }
       }
      ]
     },
     {
      "address": "module.eks_admins_iam_role",
      "resources": [
       {
        "address": "module.eks_admins_iam_role.data.aws_iam_policy_document.assume_role[0]",
        "index": 0,
        "mode": "data",
        "name": "assume_role",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            },
            {
             "identifiers": []
            }
           ],
           "resources": []
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "2214964315",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::647170071596:root\",\n        \"Service\": []\n      }\n    }\n  ]\n}",
         "override_json": null,
         "override_policy_documents": null,
         "policy_id": null,
         "source_json": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "sts:AssumeRole"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "arn:aws:iam::647170071596:root"
             ],
             "type": "AWS"
            },
            {
             "identifiers": [],
             "type": "Service"
            }
           ],
           "resources": [],
           "sid": ""
          }
         ],
         "version": "2012-10-17"
        }
       }
      ]
     },
     {
      "address": "module.vpc",
      "resources": [
       {
        "address": "module.vpc.aws_eip.nat[0]",
        "index": 0,
        "mode": "managed",
        "name": "nat",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_eip",
        "values": {
         "address": null,
         "allocation_id": "eipalloc-021aad93670fc41fb",
         "associate_with_private_ip": null,
         "association_id": "",
         "carrier_ip": "",
         "customer_owned_ip": "",
         "customer_owned_ipv4_pool": "",
         "domain": "vpc",
         "id": "eipalloc-021aad93670fc41fb",
         "instance": "",
         "network_border_group": "us-east-1",
         "network_interface": "",
         "private_dns": "ip-10-0-101-7.ec2.internal",
         "private_ip": "",
         "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
         "public_ip": "3.217.240.133",
         "public_ipv4_pool": "amazon",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-us-east-1a",
          "Terraform": "true"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-us-east-1a",
          "Terraform": "true"
         },
         "timeouts": null,
         "vpc": true
        }
       },
       {
        "address": "module.vpc.aws_eip.nat[1]",
        "index": 1,
        "mode": "managed",
        "name": "nat",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_eip",
        "values": {
         "address": null,
         "allocation_id": "eipalloc-04667abaa8a3936a4",
         "associate_with_private_ip": null,
         "association_id": "",
         "carrier_ip": "",
         "customer_owned_ip": "",
         "customer_owned_ipv4_pool": "",
         "domain": "vpc",
         "id": "eipalloc-04667abaa8a3936a4",
         "instance": "",
         "network_border_group": "us-east-1",
         "network_interface": "",
         "private_dns": "ip-10-0-102-43.ec2.internal",
         "private_ip": "",
         "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
         "public_ip": "52.71.96.9",
         "public_ipv4_pool": "amazon",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-us-east-1b",
          "Terraform": "true"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-us-east-1b",
          "Terraform": "true"
         },
         "timeouts": null,
         "vpc": true
        }
       },
       {
        "address": "module.vpc.aws_internet_gateway.this[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_internet_gateway",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:internet-gateway/igw-05a1fe28233194c27",
         "id": "igw-05a1fe28233194c27",
         "owner_id": "647170071596",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc",
          "Terraform": "true"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc",
          "Terraform": "true"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.vpc.aws_subnet.private[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-039f059147e745b37",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "us-east-1a",
         "availability_zone_id": "use1-az2",
         "cidr_block": "10.0.1.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-039f059147e745b37",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": false,
         "outpost_arn": "",
         "owner_id": "647170071596",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-private-us-east-1a",
          "Terraform": "true",
          "kubernetes.io/role/internal-elb": "1"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-private-us-east-1a",
          "Terraform": "true",
          "kubernetes.io/role/internal-elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.vpc.aws_subnet.private[1]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-056badd0f81724544",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "us-east-1b",
         "availability_zone_id": "use1-az4",
         "cidr_block": "10.0.2.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-056badd0f81724544",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": false,
         "outpost_arn": "",
         "owner_id": "647170071596",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-private-us-east-1b",
          "Terraform": "true",
          "kubernetes.io/role/internal-elb": "1"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-private-us-east-1b",
          "Terraform": "true",
          "kubernetes.io/role/internal-elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.vpc.aws_subnet.public[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-025cdaab48524b71a",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "us-east-1a",
         "availability_zone_id": "use1-az2",
         "cidr_block": "10.0.101.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-025cdaab48524b71a",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": true,
         "outpost_arn": "",
         "owner_id": "647170071596",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-public-us-east-1a",
          "Terraform": "true",
          "kubernetes.io/role/elb": "1"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-public-us-east-1a",
          "Terraform": "true",
          "kubernetes.io/role/elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.vpc.aws_subnet.public[1]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-0747e0227b375d8e9",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "us-east-1b",
         "availability_zone_id": "use1-az4",
         "cidr_block": "10.0.102.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-0747e0227b375d8e9",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": true,
         "outpost_arn": "",
         "owner_id": "647170071596",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc-public-us-east-1b",
          "Terraform": "true",
          "kubernetes.io/role/elb": "1"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc-public-us-east-1b",
          "Terraform": "true",
          "kubernetes.io/role/elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-0d530b46a737bea5e"
        }
       },
       {
        "address": "module.vpc.aws_vpc.this[0]",
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_vpc",
        "values": {
         "arn": "arn:aws:ec2:us-east-1:647170071596:vpc/vpc-0d530b46a737bea5e",
         "assign_generated_ipv6_cidr_block": false,
         "cidr_block": "10.0.0.0/16",
         "default_network_acl_id": "acl-0699d03be2056eae6",
         "default_route_table_id": "rtb-0d510803f0e14f711",
         "default_security_group_id": "sg-0fd5b9e9286ec2557",
         "dhcp_options_id": "dopt-076314690bac67d23",
         "enable_classiclink": false,
         "enable_classiclink_dns_support": false,
         "enable_dns_hostnames": true,
         "enable_dns_support": true,
         "enable_network_address_usage_metrics": false,
         "id": "vpc-0d530b46a737bea5e",
         "instance_tenancy": "default",
         "ipv4_ipam_pool_id": null,
         "ipv4_netmask_length": null,
         "ipv6_association_id": "",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_network_border_group": "",
         "ipv6_ipam_pool_id": "",
         "ipv6_netmask_length": 0,
         "main_route_table_id": "rtb-0d510803f0e14f711",
         "owner_id": "647170071596",
         "tags": {
          "Environment": "staging",
          "Name": "other-tools-vpc",
          "Terraform": "true"
         },
         "tags_all": {
          "Environment": "staging",
          "Name": "other-tools-vpc",
          "Terraform": "true"
         }
        }
       }
      ]
     }
    ]
   }
  }
 },
 "relevant_attributes": [
  {
   "attribute": [
    "default_network_acl_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.intra"
  },
  {
   "attribute": [
    "certificate_authority",
    0,
    "data"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.public"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]"
  },
  {
   "attribute": [
    "ses_smtp_password_v4"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this[0]"
  },
  {
   "attribute": [
    "cidr_block"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks_admins_iam_group.data.aws_caller_identity.current"
  },
  {
   "attribute": [
    "default_security_group_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this_no_pgp[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.private[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_internet_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.public_internet_gateway[0]"
  },
  {
   "attribute": [
    "labels"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.elasticache"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.elasticache[0]"
  },
  {
   "attribute": [
    "vpc_id"
   ],
   "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]"
  },
  {
   "attribute": [
    "encrypted_secret"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this[0]"
  },
  {
   "attribute": [
    "default_security_group_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.public"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_customer_gateway.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.ecr.aws_ecr_repository.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_identity_provider_config.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "pod_execution_role_arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "main_route_table_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.user1_iam_user.aws_iam_user_login_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpn_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.private"
  },
  {
   "attribute": [
    "ses_smtp_password_v4"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this_no_pgp[0]"
  },
  {
   "attribute": [
    "ipv6_cidr_block"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.user1_iam_user.aws_iam_user.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_vpn_gateway.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.intra[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.public"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.user1_iam_user.aws_iam_user.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "platform_version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.private[0]"
  },
  {
   "attribute": [
    "certificates",
    0,
    "sha1_fingerprint"
   ],
   "resource": "module.eks.data.tls_certificate.this[0]"
  },
  {
   "attribute": [
    "default_route_table_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.public[0]"
  },
  {
   "attribute": [
    "repository_url"
   ],
   "resource": "module.ecr.aws_ecr_repository.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.public_internet_gateway_ipv6[0]"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.vpc.aws_db_subnet_group.database[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.redshift"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "health_check_type"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_internet_gateway.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.intra[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "max_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "default_cooldown"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "min_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "main_route_table_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "path"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.intra"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.outpost[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this"
  },
  {
   "attribute": [
    "health_check_grace_period"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpc_dhcp_options.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "dns_suffix"
   ],
   "resource": "module.eks.data.aws_partition.current"
  },
  {
   "attribute": [
    "ipv6_association_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "encrypted_password"
   ],
   "resource": "module.user1_iam_user.aws_iam_user_login_profile.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_grant.this"
  },
  {
   "attribute": [
    "instance_tenancy"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "default_route_table_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.ecr.aws_ecr_repository.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.redshift[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.redshift"
  },
  {
   "attribute": [
    "path"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "vpc_config",
    0,
    "cluster_security_group_id"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.ecr.aws_ecrpublic_repository.this[0]"
  },
  {
   "attribute": [
    "enable_dns_support"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.redshift"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.database[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "identity",
    0,
    "oidc",
    0,
    "issuer"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks_admins_iam_group.aws_iam_group.this[0]"
  },
  {
   "attribute": [
    "registry_id"
   ],
   "resource": "module.ecr.aws_ecr_repository.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.elasticache[0]"
  },
  {
   "attribute": [
    "key_fingerprint"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "path"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.elasticache"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [
    "vpn_gateway_id"
   ],
   "resource": "module.vpc.aws_vpn_gateway_attachment.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.user1_iam_user.aws_iam_user.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.redshift_public"
  },
  {
   "attribute": [
    "labels"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks_admins_iam_group.aws_iam_group.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.database[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.database"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.private_ipv6_egress"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route_table.public[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_eip.nat"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.database"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.intra"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.elasticache"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.public[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "secret"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this_no_pgp[0]"
  },
  {
   "attribute": [
    "description"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_redshift_subnet_group.redshift[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_flow_log.this[0]"
  },
  {
   "attribute": [
    "endpoint"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_egress_only_internet_gateway.this"
  },
  {
   "attribute": [
    "json"
   ],
   "resource": "module.eks_admins_iam_role.data.aws_iam_policy_document.assume_role[0]"
  },
  {
   "attribute": [
    "labels"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_addon.this"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "policy"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.private"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "enable_dns_hostnames"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "description"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "registry_id"
   ],
   "resource": "module.ecr.aws_ecrpublic_repository.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.outpost[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_alias.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_egress_only_internet_gateway.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "availability_zones"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "cidr_block"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.database"
  },
  {
   "attribute": [
    "desired_capacity"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.user1_iam_user.aws_iam_access_key.this_no_pgp[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks_admins_iam_group.aws_iam_group_membership.this"
  },
  {
   "attribute": [
    "path"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.private_nat_gateway"
  },
  {
   "attribute": [
    "json"
   ],
   "resource": "module.ecr.data.aws_iam_policy_document.repository[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.private"
  },
  {
   "attribute": [
    "instance_tenancy"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "vpc_zone_identifier"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "image_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.data.aws_ami.eks_default[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_nat_gateway.this"
  },
  {
   "attribute": [
    "repository_uri"
   ],
   "resource": "module.ecr.aws_ecrpublic_repository.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.database_ipv6_egress[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks_admins_iam_group.aws_iam_group.this[0]"
  },
  {
   "attribute": [
    "fingerprint"
   ],
   "resource": "module.user1_iam_user.aws_iam_user_ssh_key.this[0]"
  },
  {
   "attribute": [
    "owner_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "enable_dns_hostnames"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "json"
   ],
   "resource": "module.eks_admins_iam_role.data.aws_iam_policy_document.assume_role_with_mfa[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.outpost"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "key_id"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "default_network_acl_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks_admins_iam_role.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.database_internet_gateway[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "key_fingerprint"
   ],
   "resource": "module.user1_iam_user.aws_iam_user_login_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_db_subnet_group.database[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.database_nat_gateway"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]"
  },
  {
   "attribute": [
    "enable_dns_support"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "ssh_public_key_id"
   ],
   "resource": "module.user1_iam_user.aws_iam_user_ssh_key.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.redshift[0]"
  },
  {
   "attribute": [
    "policy"
   ],
   "resource": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]"
  }
 ],
 "resource_changes": [
  {
   "address": "module.allow_assume_eks_admins_iam_policy.aws_iam_policy.policy[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "description": "IAM Policy",
     "name": "allow-assume-eks-admin-iam-role",
     "name_prefix": null,
     "path": "/",
     "tags": null
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "policy": true,
     "policy_id": true,
     "tags_all": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.allow_assume_eks_admins_iam_policy",
   "name": "policy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "module.allow_eks_access_iam_policy.aws_iam_policy.policy[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "description": "IAM Policy",
     "name": "allow-eks-access",
     "name_prefix": null,
     "path": "/",
     "policy": "{\"Statement\":[{\"Action\":[\"eks:DescribeCluster\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
     "tags": null
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "policy_id": true,
     "tags_all": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.allow_eks_access_iam_policy",
   "name": "policy",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_policy"
  },
  {
   "address": "module.ecr.aws_ecr_lifecycle_policy.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Keep last 30 images\",\"rulePriority\":1,\"selection\":{\"countNumber\":30,\"countType\":\"imageCountMoreThan\",\"tagPrefixList\":[\"v\"],\"tagStatus\":\"tagged\"}}]}",
     "repository": "snapshot"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "registry_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.ecr",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecr_lifecycle_policy"
  },
  {
   "address": "module.ecr.aws_ecr_repository.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "encryption_configuration": [
      {
       "encryption_type": "AES256"
      }
     ],
     "force_delete": null,
     "image_scanning_configuration": [
      {
       "scan_on_push": true
      }
     ],
     "image_tag_mutability": "IMMUTABLE",
     "name": "snapshot",
     "tags": {
      "Environment": "staging",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Terraform": "true"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "encryption_configuration": [
      {}
     ],
     "image_scanning_configuration": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "encryption_configuration": [
      {
       "kms_key": true
      }
     ],
     "id": true,
     "image_scanning_configuration": [
      {}
     ],
     "registry_id": true,
     "repository_url": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.ecr",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecr_repository"
  },
  {
   "address": "module.ecr.aws_ecr_repository_policy.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "policy": "{\"Statement\":[{\"Action\":[\"ecr:ListTagsForResource\",\"ecr:ListImages\",\"ecr:GetRepositoryPolicy\",\"ecr:GetLifecyclePolicyPreview\",\"ecr:GetLifecyclePolicy\",\"ecr:GetDownloadUrlForLayer\",\"ecr:GetAuthorizationToken\",\"ecr:DescribeRepositories\",\"ecr:DescribeImages\",\"ecr:DescribeImageScanFindings\",\"ecr:BatchGetImage\",\"ecr:BatchCheckLayerAvailability\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::012345678901:role/terraform\"},\"Sid\":\"PrivateReadOnly\"},{\"Action\":[\"ecr:UploadLayerPart\",\"ecr:PutImage\",\"ecr:InitiateLayerUpload\",\"ecr:CompleteLayerUpload\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::012345678901:role/terraform\"},\"Sid\":\"ReadWrite\"}],\"Version\":\"2012-10-17\"}",
     "repository": "snapshot"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "registry_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.ecr",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecr_repository_policy"
  },
  {
   "address": "module.eks.aws_cloudwatch_log_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster",
     "id": "/aws/eks/my-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/my-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster",
     "id": "/aws/eks/my-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/my-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.eks.aws_ec2_tag.cluster_primary_security_group[\"Environment\"]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "key": "Environment",
     "resource_id": "sg-001c3bad69e124e9e",
     "value": "staging"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": "Environment",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster_primary_security_group",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ec2_tag"
  },
  {
   "address": "module.eks.aws_eks_cluster.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:eks:us-east-1:647170071596:cluster/my-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXlNVEV3TWpJME9Gb1hEVE16TURNeE9ERXdNakkwT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGY4CjJMM0NrMHJHZEdMK0dMNkF0QitEU3cydkZQZWRxZE10MkVVTitvOXp0bEpCY3dVb2lXdGVKUldvMEh6MUw2YkUKMjJMOVJ2OTlyN3E3Q05Qb2tmUGVxeUMwdlE0T01YZzdMU0krcncrV01pc0VpTGFhWWN6R09nNEpuWXNIdFpjawpZWHpiMlMycTVsbUo5UllLUEFVbG5WN1M3YVdYdXVUbDlPNGpnM0FGdVVvNVZEdXJuWnVoSVo3NDEvczYydGZJCktPaHRNb0h5YW5JZzhlRWhJNjZ0ZzNNSHV4bGRXQVpHbVNDMEhhZmhiSWoyaEFRdWhOejk5V0l5MmpCaW8xcVcKcnBjcGNnMW5RbVdHLytFYXRVbkdUMUp1bHAzaFppQ3BhNkVRWUo1S2hLMDhoTElwY3lBSFZucUZtelRYSnF2ZApCTHNMNDBiNUxRZVFxdGtHTXNzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIWDFTOS9PTVg4TGRrK3VIQ3ZidlRnUkxmSjdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1MwZXFJeHNteUFXVkpYa25BQQpDVVdhSVJVTjRicm93ZlNSWnZMWGhhRm1PNlVlcG5BVFE4NFZZdHFaQlNlMFlJblNHK1pGa08ydGtoaytBQkR3CndnSW1lRGVmbm94WGY3K205YTg5eGFRdkFEN2Q1TVZ3aW0zQTJNVGtVRGxQKzBUeUZxNnFaZW15TGZRMnJDL3IKdGI4ZTRwODdKMTZhRWdSNmpjUEZkS1pwdzRoU3F1QWR5d0hzcWd1Z1pUSFdvNURpWHp1WVpKR09ubWRHNFJEMgo5K3JwWVNtcVk3bnE0bS84Z2dKbjBISWVTSlhUOVF6ZjRGY2FNaWw4cE4yeHIrTTh4UnJGMDFQbDhOYmlBd09SCk5lSWpVM0VyOGJreXFnaWNlb1paMU9IL1hNdXpFYmkxU0xKVTVOTnVGaE85MXRrV1ZWaVgrMTl4NHNNNEV4YVcKeG1RPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-21 10:17:01.909 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://DCCF780FC092DCCC68304E31D80A455E.gr7.us-east-1.eks.amazonaws.com",
     "id": "my-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my-eks",
     "outpost_config": [],
     "platform_version": "eks.6",
     "role_arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
     "status": "ACTIVE",
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.23",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-001c3bad69e124e9e",
       "endpoint_private_access": true,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-089ed2ede29616016"
       ],
       "subnet_ids": [
        "subnet-039f059147e745b37",
        "subnet-056badd0f81724544"
       ],
       "vpc_id": "vpc-0d530b46a737bea5e"
      }
     ]
    },
    "after_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:eks:us-east-1:647170071596:cluster/my-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXlNVEV3TWpJME9Gb1hEVE16TURNeE9ERXdNakkwT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGY4CjJMM0NrMHJHZEdMK0dMNkF0QitEU3cydkZQZWRxZE10MkVVTitvOXp0bEpCY3dVb2lXdGVKUldvMEh6MUw2YkUKMjJMOVJ2OTlyN3E3Q05Qb2tmUGVxeUMwdlE0T01YZzdMU0krcncrV01pc0VpTGFhWWN6R09nNEpuWXNIdFpjawpZWHpiMlMycTVsbUo5UllLUEFVbG5WN1M3YVdYdXVUbDlPNGpnM0FGdVVvNVZEdXJuWnVoSVo3NDEvczYydGZJCktPaHRNb0h5YW5JZzhlRWhJNjZ0ZzNNSHV4bGRXQVpHbVNDMEhhZmhiSWoyaEFRdWhOejk5V0l5MmpCaW8xcVcKcnBjcGNnMW5RbVdHLytFYXRVbkdUMUp1bHAzaFppQ3BhNkVRWUo1S2hLMDhoTElwY3lBSFZucUZtelRYSnF2ZApCTHNMNDBiNUxRZVFxdGtHTXNzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZIWDFTOS9PTVg4TGRrK3VIQ3ZidlRnUkxmSjdNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1MwZXFJeHNteUFXVkpYa25BQQpDVVdhSVJVTjRicm93ZlNSWnZMWGhhRm1PNlVlcG5BVFE4NFZZdHFaQlNlMFlJblNHK1pGa08ydGtoaytBQkR3CndnSW1lRGVmbm94WGY3K205YTg5eGFRdkFEN2Q1TVZ3aW0zQTJNVGtVRGxQKzBUeUZxNnFaZW15TGZRMnJDL3IKdGI4ZTRwODdKMTZhRWdSNmpjUEZkS1pwdzRoU3F1QWR5d0hzcWd1Z1pUSFdvNURpWHp1WVpKR09ubWRHNFJEMgo5K3JwWVNtcVk3bnE0bS84Z2dKbjBISWVTSlhUOVF6ZjRGY2FNaWw4cE4yeHIrTTh4UnJGMDFQbDhOYmlBd09SCk5lSWpVM0VyOGJreXFnaWNlb1paMU9IL1hNdXpFYmkxU0xKVTVOTnVGaE85MXRrV1ZWaVgrMTl4NHNNNEV4YVcKeG1RPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-21 10:17:01.909 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://DCCF780FC092DCCC68304E31D80A455E.gr7.us-east-1.eks.amazonaws.com",
     "id": "my-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "172.20.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "my-eks",
     "outpost_config": [],
     "platform_version": "eks.6",
     "role_arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
     "status": "ACTIVE",
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.23",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-001c3bad69e124e9e",
       "endpoint_private_access": true,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-089ed2ede29616016"
       ],
       "subnet_ids": [
        "subnet-039f059147e745b37",
        "subnet-056badd0f81724544"
       ],
       "vpc_id": "vpc-0d530b46a737bea5e"
      }
     ]
    },
    "before_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false
       ]
      }
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "client_id_list": [
      "sts.amazonaws.com"
     ],
     "tags": {
      "Environment": "staging",
      "Name": "my-eks-eks-irsa"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "my-eks-eks-irsa"
     },
     "thumbprint_list": [
      "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
     ],
     "url": "https://oidc.eks.us-east-1.amazonaws.com/id/DCCF780FC092DCCC68304E31D80A455E"
    },
    "after_sensitive": {
     "client_id_list": [
      false
     ],
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false
     ]
    },
    "after_unknown": {
     "arn": true,
     "client_id_list": [
      false
     ],
     "id": true,
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false
     ]
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "oidc_provider",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_openid_connect_provider"
  },
  {
   "address": "module.eks.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:28Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my-eks-cluster-20230321101628014600000003",
     "inline_policy": [
      {
       "name": "my-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "my-eks-cluster-20230321101628014600000003",
     "name_prefix": "my-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWE7CUPK6U6"
    },
    "after_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::647170071596:role/my-eks-cluster-20230321101628014600000003",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:28Z",
     "description": "",
     "force_detach_policies": true,
     "id": "my-eks-cluster-20230321101628014600000003",
     "inline_policy": [
      {
       "name": "my-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"arn:aws:logs:us-east-1:647170071596:log-group:/aws/eks/my-eks/cluster\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "my-eks-cluster-20230321101628014600000003",
     "name_prefix": "my-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWE7CUPK6U6"
    },
    "before_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "my-eks-cluster-20230321101628014600000003-2023032110163047520000000b",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "my-eks-cluster-20230321101628014600000003"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "my-eks-cluster-20230321101628014600000003-2023032110163047520000000b",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "my-eks-cluster-20230321101628014600000003"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "my-eks-cluster-20230321101628014600000003-2023032110163042340000000a",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "my-eks-cluster-20230321101628014600000003"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "my-eks-cluster-20230321101628014600000003-2023032110163042340000000a",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "my-eks-cluster-20230321101628014600000003"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_security_group.cluster[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-089ed2ede29616016",
     "description": "EKS cluster security group",
     "egress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 10250
      }
     ],
     "id": "sg-089ed2ede29616016",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "my-eks-cluster-2023032110164139490000000c",
     "name_prefix": "my-eks-cluster-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "my-eks-cluster"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "my-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-089ed2ede29616016",
     "description": "EKS cluster security group",
     "egress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 10250
      }
     ],
     "id": "sg-089ed2ede29616016",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0c0b65d3882cec69f"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "my-eks-cluster-2023032110164139490000000c",
     "name_prefix": "my-eks-cluster-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "my-eks-cluster"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "my-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group.node[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0c0b65d3882cec69f",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/TCP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/UDP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress all HTTPS to internet",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "id": "sg-0c0b65d3882cec69f",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "name": "my-eks-node-2023032110164298520000000d",
     "name_prefix": "my-eks-node-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "my-eks-node",
      "kubernetes.io/cluster/my-eks": "owned"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "my-eks-node",
      "kubernetes.io/cluster/my-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0c0b65d3882cec69f",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/TCP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/UDP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress all HTTPS to internet",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "id": "sg-0c0b65d3882cec69f",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-089ed2ede29616016"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "name": "my-eks-node-2023032110164298520000000d",
     "name_prefix": "my-eks-node-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "my-eks-node",
      "kubernetes.io/cluster/my-eks": "owned"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "my-eks-node",
      "kubernetes.io/cluster/my-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-233501280",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-096aa520d98c86342",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-233501280",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-096aa520d98c86342",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_nodes_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-182106312",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-045576eeb44c942c1",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 10250,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-182106312",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-045576eeb44c942c1",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 10250,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_nodes_kubelet",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-3605358251",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-096aa520d98c86342",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-3605358251",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-089ed2ede29616016",
     "security_group_rule_id": "sgr-096aa520d98c86342",
     "self": false,
     "source_security_group_id": "sg-0c0b65d3882cec69f",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_nodes_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-568527955",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0096857c30d67d201",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-568527955",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0096857c30d67d201",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress all HTTPS to internet",
     "from_port": 443,
     "id": "sgrule-167872820",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-00333bc436ae3ae4c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress all HTTPS to internet",
     "from_port": 443,
     "id": "sgrule-167872820",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-00333bc436ae3ae4c",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_https",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/TCP to internet",
     "from_port": 123,
     "id": "sgrule-3588207658",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-05d9909f16463a0b2",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/TCP to internet",
     "from_port": 123,
     "id": "sgrule-3588207658",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-05d9909f16463a0b2",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_ntp_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/UDP to internet",
     "from_port": 123,
     "id": "sgrule-2873200935",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0d193ef2c8f113468",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/UDP to internet",
     "from_port": 123,
     "id": "sgrule-2873200935",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0d193ef2c8f113468",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_ntp_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-1334105497",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0814240a8f6b52b74",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-1334105497",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0814240a8f6b52b74",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_self_coredns_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-3252901887",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-06278ddfac1946e19",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-3252901887",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-06278ddfac1946e19",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-3235579394",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0096857c30d67d201",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-3235579394",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0096857c30d67d201",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-1084777609",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0473d8989672aa8b2",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-1084777609",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0473d8989672aa8b2",
     "self": false,
     "source_security_group_id": "sg-089ed2ede29616016",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_kubelet",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-314982964",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0814240a8f6b52b74",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-314982964",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0814240a8f6b52b74",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-3063538139",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0c6b1c93cb709947b",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-3063538139",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-0c0b65d3882cec69f",
     "security_group_rule_id": "sgr-0c6b1c93cb709947b",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "capacity_type": "ON_DEMAND",
     "cluster_name": "my-eks",
     "force_update_version": null,
     "instance_types": [
      "t3.small"
     ],
     "labels": {
      "role": "general"
     },
     "launch_template": [
      {
       "name": "general-20230321102729410000000014",
       "version": "1"
      }
     ],
     "node_group_name_prefix": "general-",
     "node_role_arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
     "remote_access": [],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 10,
       "min_size": 1
      }
     ],
     "subnet_ids": [
      "subnet-039f059147e745b37",
      "subnet-056badd0f81724544"
     ],
     "tags": {
      "Environment": "staging",
      "Name": "general"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "general"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.23"
    },
    "after_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": []
    },
    "after_unknown": {
     "ami_type": true,
     "arn": true,
     "disk_size": true,
     "id": true,
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {
       "id": true
      }
     ],
     "node_group_name": true,
     "release_version": true,
     "remote_access": [],
     "resources": true,
     "scaling_config": [
      {}
     ],
     "status": true,
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:27Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "general-eks-node-group-20230321101626182100000002",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "general-eks-node-group-20230321101626182100000002",
     "name_prefix": "general-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWNEUJDLA4B"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:27Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "general-eks-node-group-20230321101626182100000002",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "general-eks-node-group-20230321101626182100000002",
     "name_prefix": "general-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWNEUJDLA4B"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628481900000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628481900000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628794200000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628794200000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628622000000005",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "general-eks-node-group-20230321101626182100000002-20230321101628622000000005",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "general-eks-node-group-20230321101626182100000002"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-0121f11fe8e9bbf52",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for general EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0121f11fe8e9bbf52",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "general-20230321102729410000000014",
     "name_prefix": "general-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      }
     ],
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-03138577ccfa715e3",
      "sg-0c0b65d3882cec69f"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-0121f11fe8e9bbf52",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for general EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0121f11fe8e9bbf52",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "general-20230321102729410000000014",
     "name_prefix": "general-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Environment": "staging",
        "Name": "general"
       }
      }
     ],
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-03138577ccfa715e3",
      "sg-0c0b65d3882cec69f"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_security_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-03138577ccfa715e3",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-03138577ccfa715e3",
     "ingress": [],
     "name": "general-eks-node-group-2023032110164300940000000e",
     "name_prefix": "general-eks-node-group-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "general-eks-node-group"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "general-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-03138577ccfa715e3",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-03138577ccfa715e3",
     "ingress": [],
     "name": "general-eks-node-group-2023032110164300940000000e",
     "name_prefix": "general-eks-node-group-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "general-eks-node-group"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "general-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "capacity_type": "SPOT",
     "cluster_name": "my-eks",
     "force_update_version": null,
     "instance_types": [
      "t3.micro"
     ],
     "labels": {
      "role": "spot"
     },
     "launch_template": [
      {
       "name": "spot-20230321102729407400000012",
       "version": "1"
      }
     ],
     "node_group_name_prefix": "spot-",
     "node_role_arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
     "remote_access": [],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 10,
       "min_size": 1
      }
     ],
     "subnet_ids": [
      "subnet-039f059147e745b37",
      "subnet-056badd0f81724544"
     ],
     "tags": {
      "Environment": "staging",
      "Name": "spot"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "spot"
     },
     "taint": [
      {
       "effect": "NO_SCHEDULE",
       "key": "market",
       "value": "spot"
      }
     ],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.23"
    },
    "after_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [
      {}
     ],
     "timeouts": {},
     "update_config": []
    },
    "after_unknown": {
     "ami_type": true,
     "arn": true,
     "disk_size": true,
     "id": true,
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {
       "id": true
      }
     ],
     "node_group_name": true,
     "release_version": true,
     "remote_access": [],
     "resources": true,
     "scaling_config": [
      {}
     ],
     "status": true,
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [
      {}
     ],
     "timeouts": {},
     "update_config": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:27Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "spot-eks-node-group-20230321101626181600000001",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "spot-eks-node-group-20230321101626181600000001",
     "name_prefix": "spot-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWOTJZRWAP7"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-21T10:16:27Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "spot-eks-node-group-20230321101626181600000001",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "spot-eks-node-group-20230321101626181600000001",
     "name_prefix": "spot-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "unique_id": "AROAZNLSXTQWOTJZRWAP7"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101628896200000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101628896200000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101629030000000009",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101629030000000009",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101629020800000008",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "spot-eks-node-group-20230321101626181600000001-20230321101629020800000008",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "spot-eks-node-group-20230321101626181600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-059233327e26eeea7",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for spot EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-059233327e26eeea7",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "spot-20230321102729407400000012",
     "name_prefix": "spot-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      }
     ],
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0b1202a53bafe33b7",
      "sg-0c0b65d3882cec69f"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:launch-template/lt-059233327e26eeea7",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for spot EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-059233327e26eeea7",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "spot-20230321102729407400000012",
     "name_prefix": "spot-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Environment": "staging",
        "Name": "spot"
       }
      }
     ],
     "tags": {
      "Environment": "staging"
     },
     "tags_all": {
      "Environment": "staging"
     },
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-0b1202a53bafe33b7",
      "sg-0c0b65d3882cec69f"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_security_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0b1202a53bafe33b7",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-0b1202a53bafe33b7",
     "ingress": [],
     "name": "spot-eks-node-group-2023032110164319760000000f",
     "name_prefix": "spot-eks-node-group-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "spot-eks-node-group"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "spot-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:security-group/sg-0b1202a53bafe33b7",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-0b1202a53bafe33b7",
     "ingress": [],
     "name": "spot-eks-node-group-2023032110164319760000000f",
     "name_prefix": "spot-eks-node-group-",
     "owner_id": "647170071596",
     "revoke_rules_on_delete": false,
     "tags": {
      "Environment": "staging",
      "Name": "spot-eks-node-group"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "spot-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks_admins_iam_group.aws_iam_group.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "name": "eks-admin",
     "path": "/"
    },
    "after_sensitive": {},
    "after_unknown": {
     "arn": true,
     "id": true,
     "unique_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks_admins_iam_group",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_group"
  },
  {
   "address": "module.eks_admins_iam_group.aws_iam_group_membership.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "name": "eks-admin",
     "users": [
      "user1"
     ]
    },
    "after_sensitive": {
     "users": [
      false
     ]
    },
    "after_unknown": {
     "group": true,
     "id": true,
     "users": [
      false
     ]
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks_admins_iam_group",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_group_membership"
  },
  {
   "address": "module.eks_admins_iam_group.aws_iam_group_policy_attachment.custom_arns[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {},
    "after_sensitive": {},
    "after_unknown": {
     "group": true,
     "id": true,
     "policy_arn": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks_admins_iam_group",
   "name": "custom_arns",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_group_policy_attachment"
  },
  {
   "address": "module.eks_admins_iam_role.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::647170071596:root\",\"Service\":[]},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
     "description": "",
     "force_detach_policies": false,
     "max_session_duration": 3600,
     "name": "eks-admin",
     "path": "/",
     "permissions_boundary": "",
     "tags": null
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "create_date": true,
     "id": true,
     "inline_policy": true,
     "managed_policy_arns": true,
     "name_prefix": true,
     "tags_all": true,
     "unique_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks_admins_iam_role",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks_admins_iam_role.aws_iam_role_policy_attachment.custom[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "role": "eks-admin"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "policy_arn": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks_admins_iam_role",
   "name": "custom",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.user1_iam_user.aws_iam_user.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "force_destroy": true,
     "name": "user1",
     "path": "/",
     "permissions_boundary": "",
     "tags": null
    },
    "after_sensitive": {
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "tags_all": true,
     "unique_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.user1_iam_user",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_user"
  },
  {
   "address": "module.vpc.aws_eip.nat[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-021aad93670fc41fb",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-101-7.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
     "public_ip": "3.217.240.133",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-021aad93670fc41fb",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-101-7.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
     "public_ip": "3.217.240.133",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.vpc.aws_eip.nat[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-04667abaa8a3936a4",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-102-43.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
     "public_ip": "52.71.96.9",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-04667abaa8a3936a4",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-102-43.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
     "public_ip": "52.71.96.9",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.vpc.aws_internet_gateway.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:internet-gateway/igw-05a1fe28233194c27",
     "id": "igw-05a1fe28233194c27",
     "owner_id": "647170071596",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:internet-gateway/igw-05a1fe28233194c27",
     "id": "igw-05a1fe28233194c27",
     "owner_id": "647170071596",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_internet_gateway"
  },
  {
   "address": "module.vpc.aws_nat_gateway.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "connectivity_type": "public",
     "subnet_id": "subnet-025cdaab48524b71a",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "id": true,
     "network_interface_id": true,
     "private_ip": true,
     "public_ip": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "module.vpc.aws_nat_gateway.this[1]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "connectivity_type": "public",
     "subnet_id": "subnet-0747e0227b375d8e9",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "id": true,
     "network_interface_id": true,
     "private_ip": true,
     "public_ip": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "module.vpc.aws_route.private_nat_gateway[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": null,
     "local_gateway_id": null,
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "nat_gateway_id": true,
     "network_interface_id": true,
     "origin": true,
     "route_table_id": true,
     "state": true,
     "timeouts": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.vpc.aws_route.private_nat_gateway[1]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": null,
     "local_gateway_id": null,
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "nat_gateway_id": true,
     "network_interface_id": true,
     "origin": true,
     "route_table_id": true,
     "state": true,
     "timeouts": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.vpc.aws_route.public_internet_gateway[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": "igw-05a1fe28233194c27",
     "local_gateway_id": null,
     "nat_gateway_id": null,
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "network_interface_id": true,
     "origin": true,
     "route_table_id": true,
     "state": true,
     "timeouts": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public_internet_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.vpc.aws_route_table.private[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "propagating_vgws": true,
     "route": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.vpc.aws_route_table.private[1]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "propagating_vgws": true,
     "route": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.vpc.aws_route_table.public[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "arn": true,
     "id": true,
     "owner_id": true,
     "propagating_vgws": true,
     "route": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.vpc.aws_route_table_association.private[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "gateway_id": null,
     "subnet_id": "subnet-039f059147e745b37"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "route_table_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.private[1]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "gateway_id": null,
     "subnet_id": "subnet-056badd0f81724544"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "route_table_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.public[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "gateway_id": null,
     "subnet_id": "subnet-025cdaab48524b71a"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "route_table_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.public[1]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "gateway_id": null,
     "subnet_id": "subnet-0747e0227b375d8e9"
    },
    "after_sensitive": {},
    "after_unknown": {
     "id": true,
     "route_table_id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_subnet.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-039f059147e745b37",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-039f059147e745b37",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-039f059147e745b37",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-039f059147e745b37",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.private[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-056badd0f81724544",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az4",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-056badd0f81724544",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-056badd0f81724544",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az4",
     "cidr_block": "10.0.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-056badd0f81724544",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-private-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-025cdaab48524b71a",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.101.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-025cdaab48524b71a",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-025cdaab48524b71a",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1a",
     "availability_zone_id": "use1-az2",
     "cidr_block": "10.0.101.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-025cdaab48524b71a",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1a",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.public[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-0747e0227b375d8e9",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az4",
     "cidr_block": "10.0.102.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0747e0227b375d8e9",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:subnet/subnet-0747e0227b375d8e9",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "us-east-1b",
     "availability_zone_id": "use1-az4",
     "cidr_block": "10.0.102.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0747e0227b375d8e9",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "647170071596",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-public-us-east-1b",
      "Terraform": "true",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-0d530b46a737bea5e"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_vpc.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:vpc/vpc-0d530b46a737bea5e",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.0.0.0/16",
     "default_network_acl_id": "acl-0699d03be2056eae6",
     "default_route_table_id": "rtb-0d510803f0e14f711",
     "default_security_group_id": "sg-0fd5b9e9286ec2557",
     "dhcp_options_id": "dopt-076314690bac67d23",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-0d530b46a737bea5e",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-0d510803f0e14f711",
     "owner_id": "647170071596",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:us-east-1:647170071596:vpc/vpc-0d530b46a737bea5e",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "10.0.0.0/16",
     "default_network_acl_id": "acl-0699d03be2056eae6",
     "default_route_table_id": "rtb-0d510803f0e14f711",
     "default_security_group_id": "sg-0fd5b9e9286ec2557",
     "dhcp_options_id": "dopt-076314690bac67d23",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-0d530b46a737bea5e",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-0d510803f0e14f711",
     "owner_id": "647170071596",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc",
      "Terraform": "true"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_vpc"
  }
 ],
 "resource_drift": [
  {
   "address": "module.eks.module.eks_managed_node_group[\"general\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "delete"
    ],
    "after": null,
    "after_sensitive": false,
    "after_unknown": {},
    "before": {
     "ami_type": "AL2_x86_64",
     "arn": "arn:aws:eks:us-east-1:647170071596:nodegroup/my-eks/general-20230321102731177500000016/f6c381da-d8ad-8527-06c4-fd7e4d037723",
     "capacity_type": "ON_DEMAND",
     "cluster_name": "my-eks",
     "disk_size": 0,
     "force_update_version": null,
     "id": "my-eks:general-20230321102731177500000016",
     "instance_types": [
      "t3.small"
     ],
     "labels": {
      "role": "general"
     },
     "launch_template": [
      {
       "id": "lt-0121f11fe8e9bbf52",
       "name": "general-20230321102729410000000014",
       "version": "1"
      }
     ],
     "node_group_name": "general-20230321102731177500000016",
     "node_group_name_prefix": "general-",
     "node_role_arn": "arn:aws:iam::647170071596:role/general-eks-node-group-20230321101626182100000002",
     "release_version": "1.23.16-20230304",
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {
         "name": "eks-general-20230321102731177500000016-f6c381da-d8ad-8527-06c4-fd7e4d037723"
        }
       ],
       "remote_access_security_group_id": ""
      }
     ],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 10,
       "min_size": 1
      }
     ],
     "status": "ACTIVE",
     "subnet_ids": [
      "subnet-039f059147e745b37",
      "subnet-056badd0f81724544"
     ],
     "tags": {
      "Environment": "staging",
      "Name": "general"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "general"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [
      {
       "max_unavailable": 1,
       "max_unavailable_percentage": 0
      }
     ],
     "version": "1.23"
    },
    "before_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {}
       ]
      }
     ],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": [
      {}
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"general\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"spot\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "delete"
    ],
    "after": null,
    "after_sensitive": false,
    "after_unknown": {},
    "before": {
     "ami_type": "AL2_x86_64",
     "arn": "arn:aws:eks:us-east-1:647170071596:nodegroup/my-eks/spot-20230321102731177500000018/56c381da-d8af-a143-0421-35b97ed81732",
     "capacity_type": "SPOT",
     "cluster_name": "my-eks",
     "disk_size": 0,
     "force_update_version": null,
     "id": "my-eks:spot-20230321102731177500000018",
     "instance_types": [
      "t3.micro"
     ],
     "labels": {
      "role": "spot"
     },
     "launch_template": [
      {
       "id": "lt-059233327e26eeea7",
       "name": "spot-20230321102729407400000012",
       "version": "1"
      }
     ],
     "node_group_name": "spot-20230321102731177500000018",
     "node_group_name_prefix": "spot-",
     "node_role_arn": "arn:aws:iam::647170071596:role/spot-eks-node-group-20230321101626181600000001",
     "release_version": "1.23.16-20230304",
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {
         "name": "eks-spot-20230321102731177500000018-56c381da-d8af-a143-0421-35b97ed81732"
        }
       ],
       "remote_access_security_group_id": ""
      }
     ],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 10,
       "min_size": 1
      }
     ],
     "status": "ACTIVE",
     "subnet_ids": [
      "subnet-039f059147e745b37",
      "subnet-056badd0f81724544"
     ],
     "tags": {
      "Environment": "staging",
      "Name": "spot"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "spot"
     },
     "taint": [
      {
       "effect": "NO_SCHEDULE",
       "key": "market",
       "value": "spot"
      }
     ],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [
      {
       "max_unavailable": 1,
       "max_unavailable_percentage": 0
      }
     ],
     "version": "1.23"
    },
    "before_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {}
       ]
      }
     ],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [
      {}
     ],
     "timeouts": {},
     "update_config": [
      {}
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"spot\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.vpc.aws_eip.nat[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-021aad93670fc41fb",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-101-7.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
     "public_ip": "3.217.240.133",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-034f2faa77f1cb06c",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-021aad93670fc41fb",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "eni-043481eec9f349356",
     "private_dns": "ip-10-0-101-7.ec2.internal",
     "private_ip": "10.0.101.7",
     "public_dns": "ec2-3-217-240-133.compute-1.amazonaws.com",
     "public_ip": "3.217.240.133",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.vpc.aws_eip.nat[1]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "address": null,
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "associate_with_private_ip": null,
     "association_id": "",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-04667abaa8a3936a4",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "",
     "private_dns": "ip-10-0-102-43.ec2.internal",
     "private_ip": "",
     "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
     "public_ip": "52.71.96.9",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "address": null,
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "associate_with_private_ip": null,
     "association_id": "eipassoc-02279a05b11884dab",
     "carrier_ip": "",
     "customer_owned_ip": "",
     "customer_owned_ipv4_pool": "",
     "domain": "vpc",
     "id": "eipalloc-04667abaa8a3936a4",
     "instance": "",
     "network_border_group": "us-east-1",
     "network_interface": "eni-0bfc3910f814b64d0",
     "private_dns": "ip-10-0-102-43.ec2.internal",
     "private_ip": "10.0.102.43",
     "public_dns": "ec2-52-71-96-9.compute-1.amazonaws.com",
     "public_ip": "52.71.96.9",
     "public_ipv4_pool": "amazon",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "timeouts": null,
     "vpc": true
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.vpc.aws_nat_gateway.this[0]",
   "change": {
    "actions": [
     "delete"
    ],
    "after": null,
    "after_sensitive": false,
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-021aad93670fc41fb",
     "connectivity_type": "public",
     "id": "nat-0115f6dfac01892ab",
     "network_interface_id": "eni-043481eec9f349356",
     "private_ip": "10.0.101.7",
     "public_ip": "3.217.240.133",
     "subnet_id": "subnet-025cdaab48524b71a",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1a",
      "Terraform": "true"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "module.vpc.aws_nat_gateway.this[1]",
   "change": {
    "actions": [
     "delete"
    ],
    "after": null,
    "after_sensitive": false,
    "after_unknown": {},
    "before": {
     "allocation_id": "eipalloc-04667abaa8a3936a4",
     "connectivity_type": "public",
     "id": "nat-040f5ddc85afbb56a",
     "network_interface_id": "eni-0bfc3910f814b64d0",
     "private_ip": "10.0.102.43",
     "public_ip": "52.71.96.9",
     "subnet_id": "subnet-0747e0227b375d8e9",
     "tags": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     },
     "tags_all": {
      "Environment": "staging",
      "Name": "other-tools-vpc-us-east-1b",
      "Terraform": "true"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  }
 ],
 "terraform_version": "1.2.8",
 "variables": {
  "credentials": {
   "value": {
    "access_key": "AKIAZNLSXTQWJS6NUO32",
    "secret_key": "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"
   }
  },
  "environment": {
   "value": "staging"
  },
  "region": {
   "value": [
    "us-east-1"
   ]
  }
 }
}]